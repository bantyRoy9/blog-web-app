{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport crossFetch from 'cross-fetch';\nimport idx from '@okta/okta-idx-js';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _get from '@babel/runtime/helpers/get';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\n\nfunction _createSuper$n(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$n();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$n() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar CustomError = /*#__PURE__*/function (_Error) {\n  _inherits(CustomError, _Error);\n\n  var _super = _createSuper$n(CustomError);\n\n  function CustomError(message) {\n    var _this;\n\n    _classCallCheck(this, CustomError);\n\n    _this = _super.call(this, message);\n    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof CustomError ? this.constructor : void 0).prototype);\n    return _this;\n  }\n\n  return CustomError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction _createSuper$m(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$m();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$m() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthApiError = /*#__PURE__*/function (_CustomError) {\n  _inherits(AuthApiError, _CustomError);\n\n  var _super = _createSuper$m(AuthApiError);\n\n  function AuthApiError(err, xhr) {\n    var _this;\n\n    _classCallCheck(this, AuthApiError);\n\n    var message = err.errorSummary;\n    _this = _super.call(this, message);\n    _this.name = 'AuthApiError';\n    _this.errorSummary = err.errorSummary;\n    _this.errorCode = err.errorCode;\n    _this.errorLink = err.errorLink;\n    _this.errorId = err.errorId;\n    _this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      _this.xhr = xhr;\n    }\n\n    return _this;\n  }\n\n  return AuthApiError;\n}(CustomError);\n\nfunction _createSuper$l(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$l();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$l() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthPollStopError = /*#__PURE__*/function (_CustomError) {\n  _inherits(AuthPollStopError, _CustomError);\n\n  var _super = _createSuper$l(AuthPollStopError);\n\n  function AuthPollStopError() {\n    _classCallCheck(this, AuthPollStopError);\n\n    var message = 'The poll was stopped by the sdk';\n    return _super.call(this, message);\n  }\n\n  return AuthPollStopError;\n}(CustomError);\n\nfunction _createSuper$k(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$k();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$k() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthSdkError = /*#__PURE__*/function (_CustomError) {\n  _inherits(AuthSdkError, _CustomError);\n\n  var _super = _createSuper$k(AuthSdkError);\n\n  function AuthSdkError(msg, xhr) {\n    var _this;\n\n    _classCallCheck(this, AuthSdkError);\n\n    _this = _super.call(this, msg);\n    _this.name = 'AuthSdkError';\n    _this.errorCode = 'INTERNAL';\n    _this.errorSummary = msg;\n    _this.errorLink = 'INTERNAL';\n    _this.errorId = 'INTERNAL';\n    _this.errorCauses = [];\n\n    if (xhr) {\n      _this.xhr = xhr;\n    }\n\n    return _this;\n  }\n\n  return AuthSdkError;\n}(CustomError);\n\nfunction _createSuper$j(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$j();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$j() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar OAuthError = /*#__PURE__*/function (_CustomError) {\n  _inherits(OAuthError, _CustomError);\n\n  var _super = _createSuper$j(OAuthError);\n\n  function OAuthError(errorCode, summary) {\n    var _this;\n\n    _classCallCheck(this, OAuthError);\n\n    _this = _super.call(this, summary);\n    _this.name = 'OAuthError';\n    _this.errorCode = errorCode;\n    _this.errorSummary = summary;\n    return _this;\n  }\n\n  return OAuthError;\n}(CustomError);\n\nfunction isAuthApiError(obj) {\n  return obj instanceof AuthApiError;\n}\n\nvar a = function a(str) {\n  return atob(str);\n};\n\nvar b = function b(str) {\n  return btoa(str);\n};\n\nvar c = typeof crypto === 'undefined' ? null : crypto;\n\nfunction stringToBase64Url(str) {\n  var b64 = b(str);\n  return base64ToBase64Url(b64);\n}\n\nfunction base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nfunction base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nfunction base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n\n  switch (b64.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      b64 += '==';\n      break;\n\n    case 3:\n      b64 += '=';\n      break;\n\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n\n  var utf8 = a(b64);\n\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nfunction stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n}\n\nfunction base64UrlDecode(str) {\n  return a(base64UrlToBase64(str));\n}\n\nfunction getOidcHash(str) {\n  var buffer = new TextEncoder().encode(str);\n  return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf);\n    var b64u = stringToBase64Url(hash);\n    return b64u;\n  });\n}\n\nfunction getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getConsole() {\n  var nativeConsole = getNativeConsole();\n\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n\n  return {\n    log: function log() {},\n    warn: function warn() {},\n    group: function group() {},\n    groupEnd: function groupEnd() {}\n  };\n}\n\nfunction warn(text) {\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n}\n\nfunction deprecate(text) {\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n}\n\nfunction deprecateWrap(text, fn) {\n  return function () {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\nfunction urlParamsToObject(hashOrSearch) {\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n  var obj = {};\n  var param;\n\n  while (true) {\n    param = paramSplit.exec(fragment);\n\n    if (!param) {\n      break;\n    }\n\n    var key = param[1];\n    var value = param[2];\n\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n\n  return obj;\n}\n\nfunction isEmailVerifyCallback(urlPath) {\n  return /(stateTokenExternalId=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\nfunction parseEmailVerifyCallback(urlPath) {\n  return urlParamsToObject(urlPath);\n}\n\nfunction isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n  return isoDate.toUTCString();\n}\n\nfunction genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n\n  return random;\n}\n\nfunction delay(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nfunction bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\nfunction extend() {\n  var obj1 = arguments[0];\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function (obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1;\n}\n\nfunction removeNils(obj) {\n  var cleaned = {};\n\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n\n  return cleaned;\n}\n\nfunction clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n\n  return obj;\n}\n\nfunction omit(obj) {\n  var newobj = {};\n\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n\n  return clone(newobj);\n}\n\nfunction find(collection, searchParams) {\n  var c = collection.length;\n\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n\n    if (found) {\n      return item;\n    }\n  }\n}\n\nfunction getLink(obj, linkName, altName) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\nfunction isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nfunction isNumber(obj) {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nfunction isFunction(fn) {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nfunction isPromise(obj) {\n  return obj && obj.finally && typeof obj.finally === 'function';\n}\n\nfunction isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nfunction toAbsoluteUrl() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var baseUrl = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? \"\".concat(baseUrl).concat(url) : \"\".concat(baseUrl, \"/\").concat(url);\n}\n\nfunction toRelativeUrl() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var baseUrl = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : \"/\".concat(url);\n}\n\nfunction toQueryString(obj) {\n  var str = [];\n\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key] !== undefined && obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]));\n      }\n    }\n  }\n\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nfunction removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n\n  var trimmed = path.replace(/^\\s+|\\s+$/gm, '');\n  trimmed = trimmed.replace(/\\/+$/, '');\n  return trimmed;\n}\n\nfunction verifyToken$1(idToken, key) {\n  key = clone(key);\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n  delete key.use;\n  return c.subtle.importKey(format, key, algo, extractable, usages).then(function (cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n    return c.subtle.verify(algo, cryptoKey, signature, payload);\n  });\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  stringToBase64Url: stringToBase64Url,\n  base64ToBase64Url: base64ToBase64Url,\n  base64UrlToBase64: base64UrlToBase64,\n  base64UrlToString: base64UrlToString,\n  stringToBuffer: stringToBuffer,\n  base64UrlDecode: base64UrlDecode,\n  getOidcHash: getOidcHash,\n  verifyToken: verifyToken$1,\n  atob: a,\n  btoa: b,\n  webcrypto: c\n});\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nvar DEFAULT_POLLING_DELAY = 500;\nvar DEFAULT_MAX_CLOCK_SKEW = 300;\nvar DEFAULT_CACHE_DURATION = 86400;\nvar REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nvar REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nvar REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nvar TOKEN_STORAGE_NAME = 'okta-token-storage';\nvar CACHE_STORAGE_NAME = 'okta-cache-storage';\nvar PKCE_STORAGE_NAME = 'okta-pkce-storage';\nvar TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nvar SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nvar ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nvar IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nvar ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nvar ID_TOKEN_STORAGE_KEY = 'idToken';\nvar REFRESH_TOKEN_STORAGE_KEY = 'refreshToken';\nvar REFERRER_PATH_STORAGE_KEY = 'referrerPath';\nvar MIN_VERIFIER_LENGTH = 43;\nvar MAX_VERIFIER_LENGTH = 128;\nvar DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\nvar IDX_API_VERSION = '1.0.0';\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  STATE_TOKEN_KEY_NAME: STATE_TOKEN_KEY_NAME,\n  DEFAULT_POLLING_DELAY: DEFAULT_POLLING_DELAY,\n  DEFAULT_MAX_CLOCK_SKEW: DEFAULT_MAX_CLOCK_SKEW,\n  DEFAULT_CACHE_DURATION: DEFAULT_CACHE_DURATION,\n  REDIRECT_OAUTH_PARAMS_NAME: REDIRECT_OAUTH_PARAMS_NAME,\n  REDIRECT_STATE_COOKIE_NAME: REDIRECT_STATE_COOKIE_NAME,\n  REDIRECT_NONCE_COOKIE_NAME: REDIRECT_NONCE_COOKIE_NAME,\n  TOKEN_STORAGE_NAME: TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME: CACHE_STORAGE_NAME,\n  PKCE_STORAGE_NAME: PKCE_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME: TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME: SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME: ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME: IDX_RESPONSE_STORAGE_NAME,\n  ACCESS_TOKEN_STORAGE_KEY: ACCESS_TOKEN_STORAGE_KEY,\n  ID_TOKEN_STORAGE_KEY: ID_TOKEN_STORAGE_KEY,\n  REFRESH_TOKEN_STORAGE_KEY: REFRESH_TOKEN_STORAGE_KEY,\n  REFERRER_PATH_STORAGE_KEY: REFERRER_PATH_STORAGE_KEY,\n  MIN_VERIFIER_LENGTH: MIN_VERIFIER_LENGTH,\n  MAX_VERIFIER_LENGTH: MAX_VERIFIER_LENGTH,\n  DEFAULT_CODE_CHALLENGE_METHOD: DEFAULT_CODE_CHALLENGE_METHOD,\n  IDX_API_VERSION: IDX_API_VERSION\n});\n\nfunction setRequestHeader(authClient, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}\n\nfunction httpRequest(sdk, options) {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true,\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n\n  var headers = Object.assign({\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }, oktaUserAgentHeader);\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers);\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions = {\n    headers: headers,\n    data: args || undefined,\n    withCredentials: withCredentials\n  };\n  var err, res;\n  return sdk.options.httpRequestClient(method, url, ajaxOptions).then(function (resp) {\n    res = resp.responseText;\n\n    if (res && isString(res)) {\n      res = JSON.parse(res);\n\n      if (res && _typeof(res) === 'object' && !res.headers) {\n        res.headers = resp.headers;\n      }\n    }\n\n    if (saveAuthnState) {\n      if (!res.stateToken) {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n    }\n\n    if (res && res.stateToken && res.expiresAt) {\n      storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies);\n    }\n\n    if (res && options.cacheResponse) {\n      httpCache.updateStorage(url, {\n        expiresAt: Math.floor(Date.now() / 1000) + DEFAULT_CACHE_DURATION,\n        response: res\n      });\n    }\n\n    return res;\n  }).catch(function (resp) {\n    var serverErr = resp.responseText || {};\n\n    if (isString(serverErr)) {\n      try {\n        serverErr = JSON.parse(serverErr);\n      } catch (e) {\n        serverErr = {\n          errorSummary: 'Unknown error'\n        };\n      }\n    }\n\n    if (resp.status >= 500) {\n      serverErr.errorSummary = 'Unknown error';\n    }\n\n    if (sdk.options.transformErrorXHR) {\n      resp = sdk.options.transformErrorXHR(clone(resp));\n    }\n\n    err = new AuthApiError(serverErr, resp);\n\n    if (err.errorCode === 'E0000011') {\n      storage.delete(STATE_TOKEN_KEY_NAME);\n    }\n\n    throw err;\n  });\n}\n\nfunction get(sdk, url, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nfunction post(sdk, url, args, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n\nfunction addStateToken(res, options) {\n  var builtArgs = {};\n  Object.assign(builtArgs, options);\n\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nfunction getStateToken(res) {\n  return addStateToken(res);\n}\n\nfunction getPollFn(sdk, res, ref) {\n  return function (options) {\n    var delay$1;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay$1 = options;\n    } else if (isObject(options)) {\n      options = options;\n      delay$1 = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay$1 && delay$1 !== 0) {\n      delay$1 = DEFAULT_POLLING_DELAY;\n    }\n\n    var pollLink = getLink(res, 'next', 'poll');\n\n    function pollFn() {\n      var opts = {};\n\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        } catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      } else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        } catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      } else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n    var retryCount = 0;\n\n    var recursivePoll = function recursivePoll() {\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n\n      return pollFn().then(function (pollRes) {\n        retryCount = 0;\n\n        if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n          if (!ref.isPolling) {\n            throw new AuthPollStopError();\n          }\n\n          if (typeof transactionCallBack === 'function') {\n            transactionCallBack(pollRes);\n          }\n\n          return delay(delay$1).then(recursivePoll);\n        } else {\n          ref.isPolling = false;\n          return new AuthTransaction(sdk, pollRes);\n        }\n      }).catch(function (err) {\n        if (err.xhr && (err.xhr.status === 0 || err.xhr.status === 429) && retryCount <= 4) {\n          var delayLength = Math.pow(2, retryCount) * 1000;\n          retryCount++;\n          return delay(delayLength).then(recursivePoll);\n        }\n\n        throw err;\n      });\n    };\n\n    return recursivePoll().catch(function (err) {\n      ref.isPolling = false;\n      throw err;\n    });\n  };\n}\n\nvar AuthTransaction = function AuthTransaction(sdk) {\n  var res = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  _classCallCheck(this, AuthTransaction);\n\n  if (res) {\n    this.data = res;\n\n    if (this.data.interactionHandle) {\n      this.status = res.status;\n      return;\n    }\n\n    Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n    delete this.stateToken;\n\n    if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n      this.cancel = function () {\n        return Promise.resolve(new AuthTransaction(sdk));\n      };\n    }\n  }\n};\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function (name, opts) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {\n        name: name\n      });\n\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n  } else if (link.hints && link.hints.allow && link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n\n    switch (method) {\n      case 'GET':\n        return function () {\n          return get(sdk, link.href, {\n            withCredentials: true\n          });\n        };\n\n      case 'POST':\n        return function (opts) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {};\n          var autoPush = data.autoPush;\n\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              } catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            } else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              } catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            } else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n\n            data = omit(data, 'rememberDevice');\n          } else if (data.profile && data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {};\n\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n\n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n\n        if (fn) {\n          fns[linkName] = fn;\n        }\n\n    }\n  }\n\n  return fns;\n}\n\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref));\n    }\n\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n\nfunction transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, {\n    withCredentials: true\n  });\n}\n\nfunction resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n\n  return sdk.tx.status(args).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\n\nfunction introspect$1(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n\n  return transactionStep(sdk, args).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\n\nfunction transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, {\n    withCredentials: true\n  });\n}\n\nfunction transactionExists(sdk) {\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nfunction postToTransaction(sdk, url, args, options) {\n  options = Object.assign({\n    withCredentials: true\n  }, options);\n  return post(sdk, url, args, options).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\n\nvar TransactionState = function TransactionState() {\n  _classCallCheck(this, TransactionState);\n};\n\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  c.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix) {\n  var verifier = prefix || '';\n\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str) {\n  var buffer = new TextEncoder().encode(str);\n  return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    var b64u = stringToBase64Url(hash);\n    return b64u;\n  });\n}\n\nvar PKCE = {\n  DEFAULT_CODE_CHALLENGE_METHOD: DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier: generateVerifier,\n  computeChallenge: computeChallenge\n};\n\nfunction sessionExists(sdk) {\n  return sdk.session.get().then(function (res) {\n    if (res.status === 'ACTIVE') {\n      return true;\n    }\n\n    return false;\n  }).catch(function () {\n    return false;\n  });\n}\n\nfunction getSession(sdk) {\n  return get(sdk, '/api/v1/sessions/me', {\n    withCredentials: true\n  }).then(function (session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function () {\n      return post(sdk, getLink(session, 'refresh').href, {}, {\n        withCredentials: true\n      });\n    };\n\n    res.user = function () {\n      return get(sdk, getLink(session, 'user').href, {\n        withCredentials: true\n      });\n    };\n\n    return res;\n  }).catch(function () {\n    return {\n      status: 'INACTIVE'\n    };\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, {\n    withCredentials: true\n  });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' + toQueryString({\n    checkAccountSetupComplete: true,\n    token: sessionToken,\n    redirectUrl: redirectUrl\n  }));\n}\n\nfunction convertTokenParamsToOAuthParams(tokenParams) {\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  var oauthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state\n  };\n  oauthParams = removeNils(oauthParams);\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType.indexOf('id_token') !== -1 && tokenParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes.join(' ');\n  }\n\n  return oauthParams;\n}\n\nfunction buildAuthorizeParams(tokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString(Object.assign(Object.assign({}, oauthQueryParams), tokenParams.extraParams && Object.assign({}, tokenParams.extraParams)));\n}\n\nfunction validateOptions(options) {\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options) {\n  var params = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  var clientSecret = sdk.options.clientSecret;\n\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  return toQueryString(params).slice(1);\n}\n\nfunction postToTokenEndpoint(sdk, options, urls) {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n  var headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers: headers\n  });\n}\n\nfunction postRefreshToken(sdk, options, refreshToken) {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    args: Object.entries({\n      client_id: options.clientId,\n      grant_type: 'refresh_token',\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken\n    }).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          name = _ref2[0],\n          value = _ref2[1];\n\n      return name + '=' + encodeURIComponent(value);\n    }).join('&')\n  });\n}\n\nfunction getWellKnown(sdk, issuer) {\n  var authServerUri = issuer || sdk.options.issuer;\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nfunction getKey(sdk, issuer, kid) {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n  return getWellKnown(sdk, issuer).then(function (wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    httpCache.clearStorage(jwksUri);\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    }).then(function (res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n\nfunction addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nfunction removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nfunction loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n  return document.body.appendChild(iframe);\n}\n\nfunction loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' + 'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nfunction addPostMessageListener(sdk, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        return;\n      }\n\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n  return msgReceivedOrTimeout.finally(function () {\n    clearTimeout(timeoutId);\n    removeListener(window, 'message', responseHandler);\n  });\n}\n\nfunction generateState() {\n  return genRandomString(64);\n}\n\nfunction generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nfunction getOAuthBaseUrl(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nfunction getOAuthDomain(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nfunction getOAuthUrls(sdk, options) {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n\n  options = options || {};\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n\nvar isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\n\nfunction isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nfunction isIE11OrLess() {\n  return isBrowser() && !!document.documentMode && document.documentMode <= 11;\n}\n\nfunction getUserAgent$1() {\n  return navigator.userAgent;\n}\n\nfunction isFingerprintSupported() {\n  var agent = getUserAgent$1();\n  return agent && !isWindowsPhone.test(agent);\n}\n\nfunction isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  var isIE8or9 = document.documentMode && document.documentMode < 10;\n\n  if (window.postMessage && !isIE8or9) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isTokenVerifySupported() {\n  return typeof c !== 'undefined' && c !== null && typeof c.subtle !== 'undefined' && typeof Uint8Array !== 'undefined';\n}\n\nfunction hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nfunction isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nfunction isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  return window.location.protocol === 'https:';\n}\n\nfunction isLocalhost() {\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\nvar features = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isBrowser: isBrowser,\n  isIE11OrLess: isIE11OrLess,\n  getUserAgent: getUserAgent$1,\n  isFingerprintSupported: isFingerprintSupported,\n  isPopupPostMessageSupported: isPopupPostMessageSupported,\n  isTokenVerifySupported: isTokenVerifySupported,\n  hasTextEncoder: hasTextEncoder,\n  isPKCESupported: isPKCESupported,\n  isHTTPS: isHTTPS,\n  isLocalhost: isLocalhost\n});\n\nfunction getDefaultTokenParams(sdk) {\n  var _sdk$options = sdk.options,\n      pkce = _sdk$options.pkce,\n      clientId = _sdk$options.clientId,\n      redirectUri = _sdk$options.redirectUri,\n      responseType = _sdk$options.responseType,\n      responseMode = _sdk$options.responseMode,\n      scopes = _sdk$options.scopes,\n      state = _sdk$options.state,\n      ignoreSignature = _sdk$options.ignoreSignature;\n  var defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce: pkce,\n    clientId: clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode: responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature: ignoreSignature\n  });\n}\n\nfunction isInteractionRequiredError(error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n\n  var oauthError = error;\n  return oauthError.errorCode === 'interaction_required';\n}\n\nfunction isAuthorizationCodeError(sdk, error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n\n  var authApiError = error;\n  var errorResponse = authApiError.xhr;\n  var responseJSON = errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.responseJSON;\n  return sdk.options.pkce && (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.error) === 'invalid_grant';\n}\n\nfunction hasTokensInHash(hash) {\n  return /((id|access)_token=)/i.test(hash);\n}\n\nfunction hasAuthorizationCode(hashOrSearch) {\n  return /(code=)/i.test(hashOrSearch);\n}\n\nfunction hasInteractionCode(hashOrSearch) {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nfunction hasErrorInUrl(hashOrSearch) {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nfunction isRedirectUri(uri, sdk) {\n  var authParams = sdk.options;\n  return uri && uri.indexOf(authParams.redirectUri) === 0;\n}\n\nfunction isCodeFlow(options) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nfunction getHashOrSearch(options) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\nfunction isLoginRedirect(sdk) {\n  if (!isRedirectUri(window.location.href, sdk)) {\n    return false;\n  }\n\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode = hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  return hasTokensInHash(window.location.hash);\n}\n\nfunction isInteractionRequired(sdk, hashOrSearch) {\n  if (!hashOrSearch) {\n    if (!isLoginRedirect(sdk)) {\n      return false;\n    }\n\n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}\n\nfunction prepareTokenParams(sdk, tokenParams) {\n  var defaults = getDefaultTokenParams(sdk);\n  tokenParams = Object.assign({}, defaults, clone(tokenParams));\n\n  if (tokenParams.pkce === false) {\n    return Promise.resolve(tokenParams);\n  }\n\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n\n    if (!sdk.features.isHTTPS()) {\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n\n    if (!sdk.features.hasTextEncoder()) {\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n\n    return Promise.reject(new AuthSdkError(errorMessage));\n  }\n\n  if (!tokenParams.codeChallengeMethod) {\n    tokenParams.codeChallengeMethod = DEFAULT_CODE_CHALLENGE_METHOD;\n  }\n\n  tokenParams.responseType = 'code';\n  return getWellKnown(sdk, null).then(function (res) {\n    var methods = res['code_challenge_methods_supported'] || [];\n\n    if (methods.indexOf(tokenParams.codeChallengeMethod) === -1) {\n      throw new AuthSdkError('Invalid code_challenge_method');\n    }\n  }).then(function () {\n    if (!tokenParams.codeVerifier) {\n      tokenParams.codeVerifier = PKCE.generateVerifier();\n    }\n\n    return PKCE.computeChallenge(tokenParams.codeVerifier);\n  }).then(function (codeChallenge) {\n    var clonedParams = clone(tokenParams) || {};\n    Object.assign(clonedParams, tokenParams, {\n      codeChallenge: codeChallenge\n    });\n    return clonedParams;\n  });\n}\n\nfunction isSameRefreshToken(a, b) {\n  return a.refreshToken === b.refreshToken;\n}\n\nfunction isRefreshTokenError(err) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  var responseJSON = err.xhr.responseJSON;\n\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction validateClaims(sdk, claims, validationParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now() / 1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' + 'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' + 'does not match [' + aud + ']');\n  }\n\n  if (claims.iat > claims.exp) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if (now - sdk.options.maxClockSkew > claims.exp) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat > now + sdk.options.maxClockSkew) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || _typeof(obj) !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOAuthTransactionMeta(obj) {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nfunction isPKCETransactionMeta(obj) {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n\n  return !!obj.codeVerifier;\n}\n\nfunction isIdxTransactionMeta(obj) {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n\n  return !!obj.interactionHandle;\n}\n\nfunction isCustomAuthTransactionMeta(obj) {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n\n  var isAllStringValues = Object.values(obj).find(function (value) {\n    return typeof value !== 'string';\n  }) === undefined;\n  return isAllStringValues;\n}\n\nfunction isTransactionMeta(obj) {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n\n  return false;\n}\n\nvar IdxStatus;\n\n(function (IdxStatus) {\n  IdxStatus[\"SUCCESS\"] = \"SUCCESS\";\n  IdxStatus[\"PENDING\"] = \"PENDING\";\n  IdxStatus[\"FAILURE\"] = \"FAILURE\";\n  IdxStatus[\"TERMINAL\"] = \"TERMINAL\";\n  IdxStatus[\"CANCELED\"] = \"CANCELED\";\n})(IdxStatus || (IdxStatus = {}));\n\nvar AuthenticatorKey;\n\n(function (AuthenticatorKey) {\n  AuthenticatorKey[\"OKTA_PASSWORD\"] = \"okta_password\";\n  AuthenticatorKey[\"OKTA_EMAIL\"] = \"okta_email\";\n  AuthenticatorKey[\"OKTA_VERIFIER\"] = \"okta_verifier\";\n  AuthenticatorKey[\"PHONE_NUMBER\"] = \"phone_number\";\n  AuthenticatorKey[\"GOOGLE_AUTHENTICATOR\"] = \"google_otp\";\n})(AuthenticatorKey || (AuthenticatorKey = {}));\n\nvar IdxFeature;\n\n(function (IdxFeature) {\n  IdxFeature[IdxFeature[\"PASSWORD_RECOVERY\"] = 0] = \"PASSWORD_RECOVERY\";\n  IdxFeature[IdxFeature[\"REGISTRATION\"] = 1] = \"REGISTRATION\";\n  IdxFeature[IdxFeature[\"SOCIAL_IDP\"] = 2] = \"SOCIAL_IDP\";\n})(IdxFeature || (IdxFeature = {}));\n\nfunction isToken(obj) {\n  if (obj && (obj.accessToken || obj.idToken || obj.refreshToken) && Array.isArray(obj.scopes)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isAccessToken(obj) {\n  return obj && obj.accessToken;\n}\n\nfunction isIDToken(obj) {\n  return obj && obj.idToken;\n}\n\nfunction isRefreshToken(obj) {\n  return obj && obj.refreshToken;\n}\n\nfunction validateToken(token, type) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError('Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property');\n  }\n\n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  }\n\n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}\n\nfunction decodeToken(token) {\n  var jwt = token.split('.');\n  var decodedToken;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n\nfunction revokeToken(sdk, token) {\n  return Promise.resolve().then(function () {\n    var accessToken;\n    var refreshToken;\n\n    if (token) {\n      accessToken = token.accessToken;\n      refreshToken = token.refreshToken;\n    }\n\n    if (!accessToken && !refreshToken) {\n      throw new AuthSdkError('A valid access or refresh token object is required');\n    }\n\n    var clientId = sdk.options.clientId;\n    var clientSecret = sdk.options.clientSecret;\n\n    if (!clientId) {\n      throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n    }\n\n    var revokeUrl = getOAuthUrls(sdk).revokeUrl;\n    var args = toQueryString({\n      token_type_hint: refreshToken ? 'refresh_token' : 'access_token',\n      token: refreshToken || accessToken\n    }).slice(1);\n    var creds = clientSecret ? b(\"\".concat(clientId, \":\").concat(clientSecret)) : b(clientId);\n    return post(sdk, revokeUrl, args, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + creds\n      }\n    });\n  });\n}\n\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n  var _tokenParams = tokenParams,\n      authorizationCode = _tokenParams.authorizationCode,\n      interactionCode = _tokenParams.interactionCode,\n      codeVerifier = _tokenParams.codeVerifier,\n      clientId = _tokenParams.clientId,\n      redirectUri = _tokenParams.redirectUri,\n      scopes = _tokenParams.scopes,\n      ignoreSignature = _tokenParams.ignoreSignature,\n      state = _tokenParams.state;\n  var getTokenOptions = {\n    clientId: clientId,\n    redirectUri: redirectUri,\n    authorizationCode: authorizationCode,\n    interactionCode: interactionCode,\n    codeVerifier: codeVerifier\n  };\n  return postToTokenEndpoint(sdk, getTokenOptions, urls).then(function (response) {\n    var responseType = ['token'];\n\n    if (scopes.indexOf('openid') !== -1) {\n      responseType.push('id_token');\n    }\n\n    var handleResponseOptions = {\n      clientId: clientId,\n      redirectUri: redirectUri,\n      scopes: scopes,\n      responseType: responseType,\n      ignoreSignature: ignoreSignature\n    };\n    return handleOAuthResponse(sdk, handleResponseOptions, response, urls).then(function (response) {\n      response.code = authorizationCode;\n      response.state = state;\n      return response;\n    });\n  }).finally(function () {\n    sdk.transactionManager.clear();\n  });\n}\n\nfunction verifyToken(_x, _x2, _x3) {\n  return _verifyToken.apply(this, arguments);\n}\n\nfunction _verifyToken() {\n  _verifyToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, token, validationParams) {\n    var jwt, configuredIssuer, _yield$getWellKnown, issuer, validationOptions, key, valid, hash;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!token || !token.idToken)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new AuthSdkError('Only idTokens may be verified');\n\n          case 2:\n            jwt = decodeToken(token.idToken);\n            configuredIssuer = (validationParams === null || validationParams === void 0 ? void 0 : validationParams.issuer) || sdk.options.issuer;\n            _context.next = 6;\n            return getWellKnown(sdk, configuredIssuer);\n\n          case 6:\n            _yield$getWellKnown = _context.sent;\n            issuer = _yield$getWellKnown.issuer;\n            validationOptions = Object.assign({\n              clientId: sdk.options.clientId,\n              ignoreSignature: sdk.options.ignoreSignature\n            }, validationParams, {\n              issuer: issuer\n            });\n            validateClaims(sdk, jwt.payload, validationOptions);\n\n            if (!(validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported())) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", token);\n\n          case 12:\n            _context.next = 14;\n            return getKey(sdk, token.issuer, jwt.header.kid);\n\n          case 14:\n            key = _context.sent;\n            _context.next = 17;\n            return verifyToken$1(token.idToken, key);\n\n          case 17:\n            valid = _context.sent;\n\n            if (valid) {\n              _context.next = 20;\n              break;\n            }\n\n            throw new AuthSdkError('The token signature is not valid');\n\n          case 20:\n            if (!(validationParams && validationParams.accessToken && token.claims.at_hash)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.next = 23;\n            return getOidcHash(validationParams.accessToken);\n\n          case 23:\n            hash = _context.sent;\n\n            if (!(hash !== token.claims.at_hash)) {\n              _context.next = 26;\n              break;\n            }\n\n            throw new AuthSdkError('Token hash verification failed');\n\n          case 26:\n            return _context.abrupt(\"return\", token);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _verifyToken.apply(this, arguments);\n}\n\nfunction validateResponse(res, oauthParams) {\n  if (res['error'] || res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nfunction handleOAuthResponse(sdk, tokenParams, res, urls) {\n  var pkce = sdk.options.pkce !== false;\n\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  var responseType = tokenParams.responseType;\n\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n  return Promise.resolve().then(function () {\n    validateResponse(res, tokenParams);\n  }).then(function () {\n    var tokenDict = {};\n    var expiresIn = res.expires_in;\n    var tokenType = res.token_type;\n    var accessToken = res.access_token;\n    var idToken = res.id_token;\n    var refreshToken = res.refresh_token;\n    var now = Math.floor(Date.now() / 1000);\n\n    if (accessToken) {\n      var accessJwt = sdk.token.decode(accessToken);\n      tokenDict.accessToken = {\n        accessToken: accessToken,\n        claims: accessJwt.payload,\n        expiresAt: Number(expiresIn) + now,\n        tokenType: tokenType,\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        userinfoUrl: urls.userinfoUrl\n      };\n    }\n\n    if (refreshToken) {\n      tokenDict.refreshToken = {\n        refreshToken: refreshToken,\n        expiresAt: Number(expiresIn) + now,\n        scopes: scopes,\n        tokenUrl: urls.tokenUrl,\n        authorizeUrl: urls.authorizeUrl,\n        issuer: urls.issuer\n      };\n    }\n\n    if (idToken) {\n      var idJwt = sdk.token.decode(idToken);\n      var idTokenObj = {\n        idToken: idToken,\n        claims: idJwt.payload,\n        expiresAt: idJwt.payload.exp - idJwt.payload.iat + now,\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        issuer: urls.issuer,\n        clientId: clientId\n      };\n      var validationParams = {\n        clientId: clientId,\n        issuer: urls.issuer,\n        nonce: tokenParams.nonce,\n        accessToken: accessToken\n      };\n\n      if (tokenParams.ignoreSignature !== undefined) {\n        validationParams.ignoreSignature = tokenParams.ignoreSignature;\n      }\n\n      return verifyToken(sdk, idTokenObj, validationParams).then(function () {\n        tokenDict.idToken = idTokenObj;\n        return tokenDict;\n      });\n    }\n\n    return tokenDict;\n  }).then(function (tokenDict) {\n    if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n      throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n    }\n\n    if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n      throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n    }\n\n    return {\n      tokens: tokenDict,\n      state: res.state,\n      code: res.code\n    };\n  });\n}\n\nfunction getToken(sdk, options) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n  var popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n  return prepareTokenParams(sdk, options).then(function (tokenParams) {\n    var sessionTokenOverrides = {\n      prompt: 'none',\n      responseMode: 'okta_post_message',\n      display: null\n    };\n    var idpOverrides = {\n      display: 'popup'\n    };\n\n    if (options.sessionToken) {\n      Object.assign(tokenParams, sessionTokenOverrides);\n    } else if (options.idp) {\n      Object.assign(tokenParams, idpOverrides);\n    }\n\n    var requestUrl, endpoint, urls;\n    urls = getOAuthUrls(sdk, tokenParams);\n    endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n    requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n    var flowType;\n\n    if (tokenParams.sessionToken || tokenParams.display === null) {\n      flowType = 'IFRAME';\n    } else if (tokenParams.display === 'popup') {\n      flowType = 'POPUP';\n    } else {\n      flowType = 'IMPLICIT';\n    }\n\n    switch (flowType) {\n      case 'IFRAME':\n        var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        var iframeEl = loadFrame(requestUrl);\n        return iframePromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          if (document.body.contains(iframeEl)) {\n            iframeEl.parentElement.removeChild(iframeEl);\n          }\n        });\n\n      case 'POPUP':\n        var oauthPromise;\n\n        if (tokenParams.responseMode === 'okta_post_message') {\n          if (!sdk.features.isPopupPostMessageSupported()) {\n            throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n          }\n\n          oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        }\n\n        if (popupWindow) {\n          popupWindow.location.assign(requestUrl);\n        }\n\n        var popupPromise = new Promise(function (resolve, reject) {\n          var closePoller = setInterval(function () {\n            if (!popupWindow || popupWindow.closed) {\n              clearInterval(closePoller);\n              reject(new AuthSdkError('Unable to parse OAuth flow response'));\n            }\n          }, 100);\n          oauthPromise.then(function (res) {\n            clearInterval(closePoller);\n            resolve(res);\n          }).catch(function (err) {\n            clearInterval(closePoller);\n            reject(err);\n          });\n        });\n        return popupPromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          if (popupWindow && !popupWindow.closed) {\n            popupWindow.close();\n          }\n        });\n\n      default:\n        throw new AuthSdkError('The full page redirect flow is not supported');\n    }\n  });\n}\n\nfunction getWithoutPrompt(sdk, options) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\nfunction renewTokensWithRefresh(_x, _x2, _x3) {\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\n\nfunction _renewTokensWithRefresh() {\n  _renewTokensWithRefresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, tokenParams, refreshTokenObject) {\n    var clientId, renewTokenParams, tokenResponse, urls, _yield$handleOAuthRes, tokens, refreshToken;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clientId = sdk.options.clientId;\n\n            if (clientId) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n\n          case 3:\n            renewTokenParams = Object.assign({}, tokenParams, {\n              clientId: clientId\n            });\n            _context.next = 6;\n            return postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n\n          case 6:\n            tokenResponse = _context.sent;\n            urls = getOAuthUrls(sdk, tokenParams);\n            _context.next = 10;\n            return handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n          case 10:\n            _yield$handleOAuthRes = _context.sent;\n            tokens = _yield$handleOAuthRes.tokens;\n            refreshToken = tokens.refreshToken;\n\n            if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n              sdk.tokenManager.updateRefreshToken(refreshToken);\n            }\n\n            return _context.abrupt(\"return\", tokens);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError('Renew must be passed a token with an array of scopes and an accessToken or idToken');\n}\n\nfunction getSingleToken(originalToken, tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n\n  throwInvalidTokenError();\n}\n\nfunction renewToken(_x, _x2) {\n  return _renewToken.apply(this, arguments);\n}\n\nfunction _renewToken() {\n  _renewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, token) {\n    var tokens, responseType, scopes, authorizeUrl, userinfoUrl, issuer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isIDToken(token) && !isAccessToken(token)) {\n              throwInvalidTokenError();\n            }\n\n            tokens = sdk.tokenManager.getTokensSync();\n\n            if (!tokens.refreshToken) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return renewTokensWithRefresh(sdk, {\n              scopes: token.scopes\n            }, tokens.refreshToken);\n\n          case 5:\n            tokens = _context.sent;\n            return _context.abrupt(\"return\", getSingleToken(token, tokens));\n\n          case 7:\n            if (sdk.options.pkce) {\n              responseType = 'code';\n            } else if (isAccessToken(token)) {\n              responseType = 'token';\n            } else {\n              responseType = 'id_token';\n            }\n\n            scopes = token.scopes, authorizeUrl = token.authorizeUrl, userinfoUrl = token.userinfoUrl, issuer = token.issuer;\n            return _context.abrupt(\"return\", getWithoutPrompt(sdk, {\n              responseType: responseType,\n              scopes: scopes,\n              authorizeUrl: authorizeUrl,\n              userinfoUrl: userinfoUrl,\n              issuer: issuer\n            }).then(function (res) {\n              return getSingleToken(token, res.tokens);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewToken.apply(this, arguments);\n}\n\nfunction renewTokens(_x, _x2) {\n  return _renewTokens.apply(this, arguments);\n}\n\nfunction _renewTokens() {\n  _renewTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, options) {\n    var tokens, accessToken, idToken, scopes, authorizeUrl, userinfoUrl, issuer, _getDefaultTokenParam, responseType;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tokens = sdk.tokenManager.getTokensSync();\n\n            if (!tokens.refreshToken) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", renewTokensWithRefresh(sdk, options, tokens.refreshToken));\n\n          case 3:\n            if (!(!tokens.accessToken && !tokens.idToken)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new AuthSdkError('renewTokens() was called but there is no existing token');\n\n          case 5:\n            accessToken = tokens.accessToken || {};\n            idToken = tokens.idToken || {};\n            scopes = accessToken.scopes || idToken.scopes;\n\n            if (scopes) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n\n          case 10:\n            authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n\n            if (authorizeUrl) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n\n          case 13:\n            userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n            issuer = idToken.issuer || sdk.options.issuer;\n            options = Object.assign({\n              scopes: scopes,\n              authorizeUrl: authorizeUrl,\n              userinfoUrl: userinfoUrl,\n              issuer: issuer\n            }, options);\n\n            if (sdk.options.pkce) {\n              options.responseType = 'code';\n            } else {\n              _getDefaultTokenParam = getDefaultTokenParams(sdk), responseType = _getDefaultTokenParam.responseType;\n              options.responseType = responseType;\n            }\n\n            return _context.abrupt(\"return\", getWithoutPrompt(sdk, options).then(function (res) {\n              return res.tokens;\n            }));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewTokens.apply(this, arguments);\n}\n\nfunction getUserInfo(_x, _x2, _x3) {\n  return _getUserInfo.apply(this, arguments);\n}\n\nfunction _getUserInfo() {\n  _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, accessTokenObject, idTokenObject) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (accessTokenObject) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return sdk.tokenManager.getTokens();\n\n          case 3:\n            accessTokenObject = _context.sent.accessToken;\n\n          case 4:\n            if (idTokenObject) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return sdk.tokenManager.getTokens();\n\n          case 7:\n            idTokenObject = _context.sent.idToken;\n\n          case 8:\n            if (!(!accessTokenObject || !isAccessToken(accessTokenObject))) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an access token object')));\n\n          case 10:\n            if (!(!idTokenObject || !isIDToken(idTokenObject))) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an ID token object')));\n\n          case 12:\n            return _context.abrupt(\"return\", httpRequest(sdk, {\n              url: accessTokenObject.userinfoUrl,\n              method: 'GET',\n              accessToken: accessTokenObject.accessToken\n            }).then(function (userInfo) {\n              if (userInfo.sub === idTokenObject.claims.sub) {\n                return userInfo;\n              }\n\n              return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n            }).catch(function (err) {\n              if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n                var authenticateHeader;\n\n                if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n                  authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n                } else if (isFunction(err.xhr.getResponseHeader)) {\n                  authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n                }\n\n                if (authenticateHeader) {\n                  var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n                  var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n                  var error = errorMatches[1];\n                  var errorDescription = errorDescriptionMatches[1];\n\n                  if (error && errorDescription) {\n                    err = new OAuthError(error, errorDescription);\n                  }\n                }\n              }\n\n              throw err;\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getUserInfo.apply(this, arguments);\n}\n\nfunction getWithPopup(sdk, options) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  var popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow: popupWindow\n  });\n  return getToken(sdk, options);\n}\n\nfunction getWithRedirect(sdk, options) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n  return prepareTokenParams(sdk, options).then(function (tokenParams) {\n    var urls = getOAuthUrls(sdk, options);\n    var requestUrl = urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n    var issuer = sdk.options.issuer;\n    var responseType = tokenParams.responseType,\n        state = tokenParams.state,\n        nonce = tokenParams.nonce,\n        scopes = tokenParams.scopes,\n        clientId = tokenParams.clientId,\n        ignoreSignature = tokenParams.ignoreSignature,\n        redirectUri = tokenParams.redirectUri,\n        codeVerifier = tokenParams.codeVerifier,\n        codeChallenge = tokenParams.codeChallenge,\n        codeChallengeMethod = tokenParams.codeChallengeMethod;\n    var oauthMeta = {\n      issuer: issuer,\n      responseType: responseType,\n      state: state,\n      nonce: nonce,\n      scopes: scopes,\n      clientId: clientId,\n      urls: urls,\n      ignoreSignature: ignoreSignature,\n      redirectUri: redirectUri,\n      codeVerifier: codeVerifier,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod\n    };\n    sdk.transactionManager.save(oauthMeta, {\n      oauth: true\n    });\n\n    sdk.token.getWithRedirect._setLocation(requestUrl);\n  });\n}\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nfunction getResponseMode(sdk) {\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nfunction parseOAuthResponseFromUrl(sdk, options) {\n  options = options || {};\n\n  if (isString(options)) {\n    options = {\n      url: options\n    };\n  } else {\n    options = options;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nfunction parseFromUrl(_x, _x2) {\n  return _parseFromUrl.apply(this, arguments);\n}\n\nfunction _parseFromUrl() {\n  _parseFromUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sdk, options) {\n    var res, state, oauthParams, urls;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = options || {};\n\n            if (isString(options)) {\n              options = {\n                url: options\n              };\n            } else {\n              options = options;\n            }\n\n            res = parseOAuthResponseFromUrl(sdk, options);\n            state = res.state;\n            oauthParams = sdk.transactionManager.load({\n              oauth: true,\n              pkce: sdk.options.pkce,\n              state: state\n            });\n\n            if (oauthParams) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage')));\n\n          case 7:\n            urls = oauthParams.urls;\n            delete oauthParams.urls;\n\n            if (!options.url) {\n              cleanOAuthResponseFromUrl(sdk, options);\n            }\n\n            return _context.abrupt(\"return\", handleOAuthResponse(sdk, oauthParams, res, urls).catch(function (err) {\n              if (!isInteractionRequiredError(err)) {\n                sdk.transactionManager.clear({\n                  state: state\n                });\n              }\n\n              throw err;\n            }).then(function (res) {\n              sdk.transactionManager.clear({\n                state: state\n              });\n              return res;\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseFromUrl.apply(this, arguments);\n}\n\nvar Cookies = require('js-cookie');\n\nvar storageUtil = {\n  getHttpCache: function getHttpCache() {\n    return null;\n  },\n  getPKCEStorage: function getPKCEStorage() {\n    return null;\n  },\n  browserHasLocalStorage: function browserHasLocalStorage() {\n    try {\n      var storage = storageUtil.getLocalStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  browserHasSessionStorage: function browserHasSessionStorage() {\n    try {\n      var storage = storageUtil.getSessionStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  testStorageType: function testStorageType(storageType) {\n    var supported = false;\n\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = storageUtil.browserHasSessionStorage();\n        break;\n\n      case 'localStorage':\n        supported = storageUtil.browserHasLocalStorage();\n        break;\n\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n\n      default:\n        supported = false;\n        break;\n    }\n\n    return supported;\n  },\n  getStorageByType: function getStorageByType(storageType, options) {\n    var storageProvider = null;\n\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = storageUtil.getSessionStorage();\n        break;\n\n      case 'localStorage':\n        storageProvider = storageUtil.getLocalStorage();\n        break;\n\n      case 'cookie':\n        storageProvider = storageUtil.getCookieStorage(options);\n        break;\n\n      case 'memory':\n        storageProvider = storageUtil.getInMemoryStorage();\n        break;\n\n      default:\n        throw new AuthSdkError(\"Unrecognized storage option: \".concat(storageType));\n    }\n\n    return storageProvider;\n  },\n  findStorageType: function findStorageType(types) {\n    var curType;\n    var nextType;\n    types = types.slice();\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n\n    if (!nextType) {\n      return curType;\n    }\n\n    if (storageUtil.testStorageType(curType)) {\n      return curType;\n    }\n\n    warn(\"This browser doesn't support \".concat(curType, \". Switching to \").concat(nextType, \".\"));\n    return storageUtil.findStorageType(types);\n  },\n  getLocalStorage: function getLocalStorage() {\n    return localStorage;\n  },\n  getSessionStorage: function getSessionStorage() {\n    return sessionStorage;\n  },\n  getCookieStorage: function getCookieStorage(options) {\n    var secure = options.secure;\n    var sameSite = options.sameSite;\n    var sessionCookie = options.sessionCookie;\n\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n\n    var storage = {\n      getItem: storageUtil.storage.get,\n      setItem: function setItem(key, value) {\n        var expiresAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '2200-01-01T00:00:00.000Z';\n        expiresAt = sessionCookie ? null : expiresAt;\n        storageUtil.storage.set(key, value, expiresAt, {\n          secure: secure,\n          sameSite: sameSite\n        });\n      },\n      removeItem: function removeItem(key) {\n        storageUtil.storage.delete(key);\n      }\n    };\n\n    if (!options.useMultipleCookies) {\n      return storage;\n    }\n\n    return {\n      getItem: function getItem(key) {\n        var data = storage.getItem();\n        var value = {};\n        Object.keys(data).forEach(function (k) {\n          if (k.indexOf(key) === 0) {\n            value[k.replace(\"\".concat(key, \"_\"), '')] = JSON.parse(data[k]);\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function setItem(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        Object.keys(value).forEach(function (k) {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        Object.keys(existingValues).forEach(function (k) {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function removeItem(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(function (k) {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n  inMemoryStore: {},\n  getInMemoryStorage: function getInMemoryStorage() {\n    var _this = this;\n\n    return {\n      getItem: function getItem(key) {\n        return _this.inMemoryStore[key];\n      },\n      setItem: function setItem(key, value) {\n        _this.inMemoryStore[key] = value;\n      }\n    };\n  },\n  testStorage: function testStorage(storage) {\n    var key = 'okta-test-storage';\n\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n  storage: {\n    set: function set(name, value, expiresAt, options) {\n      var sameSite = options.sameSite,\n          secure = options.secure;\n\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n\n      var cookieOptions = {\n        path: options.path || '/',\n        secure: secure,\n        sameSite: sameSite\n      };\n\n      if (!!Date.parse(expiresAt)) {\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return storageUtil.storage.get(name);\n    },\n    get: function get(name) {\n      return Cookies.get(name);\n    },\n    delete: function _delete(name) {\n      return Cookies.remove(name, {\n        path: '/'\n      });\n    }\n  }\n};\n\nfunction assertValidConfig(args) {\n  args = args || {};\n  var scopes = args.scopes;\n\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' + 'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  var issuer = args.issuer;\n\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n\n  if (!isUrlRegex.test(args.issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nfunction getUserAgent(args, sdkValue) {\n  var userAgent = args.userAgent || {};\n\n  if (userAgent.value) {\n    return userAgent.value;\n  }\n\n  if (userAgent.template) {\n    return userAgent.template.replace('$OKTA_AUTH_JS', sdkValue);\n  }\n\n  return sdkValue;\n}\n\nvar SdkClock = /*#__PURE__*/function () {\n  function SdkClock(localOffset) {\n    _classCallCheck(this, SdkClock);\n\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  _createClass(SdkClock, [{\n    key: \"now\",\n    value: function now() {\n      var now = (Date.now() + this.localOffset) / 1000;\n      return now;\n    }\n  }], [{\n    key: \"create\",\n    value: function create() {\n      var localOffset = 0;\n      return new SdkClock(localOffset);\n    }\n  }]);\n\n  return SdkClock;\n}();\n\nfunction shouldThrottleRenew(renewTimeQueue) {\n  var res = false;\n  renewTimeQueue.push(Date.now());\n\n  if (renewTimeQueue.length >= 10) {\n    var firstTime = renewTimeQueue.shift();\n    var lastTime = renewTimeQueue[renewTimeQueue.length - 1];\n    res = lastTime - firstTime < 30 * 1000;\n  }\n\n  return res;\n}\n\nvar TokenService = /*#__PURE__*/function () {\n  function TokenService(tokenManager) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TokenService);\n\n    this.tokenManager = tokenManager;\n    this.options = options;\n  }\n\n  _createClass(TokenService, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      var renewTimeQueue = [];\n\n      this.onTokenExpiredHandler = function (key) {\n        if (_this.options.autoRenew) {\n          if (shouldThrottleRenew(renewTimeQueue)) {\n            var error = new AuthSdkError('Too many token renew requests');\n\n            _this.tokenManager.emitError(error);\n          } else {\n            _this.tokenManager.renew(key).catch(function () {});\n          }\n        } else if (_this.options.autoRemove) {\n          _this.tokenManager.remove(key);\n        }\n      };\n\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.tokenManager.setExpireEventTimeoutAll();\n\n      if (this.options.syncStorage && isBrowser()) {\n        this.storageListener = function (_ref) {\n          var key = _ref.key,\n              newValue = _ref.newValue,\n              oldValue = _ref.oldValue;\n\n          var handleCrossTabsStorageChange = function handleCrossTabsStorageChange() {\n            _this.tokenManager.resetExpireEventTimeoutAll();\n\n            _this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n          };\n\n          if (key && (key !== _this.options.storageKey || newValue === oldValue)) {\n            return;\n          }\n\n          _this.syncTimeout = setTimeout(function () {\n            return handleCrossTabsStorageChange();\n          }, _this.options._storageEventDelay);\n        };\n\n        window.addEventListener('storage', this.storageListener);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.tokenManager.clearExpireEventTimeoutAll();\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n\n      if (this.options.syncStorage && isBrowser()) {\n        window.removeEventListener('storage', this.storageListener);\n        clearTimeout(this.syncTimeout);\n      }\n    }\n  }]);\n\n  return TokenService;\n}();\n\nvar DEFAULT_OPTIONS = {\n  autoRenew: true,\n  autoRemove: true,\n  storage: undefined,\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  syncStorage: true,\n  _storageEventDelay: 0\n};\nvar EVENT_EXPIRED = 'expired';\nvar EVENT_RENEWED = 'renewed';\nvar EVENT_ADDED = 'added';\nvar EVENT_REMOVED = 'removed';\nvar EVENT_ERROR = 'error';\n\nfunction defaultState() {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\n\nvar TokenManager = /*#__PURE__*/function () {\n  function TokenManager(sdk) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TokenManager);\n\n    this.sdk = sdk;\n    this.emitter = sdk.emitter;\n\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n\n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n    var storageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure\n    });\n\n    if (_typeof(options.storage) === 'object') {\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage(storageOptions);\n    this.clock = SdkClock.create();\n    this.state = defaultState();\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  _createClass(TokenManager, [{\n    key: \"start\",\n    value: function start() {\n      if (this.service) {\n        this.stop();\n      }\n\n      this.service = new TokenService(this, this.getOptions());\n      this.service.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.service) {\n        this.service.stop();\n        this.service = null;\n      }\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return clone(this.options);\n    }\n  }, {\n    key: \"getExpireTime\",\n    value: function getExpireTime(token) {\n      var expireTime = token.expiresAt - this.options.expireEarlySeconds;\n      return expireTime;\n    }\n  }, {\n    key: \"hasExpired\",\n    value: function hasExpired(token) {\n      var expireTime = this.getExpireTime(token);\n      return expireTime <= this.clock.now();\n    }\n  }, {\n    key: \"emitExpired\",\n    value: function emitExpired(key, token) {\n      this.emitter.emit(EVENT_EXPIRED, key, token);\n    }\n  }, {\n    key: \"emitRenewed\",\n    value: function emitRenewed(key, freshToken, oldToken) {\n      this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n    }\n  }, {\n    key: \"emitAdded\",\n    value: function emitAdded(key, token) {\n      this.emitter.emit(EVENT_ADDED, key, token);\n    }\n  }, {\n    key: \"emitRemoved\",\n    value: function emitRemoved(key, token) {\n      this.emitter.emit(EVENT_REMOVED, key, token);\n    }\n  }, {\n    key: \"emitError\",\n    value: function emitError(error) {\n      this.emitter.emit(EVENT_ERROR, error);\n    }\n  }, {\n    key: \"emitEventsForCrossTabsStorageUpdate\",\n    value: function emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n      var _this = this;\n\n      var oldTokens = this.getTokensFromStorageValue(oldValue);\n      var newTokens = this.getTokensFromStorageValue(newValue);\n      Object.keys(newTokens).forEach(function (key) {\n        var oldToken = oldTokens[key];\n        var newToken = newTokens[key];\n\n        if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n          _this.emitAdded(key, newToken);\n        }\n      });\n      Object.keys(oldTokens).forEach(function (key) {\n        var oldToken = oldTokens[key];\n        var newToken = newTokens[key];\n\n        if (!newToken) {\n          _this.emitRemoved(key, oldToken);\n        }\n      });\n    }\n  }, {\n    key: \"clearExpireEventTimeout\",\n    value: function clearExpireEventTimeout(key) {\n      clearTimeout(this.state.expireTimeouts[key]);\n      delete this.state.expireTimeouts[key];\n      this.state.renewPromise = null;\n    }\n  }, {\n    key: \"clearExpireEventTimeoutAll\",\n    value: function clearExpireEventTimeoutAll() {\n      var expireTimeouts = this.state.expireTimeouts;\n\n      for (var key in expireTimeouts) {\n        if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n          continue;\n        }\n\n        this.clearExpireEventTimeout(key);\n      }\n    }\n  }, {\n    key: \"setExpireEventTimeout\",\n    value: function setExpireEventTimeout(key, token) {\n      var _this2 = this;\n\n      if (isRefreshToken(token)) {\n        return;\n      }\n\n      var expireTime = this.getExpireTime(token);\n      var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n      this.clearExpireEventTimeout(key);\n      var expireEventTimeout = setTimeout(function () {\n        _this2.emitExpired(key, token);\n      }, expireEventWait);\n      this.state.expireTimeouts[key] = expireEventTimeout;\n    }\n  }, {\n    key: \"setExpireEventTimeoutAll\",\n    value: function setExpireEventTimeoutAll() {\n      var tokenStorage = this.storage.getStorage();\n\n      for (var key in tokenStorage) {\n        if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n          continue;\n        }\n\n        var token = tokenStorage[key];\n        this.setExpireEventTimeout(key, token);\n      }\n    }\n  }, {\n    key: \"resetExpireEventTimeoutAll\",\n    value: function resetExpireEventTimeoutAll() {\n      this.clearExpireEventTimeoutAll();\n      this.setExpireEventTimeoutAll();\n    }\n  }, {\n    key: \"add\",\n    value: function add(key, token) {\n      var tokenStorage = this.storage.getStorage();\n      validateToken(token);\n      tokenStorage[key] = token;\n      this.storage.setStorage(tokenStorage);\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n    }\n  }, {\n    key: \"getSync\",\n    value: function getSync(key) {\n      var tokenStorage = this.storage.getStorage();\n      return tokenStorage[key];\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.getSync(key));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"getTokensSync\",\n    value: function getTokensSync() {\n      var tokens = {};\n      var tokenStorage = this.storage.getStorage();\n      Object.keys(tokenStorage).forEach(function (key) {\n        var token = tokenStorage[key];\n\n        if (isAccessToken(token)) {\n          tokens.accessToken = token;\n        } else if (isIDToken(token)) {\n          tokens.idToken = token;\n        } else if (isRefreshToken(token)) {\n          tokens.refreshToken = token;\n        }\n      });\n      return tokens;\n    }\n  }, {\n    key: \"getTokens\",\n    value: function () {\n      var _getTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.getTokensSync());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTokens() {\n        return _getTokens.apply(this, arguments);\n      }\n\n      return getTokens;\n    }()\n  }, {\n    key: \"getStorageKeyByType\",\n    value: function getStorageKeyByType(type) {\n      var tokenStorage = this.storage.getStorage();\n      var key = Object.keys(tokenStorage).filter(function (key) {\n        var token = tokenStorage[key];\n        return isAccessToken(token) && type === 'accessToken' || isIDToken(token) && type === 'idToken' || isRefreshToken(token) && type === 'refreshToken';\n      })[0];\n      return key;\n    }\n  }, {\n    key: \"getTokenType\",\n    value: function getTokenType(token) {\n      if (isAccessToken(token)) {\n        return 'accessToken';\n      }\n\n      if (isIDToken(token)) {\n        return 'idToken';\n      }\n\n      if (isRefreshToken(token)) {\n        return 'refreshToken';\n      }\n\n      throw new AuthSdkError('Unknown token type');\n    }\n  }, {\n    key: \"setTokens\",\n    value: function setTokens(tokens, accessTokenCb, idTokenCb, refreshTokenCb) {\n      var _this3 = this;\n\n      var handleTokenCallback = function handleTokenCallback(key, token) {\n        var type = _this3.getTokenType(token);\n\n        if (type === 'accessToken') {\n          accessTokenCb && accessTokenCb(key, token);\n        } else if (type === 'idToken') {\n          idTokenCb && idTokenCb(key, token);\n        } else if (type === 'refreshToken') {\n          refreshTokenCb && refreshTokenCb(key, token);\n        }\n      };\n\n      var handleAdded = function handleAdded(key, token) {\n        _this3.emitAdded(key, token);\n\n        _this3.setExpireEventTimeout(key, token);\n\n        handleTokenCallback(key, token);\n      };\n\n      var handleRenewed = function handleRenewed(key, token, oldToken) {\n        _this3.emitRenewed(key, token, oldToken);\n\n        _this3.clearExpireEventTimeout(key);\n\n        _this3.setExpireEventTimeout(key, token);\n\n        handleTokenCallback(key, token);\n      };\n\n      var handleRemoved = function handleRemoved(key, token) {\n        _this3.clearExpireEventTimeout(key);\n\n        _this3.emitRemoved(key, token);\n\n        handleTokenCallback(key, token);\n      };\n\n      var types = ['idToken', 'accessToken', 'refreshToken'];\n      var existingTokens = this.getTokensSync();\n      types.forEach(function (type) {\n        var token = tokens[type];\n\n        if (token) {\n          validateToken(token, type);\n        }\n      });\n      var storage = types.reduce(function (storage, type) {\n        var token = tokens[type];\n\n        if (token) {\n          var storageKey = _this3.getStorageKeyByType(type) || type;\n          storage[storageKey] = token;\n        }\n\n        return storage;\n      }, {});\n      this.storage.setStorage(storage);\n      types.forEach(function (type) {\n        var newToken = tokens[type];\n        var existingToken = existingTokens[type];\n        var storageKey = _this3.getStorageKeyByType(type) || type;\n\n        if (newToken && existingToken) {\n          handleRemoved(storageKey, existingToken);\n          handleAdded(storageKey, newToken);\n          handleRenewed(storageKey, newToken, existingToken);\n        } else if (newToken) {\n          handleAdded(storageKey, newToken);\n        } else if (existingToken) {\n          handleRemoved(storageKey, existingToken);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      this.clearExpireEventTimeout(key);\n      var tokenStorage = this.storage.getStorage();\n      var removedToken = tokenStorage[key];\n      delete tokenStorage[key];\n      this.storage.setStorage(tokenStorage);\n      this.emitRemoved(key, removedToken);\n    }\n  }, {\n    key: \"renewToken\",\n    value: function () {\n      var _renewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(token) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.sdk.token.renew(token));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function renewToken(_x2) {\n        return _renewToken.apply(this, arguments);\n      }\n\n      return renewToken;\n    }()\n  }, {\n    key: \"validateToken\",\n    value: function validateToken$1(token) {\n      return validateToken(token);\n    }\n  }, {\n    key: \"renew\",\n    value: function renew(key) {\n      var _this4 = this;\n\n      if (this.state.renewPromise) {\n        return this.state.renewPromise;\n      }\n\n      try {\n        var token = this.getSync(key);\n\n        if (!token) {\n          throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.clearExpireEventTimeout(key);\n      this.state.renewPromise = this.sdk.token.renewTokens().then(function (tokens) {\n        _this4.setTokens(tokens);\n\n        var tokenType = _this4.getTokenType(token);\n\n        return tokens[tokenType];\n      }).catch(function (err) {\n        if (isRefreshTokenError(err) || err.name === 'OAuthError' || err.name === 'AuthSdkError') {\n          _this4.remove(key);\n\n          err.tokenKey = key;\n\n          _this4.emitError(err);\n        }\n\n        throw err;\n      }).finally(function () {\n        _this4.state.renewPromise = null;\n      });\n      return this.state.renewPromise;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearExpireEventTimeoutAll();\n      this.storage.clearStorage();\n    }\n  }, {\n    key: \"getTokensFromStorageValue\",\n    value: function getTokensFromStorageValue(value) {\n      var tokens;\n\n      try {\n        tokens = JSON.parse(value) || {};\n      } catch (e) {\n        tokens = {};\n      }\n\n      return tokens;\n    }\n  }, {\n    key: \"updateRefreshToken\",\n    value: function updateRefreshToken(token) {\n      var key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n      var tokenStorage = this.storage.getStorage();\n      validateToken(token);\n      tokenStorage[key] = token;\n      this.storage.setStorage(tokenStorage);\n    }\n  }]);\n\n  return TokenManager;\n}();\n\nvar PromiseQueue = /*#__PURE__*/function () {\n  function PromiseQueue() {\n    _classCallCheck(this, PromiseQueue);\n\n    this.queue = [];\n    this.running = false;\n  }\n\n  _createClass(PromiseQueue, [{\n    key: \"push\",\n    value: function push(method, thisObject) {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.queue.push({\n          method: method,\n          thisObject: thisObject,\n          args: args,\n          resolve: resolve,\n          reject: reject\n        });\n\n        _this.run();\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this2 = this;\n\n      if (this.running) {\n        return;\n      }\n\n      if (this.queue.length === 0) {\n        return;\n      }\n\n      this.running = true;\n      var queueItem = this.queue.shift();\n      var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n\n      if (isPromise(res)) {\n        res.then(queueItem.resolve, queueItem.reject).finally(function () {\n          _this2.running = false;\n\n          _this2.run();\n        });\n      } else {\n        queueItem.resolve(res);\n        this.running = false;\n        this.run();\n      }\n    }\n  }]);\n\n  return PromiseQueue;\n}();\n\nfunction fingerprint(sdk, options) {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        return;\n      }\n\n      if (!msg) {\n        return;\n      }\n\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint);\n      }\n\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n\n    addListener(window, 'message', listener);\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n    timeout = setTimeout(function () {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options.timeout || 15000);\n  });\n  return promise.finally(function () {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n}\n\nvar PCancelable = require('p-cancelable');\n\nvar INITIAL_AUTH_STATE = null;\nvar DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nvar EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nvar MAX_PROMISE_CANCEL_TIMES = 10;\n\nvar isSameAuthState = function isSameAuthState(prevState, state) {\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken) && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken) && prevState.error === state.error;\n};\n\nvar AuthStateManager = /*#__PURE__*/function () {\n  function AuthStateManager(sdk) {\n    var _this = this;\n\n    _classCallCheck(this, AuthStateManager);\n\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = Object.assign({}, DEFAULT_PENDING);\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    sdk.tokenManager.on(EVENT_ADDED, function (key, token) {\n      _this._setLogOptions({\n        event: EVENT_ADDED,\n        key: key,\n        token: token\n      });\n\n      _this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, function (key, token) {\n      _this._setLogOptions({\n        event: EVENT_REMOVED,\n        key: key,\n        token: token\n      });\n\n      _this.updateAuthState();\n    });\n  }\n\n  _createClass(AuthStateManager, [{\n    key: \"_setLogOptions\",\n    value: function _setLogOptions(options) {\n      this._logOptions = options;\n    }\n  }, {\n    key: \"getAuthState\",\n    value: function getAuthState() {\n      return this._authState;\n    }\n  }, {\n    key: \"getPreviousAuthState\",\n    value: function getPreviousAuthState() {\n      return this._prevAuthState;\n    }\n  }, {\n    key: \"updateAuthState\",\n    value: function () {\n      var _updateAuthState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$_sdk$options, transformAuthState, devMode, log, emitAuthStateChange, finalPromise, cancelablePromise;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$_sdk$options = this._sdk.options, transformAuthState = _this$_sdk$options.transformAuthState, devMode = _this$_sdk$options.devMode;\n\n                log = function log(status) {\n                  var _this2$_logOptions = _this2._logOptions,\n                      event = _this2$_logOptions.event,\n                      key = _this2$_logOptions.key,\n                      token = _this2$_logOptions.token;\n                  getConsole().group(\"OKTA-AUTH-JS:updateAuthState: Event:\".concat(event, \" Status:\").concat(status));\n                  getConsole().log(key, token);\n                  getConsole().log('Current authState', _this2._authState);\n                  getConsole().groupEnd();\n                  _this2._logOptions = {};\n                };\n\n                emitAuthStateChange = function emitAuthStateChange(authState) {\n                  if (isSameAuthState(_this2._authState, authState)) {\n                    devMode && log('unchanged');\n                    return;\n                  }\n\n                  _this2._prevAuthState = _this2._authState;\n                  _this2._authState = authState;\n\n                  _this2._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, Object.assign({}, authState));\n\n                  devMode && log('emitted');\n                };\n\n                finalPromise = function finalPromise(origPromise) {\n                  return _this2._pending.updateAuthStatePromise.then(function () {\n                    var curPromise = _this2._pending.updateAuthStatePromise;\n\n                    if (curPromise && curPromise !== origPromise) {\n                      return finalPromise(curPromise);\n                    }\n\n                    return _this2.getAuthState();\n                  });\n                };\n\n                if (!this._pending.updateAuthStatePromise) {\n                  _context.next = 11;\n                  break;\n                }\n\n                if (!(this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                devMode && log('terminated');\n                return _context.abrupt(\"return\", finalPromise(this._pending.updateAuthStatePromise));\n\n              case 10:\n                this._pending.updateAuthStatePromise.cancel();\n\n              case 11:\n                cancelablePromise = new PCancelable(function (resolve, _, onCancel) {\n                  onCancel.shouldReject = false;\n                  onCancel(function () {\n                    _this2._pending.updateAuthStatePromise = null;\n                    _this2._pending.canceledTimes = _this2._pending.canceledTimes + 1;\n                    devMode && log('canceled');\n                  });\n\n                  var emitAndResolve = function emitAndResolve(authState) {\n                    if (cancelablePromise.isCanceled) {\n                      resolve();\n                      return;\n                    }\n\n                    emitAuthStateChange(authState);\n                    resolve();\n                    _this2._pending = Object.assign({}, DEFAULT_PENDING);\n                  };\n\n                  _this2._sdk.isAuthenticated().then(function () {\n                    if (cancelablePromise.isCanceled) {\n                      resolve();\n                      return;\n                    }\n\n                    var _this2$_sdk$tokenMana = _this2._sdk.tokenManager.getTokensSync(),\n                        accessToken = _this2$_sdk$tokenMana.accessToken,\n                        idToken = _this2$_sdk$tokenMana.idToken,\n                        refreshToken = _this2$_sdk$tokenMana.refreshToken;\n\n                    var authState = {\n                      accessToken: accessToken,\n                      idToken: idToken,\n                      refreshToken: refreshToken,\n                      isAuthenticated: !!(accessToken && idToken)\n                    };\n                    var promise = transformAuthState ? transformAuthState(_this2._sdk, authState) : Promise.resolve(authState);\n                    promise.then(function (authState) {\n                      return emitAndResolve(authState);\n                    }).catch(function (error) {\n                      return emitAndResolve({\n                        accessToken: accessToken,\n                        idToken: idToken,\n                        refreshToken: refreshToken,\n                        isAuthenticated: false,\n                        error: error\n                      });\n                    });\n                  });\n                });\n                this._pending.updateAuthStatePromise = cancelablePromise;\n                return _context.abrupt(\"return\", finalPromise(cancelablePromise));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateAuthState() {\n        return _updateAuthState.apply(this, arguments);\n      }\n\n      return updateAuthState;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n  }]);\n\n  return AuthStateManager;\n}();\n\nvar SavedObject = /*#__PURE__*/function () {\n  function SavedObject(storage, storageName) {\n    _classCallCheck(this, SavedObject);\n\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  _createClass(SavedObject, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.getStorage()[key];\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      return this.updateStorage(key, value);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return this.clearStorage(key);\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      var storageString = this.storageProvider.getItem(this.storageName);\n      storageString = storageString || '{}';\n\n      try {\n        return JSON.parse(storageString);\n      } catch (e) {\n        throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n      }\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage(obj) {\n      try {\n        var storageString = obj ? JSON.stringify(obj) : '{}';\n        this.storageProvider.setItem(this.storageName, storageString);\n      } catch (e) {\n        throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n      }\n    }\n  }, {\n    key: \"clearStorage\",\n    value: function clearStorage(key) {\n      if (!key) {\n        if (this.storageProvider.removeItem) {\n          this.storageProvider.removeItem(this.storageName);\n        } else {\n          this.setStorage();\n        }\n\n        return;\n      }\n\n      var obj = this.getStorage();\n      delete obj[key];\n      this.setStorage(obj);\n    }\n  }, {\n    key: \"updateStorage\",\n    value: function updateStorage(key, value) {\n      var obj = this.getStorage();\n      obj[key] = value;\n      this.setStorage(obj);\n    }\n  }]);\n\n  return SavedObject;\n}();\n\nfunction logServerSideMemoryStorageWarning(options) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nvar StorageManager = /*#__PURE__*/function () {\n  function StorageManager(storageManagerOptions, cookieOptions, storageUtil) {\n    _classCallCheck(this, StorageManager);\n\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  _createClass(StorageManager, [{\n    key: \"getOptionsForSection\",\n    value: function getOptionsForSection(sectionName, overrideOptions) {\n      return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage(options) {\n      options = Object.assign({}, this.cookieOptions, options);\n\n      if (options.storageProvider) {\n        return options.storageProvider;\n      }\n\n      var _options = options,\n          storageType = _options.storageType,\n          storageTypes = _options.storageTypes;\n\n      if (storageType === 'sessionStorage') {\n        options.sessionCookie = true;\n      }\n\n      if (storageType && storageTypes) {\n        var idx = storageTypes.indexOf(storageType);\n\n        if (idx >= 0) {\n          storageTypes = storageTypes.slice(idx);\n          storageType = null;\n        }\n      }\n\n      if (!storageType) {\n        storageType = this.storageUtil.findStorageType(storageTypes);\n      }\n\n      return this.storageUtil.getStorageByType(storageType, options);\n    }\n  }, {\n    key: \"getTransactionStorage\",\n    value: function getTransactionStorage(options) {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getSharedTansactionStorage\",\n    value: function getSharedTansactionStorage(options) {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getOriginalUriStorage\",\n    value: function getOriginalUriStorage(options) {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getIdxResponseStorage\",\n    value: function getIdxResponseStorage(options) {\n      var storage;\n\n      if (isBrowser()) {\n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        var transactionStorage = this.getTransactionStorage(options);\n\n        if (transactionStorage) {\n          storage = {\n            getItem: function getItem(key) {\n              var transaction = transactionStorage.getStorage();\n\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n\n              return null;\n            },\n            setItem: function setItem(key, val) {\n              var transaction = transactionStorage.getStorage();\n\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: function removeItem(key) {\n              var transaction = transactionStorage.getStorage();\n\n              if (!transaction) {\n                return;\n              }\n\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  }, {\n    key: \"getTokenStorage\",\n    value: function getTokenStorage(options) {\n      options = this.getOptionsForSection('token', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getHttpCache\",\n    value: function getHttpCache(options) {\n      options = this.getOptionsForSection('cache', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || CACHE_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getLegacyPKCEStorage\",\n    value: function getLegacyPKCEStorage(options) {\n      options = this.getOptionsForSection('legacy-pkce', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || PKCE_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getLegacyOAuthParamsStorage\",\n    value: function getLegacyOAuthParamsStorage(options) {\n      options = this.getOptionsForSection('legacy-oauth-params', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }]);\n\n  return StorageManager;\n}();\n\nfunction isRawIdxResponse(obj) {\n  return obj && obj.version;\n}\n\nfunction isIdxResponse(obj) {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n\nvar MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\n\nfunction pruneSharedStorage(storageManager) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(function (state) {\n    var entry = entries[state];\n    var age = Date.now() - entry.dateCreated;\n\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  var entry = entries[state];\n\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n\n  return null;\n}\n\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n\nvar TransactionManager = /*#__PURE__*/function () {\n  function TransactionManager(options) {\n    _classCallCheck(this, TransactionManager);\n\n    this.storageManager = options.storageManager;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.options = options;\n  }\n\n  _createClass(TransactionManager, [{\n    key: \"clear\",\n    value: function clear() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var transactionStorage = this.storageManager.getTransactionStorage();\n      var meta = transactionStorage.getStorage();\n      transactionStorage.clearStorage();\n      this.clearIdxResponse();\n\n      if (this.enableSharedStorage && options.clearSharedStorage) {\n        var state = options.state || (meta === null || meta === void 0 ? void 0 : meta.state);\n\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n\n      if (!this.legacyWidgetSupport) {\n        return;\n      }\n\n      if (options.oauth) {\n        this.clearLegacyOAuthParams();\n      }\n\n      if (options.pkce) {\n        this.clearLegacyPKCE();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(meta) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var storage = this.storageManager.getTransactionStorage();\n      var obj = storage.getStorage();\n\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n\n      if (!options.oauth) {\n        return;\n      }\n\n      if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n        var cookieStorage = this.storageManager.getStorage({\n          storageType: 'cookie'\n        });\n\n        if (this.saveParamsCookie) {\n          var responseType = meta.responseType,\n              state = meta.state,\n              nonce = meta.nonce,\n              scopes = meta.scopes,\n              clientId = meta.clientId,\n              urls = meta.urls,\n              ignoreSignature = meta.ignoreSignature;\n          var oauthParams = {\n            responseType: responseType,\n            state: state,\n            nonce: nonce,\n            scopes: scopes,\n            clientId: clientId,\n            urls: urls,\n            ignoreSignature: ignoreSignature\n          };\n          cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n        }\n\n        if (this.saveNonceCookie && meta.nonce) {\n          cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n        }\n\n        if (this.saveStateCookie && meta.state) {\n          cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n        }\n      }\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      try {\n        var meta = this.load(options);\n        return !!meta;\n      } catch (_a) {\n        return false;\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var meta;\n\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager);\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      var storage = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n\n      if (!this.legacyWidgetSupport) {\n        return null;\n      }\n\n      if (options.oauth) {\n        try {\n          var oauthParams = this.loadLegacyOAuthParams();\n          Object.assign(meta, oauthParams);\n        } finally {\n          this.clearLegacyOAuthParams();\n        }\n      }\n\n      if (options.pkce) {\n        try {\n          var pkceMeta = this.loadLegacyPKCE();\n          Object.assign(meta, pkceMeta);\n        } finally {\n          this.clearLegacyPKCE();\n        }\n      }\n\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"clearLegacyPKCE\",\n    value: function clearLegacyPKCE() {\n      var storage;\n\n      if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'localStorage'\n        });\n        storage.clearStorage();\n      }\n\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'sessionStorage'\n        });\n        storage.clearStorage();\n      }\n    }\n  }, {\n    key: \"loadLegacyPKCE\",\n    value: function loadLegacyPKCE() {\n      var storage;\n      var obj;\n\n      if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'localStorage'\n        });\n        obj = storage.getStorage();\n\n        if (obj && obj.codeVerifier) {\n          return obj;\n        }\n      }\n\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'sessionStorage'\n        });\n        obj = storage.getStorage();\n\n        if (obj && obj.codeVerifier) {\n          return obj;\n        }\n      }\n\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', null);\n    }\n  }, {\n    key: \"clearLegacyOAuthParams\",\n    value: function clearLegacyOAuthParams() {\n      var storage;\n\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'sessionStorage'\n        });\n        storage.clearStorage();\n      }\n\n      if (this.storageManager.storageUtil.testStorageType('cookie')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'cookie'\n        });\n        storage.clearStorage();\n      }\n    }\n  }, {\n    key: \"loadLegacyOAuthParams\",\n    value: function loadLegacyOAuthParams() {\n      var storage;\n      var oauthParams;\n\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'sessionStorage'\n        });\n        oauthParams = storage.getStorage();\n      }\n\n      if (isOAuthTransactionMeta(oauthParams)) {\n        return oauthParams;\n      }\n\n      if (this.storageManager.storageUtil.testStorageType('cookie')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'cookie'\n        });\n        oauthParams = storage.getStorage();\n      }\n\n      if (isOAuthTransactionMeta(oauthParams)) {\n        return oauthParams;\n      }\n\n      throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n    }\n  }, {\n    key: \"saveIdxResponse\",\n    value: function saveIdxResponse(idxResponse) {\n      var storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return;\n      }\n\n      storage.setStorage(idxResponse);\n    }\n  }, {\n    key: \"loadIdxResponse\",\n    value: function loadIdxResponse() {\n      var storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return null;\n      }\n\n      var idxResponse = storage.getStorage();\n\n      if (!isRawIdxResponse(idxResponse)) {\n        return null;\n      }\n\n      return idxResponse;\n    }\n  }, {\n    key: \"clearIdxResponse\",\n    value: function clearIdxResponse() {\n      var storage = this.storageManager.getIdxResponseStorage();\n      storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n    }\n  }]);\n\n  return TransactionManager;\n}();\n\nfunction _createForOfIteratorHelper$3(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray$3(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);\n}\n\nfunction _arrayLikeToArray$3(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction readData(response) {\n  if (response.headers.get('Content-Type') && response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n    return response.json().catch(function (e) {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status, data, response) {\n  var isObject = _typeof(data) === 'object';\n  var headers = {};\n\n  var _iterator = _createForOfIteratorHelper$3(response.headers.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var pair = _step.value;\n      headers[pair[0]] = pair[1];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var result = {\n    responseText: isObject ? JSON.stringify(data) : data,\n    status: status,\n    headers: headers\n  };\n\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data;\n  }\n\n  return result;\n}\n\nfunction fetchRequest(method, url, args) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = headers['Content-Type'] || headers['content-type'] || '';\n\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n\n  var fetch = window.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function (response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response).then(function (data) {\n      return formatResult(status, data, response);\n    }).then(function (result) {\n      var _a;\n\n      if (error || ((_a = result.responseJSON) === null || _a === void 0 ? void 0 : _a.error)) {\n        throw result;\n      }\n\n      return result;\n    });\n  });\n}\n\nvar NodeCache = require('node-cache');\n\nvar sharedStorage = typeof NodeCache === 'function' ? new NodeCache() : null;\n\nvar ServerCookies = /*#__PURE__*/function () {\n  function ServerCookies(nodeCache) {\n    _classCallCheck(this, ServerCookies);\n\n    this.nodeCache = nodeCache;\n  }\n\n  _createClass(ServerCookies, [{\n    key: \"set\",\n    value: function set(name, value, expiresAt) {\n      if (!!Date.parse(expiresAt)) {\n        var ttl = (Date.parse(expiresAt) - Date.now()) / 1000;\n        this.nodeCache.set(name, value, ttl);\n      } else {\n        this.nodeCache.set(name, value);\n      }\n\n      return this.get(name);\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return this.nodeCache.get(name);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      return this.nodeCache.del(name);\n    }\n  }]);\n\n  return ServerCookies;\n}();\n\nvar ServerStorage = /*#__PURE__*/function () {\n  function ServerStorage(nodeCache) {\n    _classCallCheck(this, ServerStorage);\n\n    this.nodeCache = nodeCache;\n    this.storage = new ServerCookies(nodeCache);\n  }\n\n  _createClass(ServerStorage, [{\n    key: \"testStorageType\",\n    value: function testStorageType(storageType) {\n      var supported = false;\n\n      switch (storageType) {\n        case 'memory':\n          supported = true;\n          break;\n      }\n\n      return supported;\n    }\n  }, {\n    key: \"getStorageByType\",\n    value: function getStorageByType(storageType) {\n      var storageProvider = null;\n\n      switch (storageType) {\n        case 'memory':\n          storageProvider = this.getStorage();\n          break;\n\n        default:\n          throw new AuthSdkError(\"Unrecognized storage option: \".concat(storageType));\n      }\n\n      return storageProvider;\n    }\n  }, {\n    key: \"findStorageType\",\n    value: function findStorageType() {\n      return 'memory';\n    }\n  }, {\n    key: \"getHttpCache\",\n    value: function getHttpCache() {\n      return null;\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      var _this = this;\n\n      return {\n        getItem: this.nodeCache.get,\n        setItem: function setItem(key, value) {\n          _this.nodeCache.set(key, value, '2200-01-01T00:00:00.000Z');\n        }\n      };\n    }\n  }]);\n\n  return ServerStorage;\n}();\n\nvar serverStorage = new ServerStorage(sharedStorage);\nvar BROWSER_STORAGE = {\n  token: {\n    storageTypes: ['localStorage', 'sessionStorage', 'cookie'],\n    useMultipleCookies: true\n  },\n  cache: {\n    storageTypes: ['localStorage', 'sessionStorage', 'cookie']\n  },\n  transaction: {\n    storageTypes: ['sessionStorage', 'localStorage', 'cookie']\n  },\n  'shared-transaction': {\n    storageTypes: ['localStorage']\n  },\n  'original-uri': {\n    storageTypes: ['localStorage']\n  }\n};\nvar SERVER_STORAGE = {\n  token: {\n    storageTypes: ['memory']\n  },\n  cache: {\n    storageTypes: ['memory']\n  },\n  transaction: {\n    storageTypes: ['memory']\n  }\n};\n\nfunction getCookieSettings() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isHTTPS = arguments.length > 1 ? arguments[1] : undefined;\n  var cookieSettings = args.cookies || {};\n\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  if (cookieSettings.secure && !isHTTPS) {\n    warn('The current page is not being served with the HTTPS protocol.\\n' + 'For security reasons, we strongly recommend using HTTPS.\\n' + 'If you cannot use HTTPS, set \"cookies.secure\" option to false.');\n    cookieSettings.secure = false;\n  }\n\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n\nfunction getDefaultOptions() {\n  var storageUtil$1 = isBrowser() ? storageUtil : serverStorage;\n  var storageManager = isBrowser() ? BROWSER_STORAGE : SERVER_STORAGE;\n  var enableSharedStorage = isBrowser() ? true : false;\n  return {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: storageUtil$1,\n    storageManager: storageManager,\n    transactionManager: {\n      enableSharedStorage: enableSharedStorage\n    }\n  };\n}\n\nfunction mergeOptions(options, args) {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager)\n  });\n}\n\nfunction buildOptions() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true,\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: isBrowser() ? getCookieSettings(args, isHTTPS()) : args.cookies,\n    ignoreSignature: !!args.ignoreSignature,\n    clientSecret: args.clientSecret\n  });\n}\n\nfunction createTransactionMeta(_x, _x2) {\n  return _createTransactionMeta.apply(this, arguments);\n}\n\nfunction _createTransactionMeta() {\n  _createTransactionMeta = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var tokenParams, pkce, clientId, redirectUri, responseType, responseMode, scopes, state, nonce, ignoreSignature, codeVerifier, codeChallengeMethod, codeChallenge, urls, flow, issuer, meta;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return authClient.token.prepareTokenParams(options);\n\n          case 2:\n            tokenParams = _context.sent;\n            pkce = tokenParams.pkce, clientId = tokenParams.clientId, redirectUri = tokenParams.redirectUri, responseType = tokenParams.responseType, responseMode = tokenParams.responseMode, scopes = tokenParams.scopes, state = tokenParams.state, nonce = tokenParams.nonce, ignoreSignature = tokenParams.ignoreSignature, codeVerifier = tokenParams.codeVerifier, codeChallengeMethod = tokenParams.codeChallengeMethod, codeChallenge = tokenParams.codeChallenge;\n            urls = getOAuthUrls(authClient, tokenParams);\n            flow = authClient.idx.getFlow() || 'default';\n            issuer = authClient.options.issuer;\n            meta = {\n              flow: flow,\n              issuer: issuer,\n              pkce: pkce,\n              clientId: clientId,\n              redirectUri: redirectUri,\n              responseType: responseType,\n              responseMode: responseMode,\n              scopes: scopes,\n              state: state,\n              nonce: nonce,\n              urls: urls,\n              ignoreSignature: ignoreSignature,\n              codeVerifier: codeVerifier,\n              codeChallengeMethod: codeChallengeMethod,\n              codeChallenge: codeChallenge\n            };\n            return _context.abrupt(\"return\", meta);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createTransactionMeta.apply(this, arguments);\n}\n\nfunction transactionMetaExist(authClient, options) {\n  if (authClient.transactionManager.exists(options)) {\n    var existing = authClient.transactionManager.load(options);\n\n    if (isTransactionMetaValid(authClient, existing) && existing.interactionHandle) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getSavedTransactionMeta(authClient, options) {\n  var state = (options === null || options === void 0 ? void 0 : options.state) || authClient.options.state;\n  var existing = authClient.transactionManager.load({\n    state: state\n  });\n\n  if (existing && isTransactionMetaValid(authClient, existing)) {\n    return existing;\n  }\n}\n\nfunction getTransactionMeta(_x3, _x4) {\n  return _getTransactionMeta.apply(this, arguments);\n}\n\nfunction _getTransactionMeta() {\n  _getTransactionMeta = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(authClient, options) {\n    var validExistingMeta;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!authClient.transactionManager.exists(options)) {\n              _context2.next = 5;\n              break;\n            }\n\n            validExistingMeta = getSavedTransactionMeta(authClient, options);\n\n            if (!validExistingMeta) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", validExistingMeta);\n\n          case 4:\n            warn('Saved transaction meta does not match the current configuration. ' + 'This may indicate that two apps are sharing a storage key.');\n\n          case 5:\n            return _context2.abrupt(\"return\", createTransactionMeta(authClient, options));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getTransactionMeta.apply(this, arguments);\n}\n\nfunction saveTransactionMeta(authClient, meta) {\n  authClient.transactionManager.save(meta, {\n    muteWarning: true\n  });\n}\n\nfunction isTransactionMetaValid(authClient, meta) {\n  var keys = ['issuer', 'clientId', 'redirectUri'];\n\n  if (keys.some(function (key) {\n    return authClient.options[key] !== meta[key];\n  })) {\n    return false;\n  }\n\n  var _authClient$options = authClient.options,\n      flow = _authClient$options.flow,\n      state = _authClient$options.state;\n\n  if (state && state !== meta.state) {\n    return false;\n  }\n\n  var shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getResponse(meta) {\n  return {\n    meta: meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\n\nfunction interact(_x) {\n  return _interact.apply(this, arguments);\n}\n\nfunction _interact() {\n  _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n        state,\n        meta,\n        codeChallenge,\n        codeChallengeMethod,\n        _authClient$options,\n        clientId,\n        redirectUri,\n        scopes,\n        baseUrl,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            state = options.state || authClient.options.state;\n            _context.next = 4;\n            return getTransactionMeta(authClient, {\n              state: state\n            });\n\n          case 4:\n            meta = _context.sent;\n\n            if (!meta.interactionHandle) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", getResponse(meta));\n\n          case 7:\n            codeChallenge = meta.codeChallenge, codeChallengeMethod = meta.codeChallengeMethod;\n            _authClient$options = authClient.options, clientId = _authClient$options.clientId, redirectUri = _authClient$options.redirectUri;\n            state = state || meta.state;\n            scopes = options.scopes || authClient.options.scopes || meta.scopes;\n            baseUrl = getOAuthBaseUrl(authClient);\n            return _context.abrupt(\"return\", idx.interact({\n              clientId: clientId,\n              baseUrl: baseUrl,\n              scopes: scopes,\n              state: state,\n              redirectUri: redirectUri,\n              codeChallenge: codeChallenge,\n              codeChallengeMethod: codeChallengeMethod\n            }).then(function (interactionHandle) {\n              var newMeta = Object.assign(Object.assign({}, meta), {\n                interactionHandle: interactionHandle,\n                state: state,\n                scopes: scopes\n              });\n              saveTransactionMeta(authClient, newMeta);\n              return getResponse(newMeta);\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _interact.apply(this, arguments);\n}\n\nfunction introspect(_x, _x2) {\n  return _introspect.apply(this, arguments);\n}\n\nfunction _introspect() {\n  _introspect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var useLastResponse, rawIdxResponse, version, domain;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            useLastResponse = !options.stateTokenExternalId;\n\n            if (useLastResponse) {\n              rawIdxResponse = authClient.transactionManager.loadIdxResponse();\n            }\n\n            if (rawIdxResponse) {\n              _context.next = 18;\n              break;\n            }\n\n            version = IDX_API_VERSION;\n            domain = getOAuthDomain(authClient);\n            _context.prev = 5;\n            _context.next = 8;\n            return idx.introspect(Object.assign({\n              domain: domain,\n              version: version\n            }, options));\n\n          case 8:\n            rawIdxResponse = _context.sent;\n            _context.next = 18;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](5);\n\n            if (!isRawIdxResponse(_context.t0)) {\n              _context.next = 17;\n              break;\n            }\n\n            rawIdxResponse = _context.t0;\n            _context.next = 18;\n            break;\n\n          case 17:\n            throw _context.t0;\n\n          case 18:\n            return _context.abrupt(\"return\", idx.makeIdxState(rawIdxResponse));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 11]]);\n  }));\n  return _introspect.apply(this, arguments);\n}\n\nfunction _createForOfIteratorHelper$2(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray$2(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n}\n\nfunction _arrayLikeToArray$2(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction getRemediator(idxRemediations, values, options) {\n  var remediators = options.remediators,\n      flowMonitor = options.flowMonitor;\n  var remediator;\n  var remediatorCandidates = [];\n\n  var _iterator = _createForOfIteratorHelper$2(idxRemediations),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var remediation = _step.value;\n      var isRemeditionInFlow = Object.keys(remediators).includes(remediation.name);\n\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      var T = remediators[remediation.name];\n      remediator = new T(remediation, values);\n\n      if (flowMonitor.isRemediatorCandidate(remediator, idxRemediations, values)) {\n        if (remediator.canRemediate()) {\n          return remediator;\n        }\n\n        remediatorCandidates.push(remediator);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return remediatorCandidates[0];\n}\n\nfunction isTerminalResponse(idxResponse) {\n  var neededToProceed = idxResponse.neededToProceed,\n      interactionCode = idxResponse.interactionCode;\n  return !neededToProceed.length && !interactionCode;\n}\n\nfunction canSkipFn(idxResponse) {\n  return idxResponse.neededToProceed.some(function (_ref) {\n    var name = _ref.name;\n    return name === 'skip';\n  });\n}\n\nfunction canResendFn(idxResponse) {\n  return Object.keys(idxResponse.actions).some(function (actionName) {\n    return actionName.includes('resend');\n  });\n}\n\nfunction getIdxMessages(idxResponse, remediators) {\n  var _a;\n\n  var messages = [];\n\n  if (!remediators) {\n    return messages;\n  }\n\n  var rawIdxState = idxResponse.rawIdxState,\n      neededToProceed = idxResponse.neededToProceed;\n  var globalMessages = (_a = rawIdxState.messages) === null || _a === void 0 ? void 0 : _a.value.map(function (message) {\n    return message;\n  });\n\n  if (globalMessages) {\n    messages = [].concat(_toConsumableArray(messages), _toConsumableArray(globalMessages));\n  }\n\n  var _iterator2 = _createForOfIteratorHelper$2(neededToProceed),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var remediation = _step2.value;\n      var T = remediators[remediation.name];\n\n      if (!T) {\n        continue;\n      }\n\n      var remediator = new T(remediation);\n      var fieldMessages = remediator.getMessages();\n\n      if (fieldMessages) {\n        messages = [].concat(_toConsumableArray(messages), _toConsumableArray(fieldMessages));\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return messages;\n}\n\nfunction getNextStep(remediator, idxResponse) {\n  var nextStep = remediator.getNextStep();\n  var canSkip = canSkipFn(idxResponse);\n  var canResend = canResendFn(idxResponse);\n  return Object.assign(Object.assign(Object.assign({}, nextStep), canSkip && {\n    canSkip: canSkip\n  }), canResend && {\n    canResend: canResend\n  });\n}\n\nfunction handleIdxError(e, remediators, remediator) {\n  var idxState = isIdxResponse(e) ? e : null;\n\n  if (!idxState) {\n    throw e;\n  }\n\n  var terminal = isTerminalResponse(idxState);\n  var messages = getIdxMessages(idxState, remediators);\n\n  if (terminal) {\n    return {\n      terminal: terminal,\n      messages: messages\n    };\n  } else {\n    var nextStep = remediator && getNextStep(remediator, idxState);\n    return Object.assign({\n      messages: messages\n    }, nextStep && {\n      nextStep: nextStep\n    });\n  }\n}\n\nfunction getActionFromValues(values, idxResponse) {\n  return Object.keys(idxResponse.actions).find(function (action) {\n    return !!values.resend && action.includes('-resend');\n  });\n}\n\nfunction removeActionFromValues(values) {\n  values.resend = undefined;\n  return values;\n}\n\nfunction remediate(_x, _x2, _x3) {\n  return _remediate.apply(this, arguments);\n}\n\nfunction _remediate() {\n  _remediate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(idxResponse, values, options) {\n    var _idxResponse, neededToProceed, interactionCode, remediators, flowMonitor, terminal, messages, actionFromValues, actions, _iterator3, _step3, action, valuesWithoutExecutedAction, remediator, nextStep, name, data, _terminal, _messages, _nextStep;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _idxResponse = idxResponse, neededToProceed = _idxResponse.neededToProceed, interactionCode = _idxResponse.interactionCode;\n            remediators = options.remediators, flowMonitor = options.flowMonitor;\n\n            if (!interactionCode) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              idxResponse: idxResponse\n            });\n\n          case 4:\n            terminal = isTerminalResponse(idxResponse);\n            messages = getIdxMessages(idxResponse, remediators);\n\n            if (!terminal) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              terminal: terminal,\n              messages: messages\n            });\n\n          case 8:\n            actionFromValues = getActionFromValues(values, idxResponse);\n            actions = [].concat(_toConsumableArray(options.actions || []), _toConsumableArray(actionFromValues && [actionFromValues] || []));\n\n            if (!actions) {\n              _context.next = 40;\n              break;\n            }\n\n            _iterator3 = _createForOfIteratorHelper$2(actions);\n            _context.prev = 12;\n\n            _iterator3.s();\n\n          case 14:\n            if ((_step3 = _iterator3.n()).done) {\n              _context.next = 32;\n              break;\n            }\n\n            action = _step3.value;\n            valuesWithoutExecutedAction = removeActionFromValues(values);\n\n            if (!(typeof idxResponse.actions[action] === 'function')) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.prev = 18;\n            _context.next = 21;\n            return idxResponse.actions[action]();\n\n          case 21:\n            idxResponse = _context.sent;\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](18);\n            return _context.abrupt(\"return\", handleIdxError(_context.t0, remediators));\n\n          case 27:\n            if (!(action === 'cancel')) {\n              _context.next = 29;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              canceled: true\n            });\n\n          case 29:\n            return _context.abrupt(\"return\", remediate(idxResponse, valuesWithoutExecutedAction, options));\n\n          case 30:\n            _context.next = 14;\n            break;\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t1 = _context[\"catch\"](12);\n\n            _iterator3.e(_context.t1);\n\n          case 37:\n            _context.prev = 37;\n\n            _iterator3.f();\n\n            return _context.finish(37);\n\n          case 40:\n            remediator = getRemediator(neededToProceed, values, options);\n\n            if (remediator) {\n              _context.next = 43;\n              break;\n            }\n\n            throw new AuthSdkError(\"\\n      No remediation can match current flow, check policy settings in your org.\\n      Remediations: [\".concat(neededToProceed.reduce(function (acc, curr) {\n              return acc ? acc + ' ,' + curr.name : curr.name;\n            }, ''), \"]\\n    \"));\n\n          case 43:\n            if (!flowMonitor.loopDetected(remediator)) {\n              _context.next = 45;\n              break;\n            }\n\n            throw new AuthSdkError(\"\\n      Remediation run into loop, break!!! remediation: \".concat(remediator.getName(), \"\\n    \"));\n\n          case 45:\n            if (remediator.canRemediate()) {\n              _context.next = 48;\n              break;\n            }\n\n            nextStep = getNextStep(remediator, idxResponse);\n            return _context.abrupt(\"return\", {\n              idxResponse: idxResponse,\n              nextStep: nextStep\n            });\n\n          case 48:\n            name = remediator.getName();\n            data = remediator.getData();\n            _context.prev = 50;\n            _context.next = 53;\n            return idxResponse.proceed(name, data);\n\n          case 53:\n            idxResponse = _context.sent;\n            _context.next = 56;\n            return flowMonitor.trackRemediations(name);\n\n          case 56:\n            if (!idxResponse.interactionCode) {\n              _context.next = 58;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              idxResponse: idxResponse\n            });\n\n          case 58:\n            _terminal = isTerminalResponse(idxResponse);\n            _messages = getIdxMessages(idxResponse, remediators);\n\n            if (!_terminal) {\n              _context.next = 62;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              terminal: _terminal,\n              messages: _messages\n            });\n\n          case 62:\n            if (!_messages.length) {\n              _context.next = 65;\n              break;\n            }\n\n            _nextStep = getNextStep(remediator, idxResponse);\n            return _context.abrupt(\"return\", {\n              nextStep: _nextStep,\n              messages: _messages\n            });\n\n          case 65:\n            values = remediator.getValuesAfterProceed();\n            return _context.abrupt(\"return\", remediate(idxResponse, values, options));\n\n          case 69:\n            _context.prev = 69;\n            _context.t2 = _context[\"catch\"](50);\n            return _context.abrupt(\"return\", handleIdxError(_context.t2, remediators, remediator));\n\n          case 72:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[12, 34, 37, 40], [18, 24], [50, 69]]);\n  }));\n  return _remediate.apply(this, arguments);\n}\n\nfunction getAllValues(idxRemediation) {\n  return idxRemediation.value.map(function (r) {\n    return r.name;\n  });\n}\n\nfunction getRequiredValues(idxRemediation) {\n  return idxRemediation.value.reduce(function (required, cur) {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n\n    return required;\n  }, []);\n}\n\nfunction titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nfunction getAuthenticatorFromRemediation(remediation) {\n  return remediation.value.find(function (_ref) {\n    var name = _ref.name;\n    return name === 'authenticator';\n  });\n}\n\nvar Remediator = /*#__PURE__*/function () {\n  function Remediator(remediation) {\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Remediator);\n\n    var _a;\n\n    values.authenticators = ((_a = values.authenticators) === null || _a === void 0 ? void 0 : _a.map(function (authenticator) {\n      return typeof authenticator === 'string' ? {\n        key: authenticator\n      } : authenticator;\n    })) || [];\n    this.values = values;\n    this.remediation = remediation;\n  }\n\n  _createClass(Remediator, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.remediation.name;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this = this;\n\n      if (!this.map) {\n        return false;\n      }\n\n      var required = getRequiredValues(this.remediation);\n      var needed = required.find(function (key) {\n        return !_this.hasData(key);\n      });\n\n      if (needed) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(key) {\n      var _this2 = this;\n\n      if (!key) {\n        var allValues = getAllValues(this.remediation);\n        var res = allValues.reduce(function (data, key) {\n          data[key] = _this2.getData(key);\n          return data;\n        }, {});\n        return res;\n      }\n\n      if (typeof this[\"map\".concat(titleCase(key))] === 'function') {\n        return this[\"map\".concat(titleCase(key))](this.remediation.value.find(function (_ref) {\n          var name = _ref.name;\n          return name === key;\n        }));\n      }\n\n      if (!this.map) {\n        return this.values[key];\n      }\n\n      var entry = this.map[key];\n\n      if (!entry) {\n        return this.values[key];\n      }\n\n      for (var i = 0; i < entry.length; i++) {\n        var val = this.values[entry[i]];\n\n        if (val) {\n          return val;\n        }\n      }\n    }\n  }, {\n    key: \"hasData\",\n    value: function hasData(key) {\n      var data = this.getData(key);\n\n      if (_typeof(data) === 'object') {\n        return !!Object.keys(data).find(function (key) {\n          return !!data[key];\n        });\n      }\n\n      return !!data;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var name = this.getName();\n      var inputs = this.getInputs();\n      var authenticator = this.getAuthenticator();\n      var type = authenticator === null || authenticator === void 0 ? void 0 : authenticator.type;\n      return Object.assign(Object.assign({\n        name: name,\n        inputs: inputs\n      }, type && {\n        type: type\n      }), authenticator && {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      var _this3 = this;\n\n      if (!this.map) {\n        return [];\n      }\n\n      return Object.keys(this.map).reduce(function (inputs, key) {\n        var inputFromRemediation = _this3.remediation.value.find(function (item) {\n          return item.name === key;\n        });\n\n        if (!inputFromRemediation) {\n          return inputs;\n        }\n\n        var input;\n        var aliases = _this3.map[key];\n        var type = inputFromRemediation.type;\n\n        if (typeof _this3[\"getInput\".concat(titleCase(key))] === 'function') {\n          input = _this3[\"getInput\".concat(titleCase(key))](inputFromRemediation);\n        } else if (type !== 'object') {\n          var name;\n\n          if (aliases.length === 1) {\n            name = aliases[0];\n          } else {\n            name = aliases.find(function (name) {\n              return Object.keys(_this3.values).includes(name);\n            });\n          }\n\n          if (name) {\n            input = Object.assign(Object.assign({}, inputFromRemediation), {\n              name: name\n            });\n          }\n        }\n\n        if (!input) {\n          throw new AuthSdkError(\"Missing custom getInput\".concat(titleCase(key), \" method in Remediator: \").concat(_this3.getName()));\n        }\n\n        if (Array.isArray(input)) {\n          input.forEach(function (i) {\n            return inputs.push(i);\n          });\n        } else {\n          inputs.push(input);\n        }\n\n        return inputs;\n      }, []);\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var _a, _b;\n\n      if (!this.remediation.value) {\n        return;\n      }\n\n      return (_b = (_a = this.remediation.value[0]) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _b.value.reduce(function (messages, field) {\n        if (field.messages) {\n          messages = [].concat(_toConsumableArray(messages), _toConsumableArray(field.messages.value));\n        }\n\n        return messages;\n      }, []);\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _a, _b;\n\n      var authenticatorKey = (_a = this.getAuthenticator()) === null || _a === void 0 ? void 0 : _a.key;\n      var authenticators = (_b = this.values.authenticators) === null || _b === void 0 ? void 0 : _b.filter(function (authenticator) {\n        return authenticator.key !== authenticatorKey;\n      });\n      return Object.assign(Object.assign({}, this.values), {\n        authenticators: authenticators\n      });\n    }\n  }, {\n    key: \"getAuthenticator\",\n    value: function getAuthenticator() {\n      var _a;\n\n      return (_a = this.remediation.relatesTo) === null || _a === void 0 ? void 0 : _a.value;\n    }\n  }]);\n\n  return Remediator;\n}();\n\nfunction _createSuper$i(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$i();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$i() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar VerifyAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(VerifyAuthenticator, _Remediator);\n\n  var _super = _createSuper$i(VerifyAuthenticator);\n\n  function VerifyAuthenticator() {\n    var _this;\n\n    _classCallCheck(this, VerifyAuthenticator);\n\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      'credentials': []\n    };\n    return _this;\n  }\n\n  _createClass(VerifyAuthenticator, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return !!(this.values.password || this.values.verificationCode);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      return {\n        passcode: this.values.verificationCode || this.values.password\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      var _a;\n\n      var challengeType = this.getAuthenticator().type;\n      var name = challengeType === 'password' ? 'password' : 'verificationCode';\n      return Object.assign(Object.assign({}, (_a = input.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n        name: name,\n        type: 'string',\n        required: input.required\n      });\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var values = _get(_getPrototypeOf(VerifyAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n\n      var authenticator = this.getAuthenticator();\n\n      if (authenticator.type === 'password') {\n        delete values.password;\n      } else {\n        delete values.verificationCode;\n      }\n\n      return values;\n    }\n  }]);\n\n  return VerifyAuthenticator;\n}(Remediator);\n\nfunction _createSuper$h(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$h();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$h() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar EnrollAuthenticator = /*#__PURE__*/function (_VerifyAuthenticator) {\n  _inherits(EnrollAuthenticator, _VerifyAuthenticator);\n\n  var _super = _createSuper$h(EnrollAuthenticator);\n\n  function EnrollAuthenticator() {\n    _classCallCheck(this, EnrollAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  return EnrollAuthenticator;\n}(VerifyAuthenticator);\n\nEnrollAuthenticator.remediationName = 'enroll-authenticator';\n\nfunction _createSuper$g(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$g();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$g() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar ChallengeAuthenticator = /*#__PURE__*/function (_VerifyAuthenticator) {\n  _inherits(ChallengeAuthenticator, _VerifyAuthenticator);\n\n  var _super = _createSuper$g(ChallengeAuthenticator);\n\n  function ChallengeAuthenticator() {\n    _classCallCheck(this, ChallengeAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ChallengeAuthenticator;\n}(VerifyAuthenticator);\n\nChallengeAuthenticator.remediationName = 'challenge-authenticator';\n\nfunction _createSuper$f(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$f();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$f() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar ResetAuthenticator = /*#__PURE__*/function (_VerifyAuthenticator) {\n  _inherits(ResetAuthenticator, _VerifyAuthenticator);\n\n  var _super = _createSuper$f(ResetAuthenticator);\n\n  function ResetAuthenticator() {\n    _classCallCheck(this, ResetAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ResetAuthenticator;\n}(VerifyAuthenticator);\n\nResetAuthenticator.remediationName = 'reset-authenticator';\n\nfunction _createSuper$e(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$e();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$e() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar EnrollProfile = /*#__PURE__*/function (_Remediator) {\n  _inherits(EnrollProfile, _Remediator);\n\n  var _super = _createSuper$e(EnrollProfile);\n\n  function EnrollProfile() {\n    var _this;\n\n    _classCallCheck(this, EnrollProfile);\n\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      'userProfile': []\n    };\n    return _this;\n  }\n\n  _createClass(EnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var userProfileFromValues = this.getData().userProfile;\n      var userProfileFromRemediation = this.remediation.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'userProfile';\n      });\n      return userProfileFromRemediation.form.value.reduce(function (canRemediate, curr) {\n        if (curr.required) {\n          canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n        }\n\n        return canRemediate;\n      }, true);\n    }\n  }, {\n    key: \"mapUserProfile\",\n    value: function mapUserProfile(_ref2) {\n      var _this2 = this;\n\n      var profileAttributes = _ref2.form.value;\n      var attributeNames = profileAttributes.map(function (_ref3) {\n        var name = _ref3.name;\n        return name;\n      });\n      return attributeNames.reduce(function (attributeValues, attributeName) {\n        return _this2.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), _defineProperty({}, attributeName, _this2.values[attributeName])) : attributeValues;\n      }, {});\n    }\n  }, {\n    key: \"getInputUserProfile\",\n    value: function getInputUserProfile(input) {\n      return _toConsumableArray(input.form.value);\n    }\n  }, {\n    key: \"getErrorMessages\",\n    value: function getErrorMessages(errorRemediation) {\n      return errorRemediation.value[0].form.value.reduce(function (errors, field) {\n        if (field.messages) {\n          errors.push(field.messages.value[0].message);\n        }\n\n        return errors;\n      }, []);\n    }\n  }]);\n\n  return EnrollProfile;\n}(Remediator);\n\nEnrollProfile.remediationName = 'enroll-profile';\n\nfunction _createSuper$d(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$d();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$d() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Identify = /*#__PURE__*/function (_Remediator) {\n  _inherits(Identify, _Remediator);\n\n  var _super = _createSuper$d(Identify);\n\n  function Identify(remediation, values) {\n    var _this;\n\n    _classCallCheck(this, Identify);\n\n    _this = _super.call(this, remediation, values);\n    _this.map = {\n      'identifier': ['username'],\n      'credentials': [],\n      'rememberMe': ['rememberMe']\n    };\n    var _this$values = _this.values,\n        password = _this$values.password,\n        authenticators = _this$values.authenticators;\n\n    if (password && !authenticators.some(function (authenticator) {\n      return authenticator.type === 'password';\n    })) {\n      _this.values = Object.assign(Object.assign({}, _this.values), {\n        authenticators: [{\n          type: 'password',\n          key: AuthenticatorKey.OKTA_PASSWORD\n        }].concat(_toConsumableArray(authenticators))\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(Identify, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$getData = this.getData(),\n          identifier = _this$getData.identifier;\n\n      return !!identifier;\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      return {\n        passcode: this.values.password\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      return Object.assign(Object.assign({}, input.form.value[0]), {\n        name: 'password',\n        required: input.required\n      });\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _a;\n\n      if (this.remediation.value.some(function (_ref) {\n        var name = _ref.name;\n        return name === 'credentials';\n      })) {\n        var authenticators = (_a = this.values.authenticators) === null || _a === void 0 ? void 0 : _a.filter(function (authenticator) {\n          return authenticator.key !== AuthenticatorKey.OKTA_PASSWORD;\n        });\n        return Object.assign(Object.assign({}, this.values), {\n          authenticators: authenticators\n        });\n      }\n\n      return _get(_getPrototypeOf(Identify.prototype), \"getValuesAfterProceed\", this).call(this);\n    }\n  }]);\n\n  return Identify;\n}(Remediator);\n\nIdentify.remediationName = 'identify';\n\nfunction _createSuper$c(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$c();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$c() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar ReEnrollAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(ReEnrollAuthenticator, _Remediator);\n\n  var _super = _createSuper$c(ReEnrollAuthenticator);\n\n  function ReEnrollAuthenticator() {\n    var _this;\n\n    _classCallCheck(this, ReEnrollAuthenticator);\n\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      'credentials': []\n    };\n    return _this;\n  }\n\n  _createClass(ReEnrollAuthenticator, [{\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      return {\n        passcode: this.values.newPassword\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      var challengeType = this.getAuthenticator().type;\n      var name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n      return Object.assign(Object.assign({}, input.form.value[0]), {\n        name: name\n      });\n    }\n  }]);\n\n  return ReEnrollAuthenticator;\n}(Remediator);\n\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\n\nfunction _createSuper$b(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$b();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$b() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar RedirectIdp = /*#__PURE__*/function (_Remediator) {\n  _inherits(RedirectIdp, _Remediator);\n\n  var _super = _createSuper$b(RedirectIdp);\n\n  function RedirectIdp() {\n    _classCallCheck(this, RedirectIdp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RedirectIdp, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var _this$remediation = this.remediation,\n          name = _this$remediation.name,\n          type = _this$remediation.type,\n          idp = _this$remediation.idp,\n          href = _this$remediation.href;\n      return {\n        name: name,\n        type: type,\n        idp: idp,\n        href: href\n      };\n    }\n  }]);\n\n  return RedirectIdp;\n}(Remediator);\n\nRedirectIdp.remediationName = 'redirect-idp';\n\nfunction _createSuper$a(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$a();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$a() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _createForOfIteratorHelper$1(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\n\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction findMatchedOption(authenticators, options) {\n  var option;\n\n  var _iterator = _createForOfIteratorHelper$1(authenticators),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var authenticator = _step.value;\n      option = options.find(function (_ref) {\n        var relatesTo = _ref.relatesTo;\n        return relatesTo.key === authenticator.key;\n      });\n\n      if (option) {\n        return \"break\";\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n\n      if (_ret === \"break\") break;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return option;\n}\n\nvar SelectAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectAuthenticator, _Remediator);\n\n  var _super = _createSuper$a(SelectAuthenticator);\n\n  function SelectAuthenticator(remediation) {\n    var _this;\n\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SelectAuthenticator);\n\n    _this = _super.call(this, remediation, values);\n    _this.map = {\n      authenticator: []\n    };\n    var _this$values = _this.values,\n        selectedAuthenticator = _this$values.authenticator,\n        authenticators = _this$values.authenticators;\n    var hasSelectedAuthenticatorInList = authenticators === null || authenticators === void 0 ? void 0 : authenticators.some(function (authenticator) {\n      return authenticator.key === selectedAuthenticator;\n    });\n\n    if (selectedAuthenticator && !hasSelectedAuthenticatorInList) {\n      _this.values.authenticators = [].concat(_toConsumableArray(authenticators || []), [{\n        key: selectedAuthenticator\n      }]);\n    }\n\n    return _this;\n  }\n\n  _createClass(SelectAuthenticator, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var authenticators = this.values.authenticators;\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options;\n\n      if (!authenticators || !authenticators.length) {\n        return false;\n      }\n\n      var matchedOption = findMatchedOption(authenticators, options);\n\n      if (matchedOption) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var common = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getNextStep\", this).call(this);\n\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options.map(function (option) {\n        var label = option.label,\n            key = option.relatesTo.key;\n        return {\n          label: label,\n          value: key\n        };\n      });\n      return Object.assign(Object.assign({}, common), {\n        options: options\n      });\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var authenticators = this.values.authenticators;\n      var options = remediationValue.options;\n      var selectedOption = findMatchedOption(authenticators, options);\n      return {\n        id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'id';\n        }).value\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      return {\n        name: 'authenticator',\n        key: 'string'\n      };\n    }\n  }]);\n\n  return SelectAuthenticator;\n}(Remediator);\n\nfunction _createSuper$9(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$9();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$9() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar SelectAuthenticatorAuthenticate = /*#__PURE__*/function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorAuthenticate, _SelectAuthenticator);\n\n  var _super = _createSuper$9(SelectAuthenticatorAuthenticate);\n\n  function SelectAuthenticatorAuthenticate() {\n    _classCallCheck(this, SelectAuthenticatorAuthenticate);\n\n    return _super.apply(this, arguments);\n  }\n\n  return SelectAuthenticatorAuthenticate;\n}(SelectAuthenticator);\n\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\n\nfunction _createSuper$8(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$8();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$8() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar SelectAuthenticatorEnroll = /*#__PURE__*/function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorEnroll, _SelectAuthenticator);\n\n  var _super = _createSuper$8(SelectAuthenticatorEnroll);\n\n  function SelectAuthenticatorEnroll() {\n    _classCallCheck(this, SelectAuthenticatorEnroll);\n\n    return _super.apply(this, arguments);\n  }\n\n  return SelectAuthenticatorEnroll;\n}(SelectAuthenticator);\n\nSelectAuthenticatorEnroll.remediationName = 'select-authenticator-enroll';\n\nfunction _createSuper$7(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$7();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$7() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar SelectEnrollProfile = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectEnrollProfile, _Remediator);\n\n  var _super = _createSuper$7(SelectEnrollProfile);\n\n  function SelectEnrollProfile() {\n    _classCallCheck(this, SelectEnrollProfile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectEnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return true;\n    }\n  }]);\n\n  return SelectEnrollProfile;\n}(Remediator);\n\nSelectEnrollProfile.remediationName = 'select-enroll-profile';\n\nfunction _createSuper$6(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$6();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$6() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthenticatorData = /*#__PURE__*/function (_Remediator) {\n  _inherits(AuthenticatorData, _Remediator);\n\n  var _super = _createSuper$6(AuthenticatorData);\n\n  function AuthenticatorData(remediation) {\n    var _this;\n\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AuthenticatorData);\n\n    var _a;\n\n    _this = _super.call(this, remediation, values);\n    _this.map = {\n      'authenticator': []\n    };\n    var authenticators = _this.values.authenticators;\n\n    var authenticatorKey = _this.getAuthenticator().key;\n\n    var authenticator = (_a = authenticators) === null || _a === void 0 ? void 0 : _a.find(function (authenticator) {\n      return authenticator.key === authenticatorKey;\n    });\n\n    if (authenticator) {\n      _this.values.authenticators = authenticators.map(function (authenticator) {\n        if (authenticatorKey === authenticator.type) {\n          return _this.mapAuthenticatorFromValues(authenticator);\n        }\n\n        return authenticator;\n      });\n    } else {\n      _this.values.authenticators = [].concat(_toConsumableArray(authenticators), [_this.mapAuthenticatorFromValues()]);\n    }\n\n    return _this;\n  }\n\n  _createClass(AuthenticatorData, [{\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var common = _get(_getPrototypeOf(AuthenticatorData.prototype), \"getNextStep\", this).call(this);\n\n      var options = this.getMethodTypes();\n      return Object.assign(Object.assign({}, common), options && {\n        options: options\n      });\n    }\n  }, {\n    key: \"getAuthenticatorFromValues\",\n    value: function getAuthenticatorFromValues() {\n      if (!this.values.authenticators) {\n        return null;\n      }\n\n      var authenticatorKey = this.getAuthenticator().key;\n      var authenticator = this.values.authenticators.find(function (authenticator) {\n        return authenticator.key === authenticatorKey;\n      });\n      return authenticator;\n    }\n  }, {\n    key: \"mapAuthenticatorFromValues\",\n    value: function mapAuthenticatorFromValues(authenticator) {\n      var key = this.getAuthenticator().key;\n      var methodType = this.values.methodType;\n      return Object.assign(Object.assign({\n        key: key\n      }, authenticator && authenticator), methodType && {\n        methodType: methodType\n      });\n    }\n  }, {\n    key: \"getAuthenticatorFromRemediation\",\n    value: function getAuthenticatorFromRemediation() {\n      var authenticator = this.remediation.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'authenticator';\n      });\n      return authenticator;\n    }\n  }, {\n    key: \"getMethodTypes\",\n    value: function getMethodTypes() {\n      var _a;\n\n      var authenticator = this.getAuthenticatorFromRemediation();\n      return (_a = authenticator.form.value.find(function (_ref2) {\n        var name = _ref2.name;\n        return name === 'methodType';\n      })) === null || _a === void 0 ? void 0 : _a.options;\n    }\n  }]);\n\n  return AuthenticatorData;\n}(Remediator);\n\nfunction _createSuper$5(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$5() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthenticatorVerificationData = /*#__PURE__*/function (_AuthenticatorData) {\n  _inherits(AuthenticatorVerificationData, _AuthenticatorData);\n\n  var _super = _createSuper$5(AuthenticatorVerificationData);\n\n  function AuthenticatorVerificationData() {\n    _classCallCheck(this, AuthenticatorVerificationData);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthenticatorVerificationData, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var authenticator = this.getAuthenticatorFromValues();\n      return !!(authenticator && authenticator.methodType);\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator() {\n      var authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n      var authenticatorFromValues = this.getAuthenticatorFromValues();\n      return {\n        id: authenticatorFromRemediation.form.value.find(function (_ref) {\n          var name = _ref.name;\n          return name === 'id';\n        }).value,\n        enrollmentId: authenticatorFromRemediation.form.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'enrollmentId';\n        }).value,\n        methodType: authenticatorFromValues.methodType\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      var authenticator = this.getAuthenticatorFromRemediation();\n      var methodType = authenticator.form.value.find(function (_ref3) {\n        var name = _ref3.name;\n        return name === 'methodType';\n      });\n\n      if (methodType && methodType.options) {\n        return {\n          name: 'methodType',\n          type: 'string',\n          required: true\n        };\n      }\n\n      var inputs = _toConsumableArray(authenticator.form.value);\n\n      return inputs;\n    }\n  }]);\n\n  return AuthenticatorVerificationData;\n}(AuthenticatorData);\n\nAuthenticatorVerificationData.remediationName = 'authenticator-verification-data';\n\nfunction _createSuper$4(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$4() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthenticatorEnrollmentData = /*#__PURE__*/function (_AuthenticatorData) {\n  _inherits(AuthenticatorEnrollmentData, _AuthenticatorData);\n\n  var _super = _createSuper$4(AuthenticatorEnrollmentData);\n\n  function AuthenticatorEnrollmentData() {\n    _classCallCheck(this, AuthenticatorEnrollmentData);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthenticatorEnrollmentData, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var authenticator = this.getAuthenticatorFromValues();\n      return !!(authenticator && authenticator.methodType && authenticator.phoneNumber);\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator() {\n      var authenticatorFromValues = this.getAuthenticatorFromValues();\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      return {\n        id: authenticatorFromRemediation.form.value.find(function (_ref) {\n          var name = _ref.name;\n          return name === 'id';\n        }).value,\n        methodType: authenticatorFromValues.methodType,\n        phoneNumber: authenticatorFromValues.phoneNumber\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      return [{\n        name: 'methodType',\n        type: 'string',\n        required: true\n      }, {\n        name: 'phoneNumber',\n        type: 'string',\n        required: true\n      }];\n    }\n  }, {\n    key: \"mapAuthenticatorFromValues\",\n    value: function mapAuthenticatorFromValues(authenticator) {\n      authenticator = _get(_getPrototypeOf(AuthenticatorEnrollmentData.prototype), \"mapAuthenticatorFromValues\", this).call(this, authenticator);\n      var phoneNumber = this.values.phoneNumber;\n      return Object.assign(Object.assign({}, authenticator), phoneNumber && {\n        phoneNumber: phoneNumber\n      });\n    }\n  }]);\n\n  return AuthenticatorEnrollmentData;\n}(AuthenticatorData);\n\nAuthenticatorEnrollmentData.remediationName = 'authenticator-enrollment-data';\n\nfunction _createSuper$3(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$3() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Skip = /*#__PURE__*/function (_Remediator) {\n  _inherits(Skip, _Remediator);\n\n  var _super = _createSuper$3(Skip);\n\n  function Skip() {\n    _classCallCheck(this, Skip);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Skip, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return !!this.values.skip;\n    }\n  }]);\n\n  return Skip;\n}(Remediator);\n\nSkip.remediationName = 'skip';\nvar remediators = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Remediator: Remediator,\n  EnrollAuthenticator: EnrollAuthenticator,\n  ChallengeAuthenticator: ChallengeAuthenticator,\n  ResetAuthenticator: ResetAuthenticator,\n  EnrollProfile: EnrollProfile,\n  Identify: Identify,\n  ReEnrollAuthenticator: ReEnrollAuthenticator,\n  RedirectIdp: RedirectIdp,\n  SelectAuthenticatorAuthenticate: SelectAuthenticatorAuthenticate,\n  SelectAuthenticatorEnroll: SelectAuthenticatorEnroll,\n  SelectEnrollProfile: SelectEnrollProfile,\n  AuthenticatorVerificationData: AuthenticatorVerificationData,\n  AuthenticatorEnrollmentData: AuthenticatorEnrollmentData,\n  Skip: Skip\n});\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction getEnabledFeatures(idxResponse) {\n  var res = [];\n  var actions = idxResponse.actions,\n      neededToProceed = idxResponse.neededToProceed;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY);\n  }\n\n  if (neededToProceed.some(function (_ref) {\n    var name = _ref.name;\n    return name === 'select-enroll-profile';\n  })) {\n    res.push(IdxFeature.REGISTRATION);\n  }\n\n  if (neededToProceed.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === 'redirect-idp';\n  })) {\n    res.push(IdxFeature.SOCIAL_IDP);\n  }\n\n  return res;\n}\n\nfunction getAvailableSteps(remediations) {\n  var res = [];\n  var remediatorMap = Object.values(remediators).reduce(function (map, remediatorClass) {\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n\n    return map;\n  }, {});\n\n  var _iterator = _createForOfIteratorHelper(remediations),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var remediation = _step.value;\n      var T = remediatorMap[remediation.name];\n\n      if (T) {\n        var remediator = new T(remediation);\n        res.push(remediator.getNextStep());\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return res;\n}\n\nfunction run(_x) {\n  return _run.apply(this, arguments);\n}\n\nfunction _run() {\n  _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n        tokens,\n        nextStep,\n        messages,\n        error,\n        meta,\n        enabledFeatures,\n        availableSteps,\n        status,\n        shouldClearTransaction,\n        idxResponse,\n        interactionHandle,\n        metaFromResp,\n        flow,\n        stateTokenExternalId,\n        state,\n        interactResponse,\n        values,\n        _yield$remediate,\n        idxResponseFromResp,\n        nextStepFromResp,\n        terminal,\n        canceled,\n        messagesFromResp,\n        _metaFromResp,\n        clientId,\n        codeVerifier,\n        ignoreSignature,\n        redirectUri,\n        urls,\n        scopes,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            status = IdxStatus.PENDING;\n            shouldClearTransaction = false;\n            _context.prev = 3;\n            flow = options.flow, stateTokenExternalId = options.stateTokenExternalId, state = options.state;\n\n            if (flow) {\n              authClient.idx.setFlow(flow);\n            }\n\n            metaFromResp = getSavedTransactionMeta(authClient, {\n              state: state\n            });\n            interactionHandle = metaFromResp === null || metaFromResp === void 0 ? void 0 : metaFromResp.interactionHandle;\n\n            if (!(!interactionHandle && !stateTokenExternalId)) {\n              _context.next = 15;\n              break;\n            }\n\n            authClient.transactionManager.clear();\n            _context.next = 12;\n            return interact(authClient, options);\n\n          case 12:\n            interactResponse = _context.sent;\n            interactionHandle = interactResponse.interactionHandle;\n            metaFromResp = interactResponse.meta;\n\n          case 15:\n            _context.next = 17;\n            return introspect(authClient, {\n              interactionHandle: interactionHandle,\n              stateTokenExternalId: stateTokenExternalId\n            });\n\n          case 17:\n            idxResponse = _context.sent;\n\n            if (!(!options.remediators && !options.actions)) {\n              _context.next = 24;\n              break;\n            }\n\n            meta = metaFromResp;\n            enabledFeatures = getEnabledFeatures(idxResponse);\n            availableSteps = getAvailableSteps(idxResponse.neededToProceed);\n            _context.next = 53;\n            break;\n\n          case 24:\n            values = Object.assign(Object.assign({}, options), {\n              stateHandle: idxResponse.rawIdxState.stateHandle\n            });\n            _context.next = 27;\n            return remediate(idxResponse, values, options);\n\n          case 27:\n            _yield$remediate = _context.sent;\n            idxResponseFromResp = _yield$remediate.idxResponse;\n            nextStepFromResp = _yield$remediate.nextStep;\n            terminal = _yield$remediate.terminal;\n            canceled = _yield$remediate.canceled;\n            messagesFromResp = _yield$remediate.messages;\n            nextStep = nextStepFromResp;\n            messages = messagesFromResp;\n\n            if (nextStep && idxResponseFromResp) {\n              authClient.transactionManager.saveIdxResponse(idxResponseFromResp.rawIdxState);\n            }\n\n            if (terminal) {\n              status = IdxStatus.TERMINAL;\n              shouldClearTransaction = true;\n            }\n\n            if (!canceled) {\n              _context.next = 42;\n              break;\n            }\n\n            status = IdxStatus.CANCELED;\n            shouldClearTransaction = true;\n            _context.next = 53;\n            break;\n\n          case 42:\n            if (!(idxResponseFromResp === null || idxResponseFromResp === void 0 ? void 0 : idxResponseFromResp.interactionCode)) {\n              _context.next = 53;\n              break;\n            }\n\n            _context.next = 45;\n            return options.flowMonitor.isFinished();\n\n          case 45:\n            if (_context.sent) {\n              _context.next = 47;\n              break;\n            }\n\n            throw new AuthSdkError('Current flow is not supported, check policy settings in your org.');\n\n          case 47:\n            _metaFromResp = metaFromResp, clientId = _metaFromResp.clientId, codeVerifier = _metaFromResp.codeVerifier, ignoreSignature = _metaFromResp.ignoreSignature, redirectUri = _metaFromResp.redirectUri, urls = _metaFromResp.urls, scopes = _metaFromResp.scopes;\n            _context.next = 50;\n            return authClient.token.exchangeCodeForTokens({\n              interactionCode: idxResponseFromResp.interactionCode,\n              clientId: clientId,\n              codeVerifier: codeVerifier,\n              ignoreSignature: ignoreSignature,\n              redirectUri: redirectUri,\n              scopes: scopes\n            }, urls);\n\n          case 50:\n            tokens = _context.sent;\n            status = IdxStatus.SUCCESS;\n            shouldClearTransaction = true;\n\n          case 53:\n            _context.next = 60;\n            break;\n\n          case 55:\n            _context.prev = 55;\n            _context.t0 = _context[\"catch\"](3);\n            error = _context.t0;\n            status = IdxStatus.FAILURE;\n            shouldClearTransaction = true;\n\n          case 60:\n            if (shouldClearTransaction) {\n              authClient.transactionManager.clear();\n            }\n\n            return _context.abrupt(\"return\", Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n              _idxResponse: idxResponse,\n              status: status\n            }, meta && {\n              meta: meta\n            }), enabledFeatures && {\n              enabledFeatures: enabledFeatures\n            }), availableSteps && {\n              availableSteps: availableSteps\n            }), tokens && {\n              tokens: tokens.tokens\n            }), nextStep && {\n              nextStep: nextStep\n            }), messages && {\n              messages: messages\n            }), error && {\n              error: error\n            }));\n\n          case 62:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 55]]);\n  }));\n  return _run.apply(this, arguments);\n}\n\nvar AuthenticationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'redirect-idp': RedirectIdp\n};\n\nvar FlowMonitor = /*#__PURE__*/function () {\n  function FlowMonitor(authClient) {\n    _classCallCheck(this, FlowMonitor);\n\n    this.authClient = authClient;\n  }\n\n  _createClass(FlowMonitor, [{\n    key: \"loopDetected\",\n    value: function loopDetected(remediator) {\n      if (!this.previousRemediator) {\n        this.previousRemediator = remediator;\n        return false;\n      }\n\n      if (this.previousRemediator.getName() === remediator.getName()) {\n        return true;\n      }\n\n      this.previousRemediator = remediator;\n      return false;\n    }\n  }, {\n    key: \"isRemediatorCandidate\",\n    value: function isRemediatorCandidate(remediator, remediations, values) {\n      var remediatorName = remediator.getName();\n\n      if (!values.skip && remediatorName === 'skip') {\n        return false;\n      }\n\n      if (values.skip && remediatorName !== 'skip') {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"trackRemediations\",\n    value: function () {\n      var _trackRemediations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n        var meta, remediations;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getTransactionMeta(this.authClient);\n\n              case 2:\n                meta = _context.sent;\n                remediations = meta.remediations || [];\n                meta = Object.assign(Object.assign({}, meta), {\n                  remediations: [].concat(_toConsumableArray(remediations), [name])\n                });\n                saveTransactionMeta(this.authClient, meta);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function trackRemediations(_x) {\n        return _trackRemediations.apply(this, arguments);\n      }\n\n      return trackRemediations;\n    }()\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return Promise.resolve(true);\n    }\n  }]);\n\n  return FlowMonitor;\n}();\n\nfunction _createSuper$2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$2() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar AuthenticationFlowMonitor = /*#__PURE__*/function (_FlowMonitor) {\n  _inherits(AuthenticationFlowMonitor, _FlowMonitor);\n\n  var _super = _createSuper$2(AuthenticationFlowMonitor);\n\n  function AuthenticationFlowMonitor() {\n    _classCallCheck(this, AuthenticationFlowMonitor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthenticationFlowMonitor, [{\n    key: \"isRemediatorCandidate\",\n    value: function isRemediatorCandidate(remediator, remediations, values) {\n      var _a;\n\n      var prevRemediatorName = (_a = this.previousRemediator) === null || _a === void 0 ? void 0 : _a.getName();\n      var remediatorName = remediator.getName();\n\n      if (remediatorName === 'select-authenticator-authenticate' && ['select-authenticator-authenticate'].includes(prevRemediatorName)) {\n        return false;\n      }\n\n      if (remediatorName === 'select-authenticator-authenticate' && remediations.some(function (_ref) {\n        var name = _ref.name;\n        return name === 'challenge-authenticator';\n      })) {\n        return false;\n      }\n\n      if (remediatorName === 'select-authenticator-enroll' && ['select-authenticator-enroll', 'authenticator-enrollment-data'].includes(prevRemediatorName)) {\n        return false;\n      }\n\n      return _get(_getPrototypeOf(AuthenticationFlowMonitor.prototype), \"isRemediatorCandidate\", this).call(this, remediator, remediations, values);\n    }\n  }]);\n\n  return AuthenticationFlowMonitor;\n}(FlowMonitor);\n\nvar PasswordRecoveryFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator\n};\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar PasswordRecoveryFlowMonitor = /*#__PURE__*/function (_FlowMonitor) {\n  _inherits(PasswordRecoveryFlowMonitor, _FlowMonitor);\n\n  var _super = _createSuper$1(PasswordRecoveryFlowMonitor);\n\n  function PasswordRecoveryFlowMonitor() {\n    _classCallCheck(this, PasswordRecoveryFlowMonitor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PasswordRecoveryFlowMonitor, [{\n    key: \"isRemediatorCandidate\",\n    value: function isRemediatorCandidate(remediator, remediations, values) {\n      var _a;\n\n      var prevRemediatorName = (_a = this.previousRemediator) === null || _a === void 0 ? void 0 : _a.getName();\n      var remediatorName = remediator.getName();\n\n      if (remediatorName === 'select-authenticator-authenticate' && ['select-authenticator-authenticate', 'reenroll-authenticator'].includes(prevRemediatorName)) {\n        return false;\n      }\n\n      if (remediatorName === 'select-authenticator-authenticate' && remediations.some(function (_ref) {\n        var name = _ref.name;\n        return name === 'challenge-authenticator';\n      })) {\n        return false;\n      }\n\n      return _get(_getPrototypeOf(PasswordRecoveryFlowMonitor.prototype), \"isRemediatorCandidate\", this).call(this, remediator, remediations, values);\n    }\n  }, {\n    key: \"isFinished\",\n    value: function () {\n      var _isFinished = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getTransaction, remediations;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getTransactionMeta(this.authClient);\n\n              case 2:\n                _yield$getTransaction = _context.sent;\n                remediations = _yield$getTransaction.remediations;\n\n                if (remediations.includes('reset-authenticator')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 6:\n                _context.next = 8;\n                return _get(_getPrototypeOf(PasswordRecoveryFlowMonitor.prototype), \"isFinished\", this).call(this);\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function isFinished() {\n        return _isFinished.apply(this, arguments);\n      }\n\n      return isFinished;\n    }()\n  }]);\n\n  return PasswordRecoveryFlowMonitor;\n}(FlowMonitor);\n\nvar RegistrationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip\n};\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar RegistrationFlowMonitor = /*#__PURE__*/function (_FlowMonitor) {\n  _inherits(RegistrationFlowMonitor, _FlowMonitor);\n\n  var _super = _createSuper(RegistrationFlowMonitor);\n\n  function RegistrationFlowMonitor() {\n    _classCallCheck(this, RegistrationFlowMonitor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RegistrationFlowMonitor, [{\n    key: \"isRemediatorCandidate\",\n    value: function isRemediatorCandidate(remediator, remediations, values) {\n      var _a;\n\n      var prevRemediatorName = (_a = this.previousRemediator) === null || _a === void 0 ? void 0 : _a.getName();\n      var remediatorName = remediator.getName();\n\n      if (remediatorName === 'select-authenticator-enroll' && ['select-authenticator-enroll', 'authenticator-enrollment-data'].includes(prevRemediatorName)) {\n        return false;\n      }\n\n      return _get(_getPrototypeOf(RegistrationFlowMonitor.prototype), \"isRemediatorCandidate\", this).call(this, remediator, remediations, values);\n    }\n  }]);\n\n  return RegistrationFlowMonitor;\n}(FlowMonitor);\n\nfunction getFlowSpecification(oktaAuth) {\n  var flow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proceed';\n  var remediators, flowMonitor, actions;\n\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      flowMonitor = new RegistrationFlowMonitor(oktaAuth);\n      break;\n\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      flowMonitor = new PasswordRecoveryFlowMonitor(oktaAuth);\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      break;\n\n    default:\n      remediators = AuthenticationFlow;\n      flowMonitor = new AuthenticationFlowMonitor(oktaAuth);\n      break;\n  }\n\n  return {\n    flow: flow,\n    remediators: remediators,\n    flowMonitor: flowMonitor,\n    actions: actions\n  };\n}\n\nfunction authenticate(_x, _x2) {\n  return _authenticate.apply(this, arguments);\n}\n\nfunction _authenticate() {\n  _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var flowSpec;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            flowSpec = getFlowSpecification(authClient, 'authenticate');\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), flowSpec)));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _authenticate.apply(this, arguments);\n}\n\nfunction cancel(_x, _x2) {\n  return _cancel.apply(this, arguments);\n}\n\nfunction _cancel() {\n  _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), {\n              actions: ['cancel']\n            })));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _cancel.apply(this, arguments);\n}\n\nfunction canProceed(authClient, options) {\n  var meta = getSavedTransactionMeta(authClient, options);\n  return !!meta;\n}\n\nfunction proceed(_x) {\n  return _proceed.apply(this, arguments);\n}\n\nfunction _proceed() {\n  _proceed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n        stateTokenExternalId,\n        state,\n        meta,\n        flowSpec,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            stateTokenExternalId = options.stateTokenExternalId, state = options.state;\n            meta = getSavedTransactionMeta(authClient, {\n              state: state\n            });\n\n            if (!(!meta && !stateTokenExternalId)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n\n          case 5:\n            flowSpec = getFlowSpecification(authClient, meta === null || meta === void 0 ? void 0 : meta.flow);\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), flowSpec)));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _proceed.apply(this, arguments);\n}\n\nfunction startTransaction(_x) {\n  return _startTransaction.apply(this, arguments);\n}\n\nfunction _startTransaction() {\n  _startTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            authClient.transactionManager.clear();\n            return _context.abrupt(\"return\", run(authClient, options));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _startTransaction.apply(this, arguments);\n}\n\nfunction register(_x, _x2) {\n  return _register.apply(this, arguments);\n}\n\nfunction _register() {\n  _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var _yield$startTransacti, enabledFeatures, error, flowSpec;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (transactionMetaExist(authClient)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return startTransaction(authClient, Object.assign({\n              flow: 'register'\n            }, options));\n\n          case 3:\n            _yield$startTransacti = _context.sent;\n            enabledFeatures = _yield$startTransacti.enabledFeatures;\n\n            if (!(enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION))) {\n              _context.next = 8;\n              break;\n            }\n\n            error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n            return _context.abrupt(\"return\", {\n              status: IdxStatus.FAILURE,\n              error: error\n            });\n\n          case 8:\n            flowSpec = getFlowSpecification(authClient, 'register');\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), flowSpec)));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _register.apply(this, arguments);\n}\n\nfunction recoverPassword(_x, _x2) {\n  return _recoverPassword.apply(this, arguments);\n}\n\nfunction _recoverPassword() {\n  _recoverPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var flowSpec;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), flowSpec)));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _recoverPassword.apply(this, arguments);\n}\n\nfunction handleInteractionCodeRedirect(_x, _x2) {\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\n\nfunction _handleInteractionCodeRedirect() {\n  _handleInteractionCodeRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authClient, url) {\n    var meta, codeVerifier, savedState, _URL, searchParams, state, interactionCode, error, _yield$authClient$tok, tokens;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            meta = authClient.transactionManager.load();\n\n            if (meta) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new AuthSdkError('No transaction data was found in storage');\n\n          case 3:\n            codeVerifier = meta.codeVerifier, savedState = meta.state;\n            _URL = new URL(url), searchParams = _URL.searchParams;\n            state = searchParams.get('state');\n            interactionCode = searchParams.get('interaction_code');\n            error = searchParams.get('error');\n\n            if (!error) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new OAuthError(error, searchParams.get('error_description'));\n\n          case 10:\n            if (!(state !== savedState)) {\n              _context.next = 12;\n              break;\n            }\n\n            throw new AuthSdkError('State in redirect uri does not match with transaction state');\n\n          case 12:\n            if (interactionCode) {\n              _context.next = 14;\n              break;\n            }\n\n            throw new AuthSdkError('Unable to parse interaction_code from the url');\n\n          case 14:\n            _context.next = 16;\n            return authClient.token.exchangeCodeForTokens({\n              interactionCode: interactionCode,\n              codeVerifier: codeVerifier\n            });\n\n          case 16:\n            _yield$authClient$tok = _context.sent;\n            tokens = _yield$authClient$tok.tokens;\n            authClient.tokenManager.setTokens(tokens);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\n\nfunction setGlobalRequestInterceptor(fn) {\n  idx.client.interceptors.request.use(fn);\n}\n\nfunction createGlobalRequestInterceptor(sdk) {\n  return function (requestConfig) {\n    var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n\n    var headers = Object.assign(Object.assign({}, oktaUserAgentHeader), sdk.options.headers);\n    Object.keys(headers).forEach(function (name) {\n      requestConfig.headers[name] = headers[name];\n    });\n  };\n}\n\nvar OktaUserAgent = /*#__PURE__*/function () {\n  function OktaUserAgent() {\n    _classCallCheck(this, OktaUserAgent);\n\n    this.environments = [\"okta-auth-js/\".concat(\"5.9.1\")];\n  }\n\n  _createClass(OktaUserAgent, [{\n    key: \"addEnvironment\",\n    value: function addEnvironment(env) {\n      this.environments.push(env);\n    }\n  }, {\n    key: \"getHttpHeader\",\n    value: function getHttpHeader() {\n      this.maybeAddNodeEnvironment();\n      return {\n        'X-Okta-User-Agent-Extended': this.environments.join(' ')\n      };\n    }\n  }, {\n    key: \"getVersion\",\n    value: function getVersion() {\n      return \"5.9.1\";\n    }\n  }, {\n    key: \"maybeAddNodeEnvironment\",\n    value: function maybeAddNodeEnvironment() {\n      if (isBrowser() || !process || !process.versions) {\n        return;\n      }\n\n      var version = process.versions.node;\n      this.environments.push(\"nodejs/\".concat(version));\n    }\n  }]);\n\n  return OktaUserAgent;\n}();\n\nvar Emitter = require('tiny-emitter');\n\nvar OktaAuth = /*#__PURE__*/function () {\n  function OktaAuth(args) {\n    var _this = this;\n\n    _classCallCheck(this, OktaAuth);\n\n    var options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: function _get(name) {\n          var storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspect$1.bind(null, this)\n    };\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager)\n    });\n    this._pending = {\n      handleLogin: false\n    };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin)\n      });\n      this.userAgent = getUserAgent(args, \"okta-auth-js/\".concat(\"5.9.1\"));\n    } else {\n      this.userAgent = getUserAgent(args, \"okta-auth-js-server/\".concat(\"5.9.1\"));\n    }\n\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n    this._tokenQueue = new PromiseQueue();\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirect.bind(null, this),\n      parseFromUrl: parseFromUrl.bind(null, this),\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    var syncMethods = ['decode', 'isLoginRedirect'];\n    Object.keys(this.token).forEach(function (key) {\n      if (syncMethods.indexOf(key) >= 0) {\n        return;\n      }\n\n      var method = _this.token[key];\n      _this.token[key] = PromiseQueue.prototype.push.bind(_this._tokenQueue, method, null);\n    });\n    Object.assign(this.token.getWithRedirect, {\n      _setLocation: function _setLocation(url) {\n        window.location = url;\n      }\n    });\n    Object.assign(this.token.parseFromUrl, {\n      _getHistory: function _getHistory() {\n        return window.history;\n      },\n      _getLocation: function _getLocation() {\n        return window.location;\n      },\n      _getDocument: function _getDocument() {\n        return window.document;\n      }\n    });\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      startTransaction: startTransaction.bind(null, this),\n      setFlow: function setFlow(flow) {\n        _this.options.flow = flow;\n      },\n      getFlow: function getFlow() {\n        return _this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this)\n    };\n    setGlobalRequestInterceptor(createGlobalRequestInterceptor(this));\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n    this.fingerprint = fingerprint.bind(null, this);\n    this.emitter = new Emitter();\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n    this.authStateManager = new AuthStateManager(this);\n  }\n\n  _createClass(OktaAuth, [{\n    key: \"start\",\n    value: function start() {\n      this.tokenManager.start();\n\n      if (!this.token.isLoginRedirect()) {\n        this.authStateManager.updateAuthState();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.tokenManager.stop();\n    }\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  }, {\n    key: \"isInteractionRequired\",\n    value: function isInteractionRequired$1(hashOrSearch) {\n      return isInteractionRequired(this, hashOrSearch);\n    }\n  }, {\n    key: \"isInteractionRequiredError\",\n    value: function isInteractionRequiredError$1(error) {\n      return isInteractionRequiredError(error);\n    }\n  }, {\n    key: \"isEmailVerifyCallback\",\n    value: function isEmailVerifyCallback$1(urlPath) {\n      return isEmailVerifyCallback(urlPath);\n    }\n  }, {\n    key: \"parseEmailVerifyCallback\",\n    value: function parseEmailVerifyCallback$1(urlPath) {\n      return parseEmailVerifyCallback(urlPath);\n    }\n  }, {\n    key: \"signIn\",\n    value: function () {\n      var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(opts) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.signInWithCredentials(opts));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function signIn(_x) {\n        return _signIn.apply(this, arguments);\n      }\n\n      return signIn;\n    }()\n  }, {\n    key: \"signInWithCredentials\",\n    value: function () {\n      var _signInWithCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(opts) {\n        var _this2 = this;\n\n        var _postToTransaction;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                opts = clone(opts || {});\n\n                _postToTransaction = function _postToTransaction(options) {\n                  delete opts.sendFingerprint;\n                  return postToTransaction(_this2, '/api/v1/authn', opts, options);\n                };\n\n                if (opts.sendFingerprint) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _postToTransaction());\n\n              case 4:\n                return _context2.abrupt(\"return\", this.fingerprint().then(function (fingerprint) {\n                  return _postToTransaction({\n                    headers: {\n                      'X-Device-Fingerprint': fingerprint\n                    }\n                  });\n                }));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signInWithCredentials(_x2) {\n        return _signInWithCredentials.apply(this, arguments);\n      }\n\n      return signInWithCredentials;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var opts,\n            originalUri,\n            additionalParams,\n            params,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                opts = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n                originalUri = opts.originalUri, additionalParams = __rest(opts, [\"originalUri\"]);\n\n                if (!this._pending.handleLogin) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                this._pending.handleLogin = true;\n                _context3.prev = 5;\n\n                if (originalUri) {\n                  this.setOriginalUri(originalUri);\n                }\n\n                params = Object.assign({\n                  scopes: this.options.scopes || ['openid', 'email', 'profile']\n                }, additionalParams);\n                _context3.next = 10;\n                return this.token.getWithRedirect(params);\n\n              case 10:\n                _context3.prev = 10;\n                this._pending.handleLogin = false;\n                return _context3.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5,, 10, 13]]);\n      }));\n\n      function signInWithRedirect() {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"closeSession\",\n    value: function closeSession() {\n      this.tokenManager.clear();\n      return this.session.close().catch(function (e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          return null;\n        }\n\n        throw e;\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function () {\n      var _revokeAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(accessToken) {\n        var accessTokenKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (accessToken) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                accessToken = _context4.sent.accessToken;\n                accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                this.tokenManager.remove(accessTokenKey);\n\n              case 6:\n                if (accessToken) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context4.abrupt(\"return\", this.token.revoke(accessToken));\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function revokeAccessToken(_x3) {\n        return _revokeAccessToken.apply(this, arguments);\n      }\n\n      return revokeAccessToken;\n    }()\n  }, {\n    key: \"revokeRefreshToken\",\n    value: function () {\n      var _revokeRefreshToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(refreshToken) {\n        var refreshTokenKey;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (refreshToken) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                refreshToken = _context5.sent.refreshToken;\n                refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                this.tokenManager.remove(refreshTokenKey);\n\n              case 6:\n                if (refreshToken) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context5.abrupt(\"return\", this.token.revoke(refreshToken));\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function revokeRefreshToken(_x4) {\n        return _revokeRefreshToken.apply(this, arguments);\n      }\n\n      return revokeRefreshToken;\n    }()\n  }, {\n    key: \"getSignOutRedirectUrl\",\n    value: function getSignOutRedirectUrl() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var idToken = options.idToken,\n          postLogoutRedirectUri = options.postLogoutRedirectUri,\n          state = options.state;\n\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken;\n      }\n\n      if (!idToken) {\n        return '';\n      }\n\n      if (!postLogoutRedirectUri) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      var logoutUrl = getOAuthUrls(this).logoutUrl;\n      var idTokenHint = idToken.idToken;\n      var logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      }\n\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(options) {\n        var defaultUri, currentUri, postLogoutRedirectUri, accessToken, refreshToken, revokeAccessToken, revokeRefreshToken, logoutUri;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                options = Object.assign({}, options);\n                defaultUri = window.location.origin;\n                currentUri = window.location.href;\n                postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri || defaultUri;\n                accessToken = options.accessToken;\n                refreshToken = options.refreshToken;\n                revokeAccessToken = options.revokeAccessToken !== false;\n                revokeRefreshToken = options.revokeRefreshToken !== false;\n\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                  refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                  accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n\n                if (!options.idToken) {\n                  options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n\n                this.tokenManager.clear();\n\n                if (!(revokeRefreshToken && refreshToken)) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                _context6.next = 15;\n                return this.revokeRefreshToken(refreshToken);\n\n              case 15:\n                if (!(revokeAccessToken && accessToken)) {\n                  _context6.next = 18;\n                  break;\n                }\n\n                _context6.next = 18;\n                return this.revokeAccessToken(accessToken);\n\n              case 18:\n                logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n                  postLogoutRedirectUri: postLogoutRedirectUri\n                }));\n\n                if (logoutUri) {\n                  _context6.next = 23;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.closeSession().then(function () {\n                  if (postLogoutRedirectUri === currentUri) {\n                    window.location.reload();\n                  } else {\n                    window.location.assign(postLogoutRedirectUri);\n                  }\n                }));\n\n              case 23:\n                window.location.assign(logoutUri);\n\n              case 24:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function signOut(_x5) {\n        return _signOut.apply(this, arguments);\n      }\n\n      return signOut;\n    }()\n  }, {\n    key: \"webfinger\",\n    value: function webfinger(opts) {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function () {\n      var _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var _this$tokenManager$ge, accessToken, idToken, _this$tokenManager$ge2, autoRenew, autoRemove;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this$tokenManager$ge = this.tokenManager.getTokensSync(), accessToken = _this$tokenManager$ge.accessToken, idToken = _this$tokenManager$ge.idToken;\n                _this$tokenManager$ge2 = this.tokenManager.getOptions(), autoRenew = _this$tokenManager$ge2.autoRenew, autoRemove = _this$tokenManager$ge2.autoRemove;\n\n                if (!(accessToken && this.tokenManager.hasExpired(accessToken))) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                accessToken = null;\n\n                if (!autoRenew) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                _context7.next = 7;\n                return this.tokenManager.renew('accessToken');\n\n              case 7:\n                accessToken = _context7.sent;\n                _context7.next = 11;\n                break;\n\n              case 10:\n                if (autoRemove) {\n                  this.tokenManager.remove('accessToken');\n                }\n\n              case 11:\n                if (!(idToken && this.tokenManager.hasExpired(idToken))) {\n                  _context7.next = 20;\n                  break;\n                }\n\n                idToken = null;\n\n                if (!autoRenew) {\n                  _context7.next = 19;\n                  break;\n                }\n\n                _context7.next = 16;\n                return this.tokenManager.renew('idToken');\n\n              case 16:\n                idToken = _context7.sent;\n                _context7.next = 20;\n                break;\n\n              case 19:\n                if (autoRemove) {\n                  this.tokenManager.remove('idToken');\n                }\n\n              case 20:\n                return _context7.abrupt(\"return\", !!(accessToken && idToken));\n\n              case 21:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function isAuthenticated() {\n        return _isAuthenticated.apply(this, arguments);\n      }\n\n      return isAuthenticated;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this$tokenManager$ge3, idToken, accessToken;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _this$tokenManager$ge3 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge3.idToken, accessToken = _this$tokenManager$ge3.accessToken;\n                return _context8.abrupt(\"return\", this.token.getUserInfo(accessToken, idToken));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var _this$tokenManager$ge4 = this.tokenManager.getTokensSync(),\n          idToken = _this$tokenManager$ge4.idToken;\n\n      return idToken ? idToken.idToken : undefined;\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var _this$tokenManager$ge5 = this.tokenManager.getTokensSync(),\n          accessToken = _this$tokenManager$ge5.accessToken;\n\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      var _this$tokenManager$ge6 = this.tokenManager.getTokensSync(),\n          refreshToken = _this$tokenManager$ge6.refreshToken;\n\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n  }, {\n    key: \"storeTokensFromRedirect\",\n    value: function () {\n      var _storeTokensFromRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _yield$this$token$par, tokens;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.token.parseFromUrl();\n\n              case 2:\n                _yield$this$token$par = _context9.sent;\n                tokens = _yield$this$token$par.tokens;\n                this.tokenManager.setTokens(tokens);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function storeTokensFromRedirect() {\n        return _storeTokensFromRedirect.apply(this, arguments);\n      }\n\n      return storeTokensFromRedirect;\n    }()\n  }, {\n    key: \"setOriginalUri\",\n    value: function setOriginalUri(originalUri, state) {\n      var sessionStorage = storageUtil.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  }, {\n    key: \"getOriginalUri\",\n    value: function getOriginalUri(state) {\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        var originalUri = sharedStorage.getItem(state);\n\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n\n      var storage = storageUtil.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) : undefined;\n    }\n  }, {\n    key: \"removeOriginalUri\",\n    value: function removeOriginalUri(state) {\n      var storage = storageUtil.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem(state);\n      }\n    }\n  }, {\n    key: \"isLoginRedirect\",\n    value: function isLoginRedirect$1() {\n      return isLoginRedirect(this);\n    }\n  }, {\n    key: \"handleLoginRedirect\",\n    value: function () {\n      var _handleLoginRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tokens, originalUri) {\n        var state, oAuthResponse, restoreOriginalUri;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                state = this.options.state;\n\n                if (!tokens) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                this.tokenManager.setTokens(tokens);\n                originalUri = originalUri || this.getOriginalUri(this.options.state);\n                _context10.next = 17;\n                break;\n\n              case 6:\n                if (!this.isLoginRedirect()) {\n                  _context10.next = 16;\n                  break;\n                }\n\n                _context10.next = 9;\n                return parseOAuthResponseFromUrl(this, {});\n\n              case 9:\n                oAuthResponse = _context10.sent;\n                state = oAuthResponse.state;\n                originalUri = originalUri || this.getOriginalUri(state);\n                _context10.next = 14;\n                return this.storeTokensFromRedirect();\n\n              case 14:\n                _context10.next = 17;\n                break;\n\n              case 16:\n                return _context10.abrupt(\"return\");\n\n              case 17:\n                _context10.next = 19;\n                return this.authStateManager.updateAuthState();\n\n              case 19:\n                this.removeOriginalUri(state);\n                restoreOriginalUri = this.options.restoreOriginalUri;\n\n                if (!restoreOriginalUri) {\n                  _context10.next = 26;\n                  break;\n                }\n\n                _context10.next = 24;\n                return restoreOriginalUri(this, originalUri);\n\n              case 24:\n                _context10.next = 27;\n                break;\n\n              case 26:\n                window.location.replace(originalUri);\n\n              case 27:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function handleLoginRedirect(_x6, _x7) {\n        return _handleLoginRedirect.apply(this, arguments);\n      }\n\n      return handleLoginRedirect;\n    }()\n  }, {\n    key: \"isPKCE\",\n    value: function isPKCE() {\n      return !!this.options.pkce;\n    }\n  }, {\n    key: \"hasResponseType\",\n    value: function hasResponseType(responseType) {\n      var hasResponseType = false;\n\n      if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n        hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n      } else {\n        hasResponseType = this.options.responseType === responseType;\n      }\n\n      return hasResponseType;\n    }\n  }, {\n    key: \"isAuthorizationCodeFlow\",\n    value: function isAuthorizationCodeFlow() {\n      return this.hasResponseType('code');\n    }\n  }, {\n    key: \"getIssuerOrigin\",\n    value: function getIssuerOrigin() {\n      return this.options.issuer.split('/oauth2/')[0];\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n    }\n  }, {\n    key: \"unlockAccount\",\n    value: function unlockAccount(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n    }\n  }, {\n    key: \"verifyRecoveryToken\",\n    value: function verifyRecoveryToken(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n    }\n  }]);\n\n  return OktaAuth;\n}();\n\nOktaAuth.features = OktaAuth.prototype.features = features;\nObject.assign(OktaAuth, {\n  constants: constants,\n  isInteractionRequiredError: isInteractionRequiredError\n});\nexport { ACCESS_TOKEN_STORAGE_KEY, AuthApiError, AuthPollStopError, AuthSdkError, AuthStateManager, AuthTransaction, AuthenticatorKey, CACHE_STORAGE_NAME, DEFAULT_CACHE_DURATION, DEFAULT_CODE_CHALLENGE_METHOD, DEFAULT_MAX_CLOCK_SKEW, DEFAULT_POLLING_DELAY, EVENT_ADDED, EVENT_ERROR, EVENT_EXPIRED, EVENT_REMOVED, EVENT_RENEWED, IDX_API_VERSION, IDX_RESPONSE_STORAGE_NAME, ID_TOKEN_STORAGE_KEY, INITIAL_AUTH_STATE, IdxFeature, IdxStatus, MAX_VERIFIER_LENGTH, MIN_VERIFIER_LENGTH, OAuthError, ORIGINAL_URI_STORAGE_NAME, OktaAuth, PKCE_STORAGE_NAME, REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME, REFERRER_PATH_STORAGE_KEY, REFRESH_TOKEN_STORAGE_KEY, SHARED_TRANSACTION_STORAGE_NAME, STATE_TOKEN_KEY_NAME, TOKEN_STORAGE_NAME, TRANSACTION_STORAGE_NAME, TokenManager, TransactionState, addListener, addPostMessageListener, addStateToken, bind, buildAuthorizeParams, clone, convertTokenParamsToOAuthParams, index as crypto, decodeToken, delay, deprecate, deprecateWrap, exchangeCodeForTokens, extend, find, genRandomString, generateNonce, generateState, getConsole, getDefaultTokenParams, getHashOrSearch, getKey, getLink, getNativeConsole, getOAuthBaseUrl, getOAuthDomain, getOAuthUrls, getPollFn, getStateToken, getToken, getUserInfo, getWellKnown, getWithPopup, getWithRedirect, getWithoutPrompt, handleOAuthResponse, hasAuthorizationCode, hasErrorInUrl, hasInteractionCode, hasTokensInHash, introspect$1 as introspect, isAbsoluteUrl, isAccessToken, isAuthApiError, isAuthorizationCodeError, isCodeFlow, isCustomAuthTransactionMeta, isEmailVerifyCallback, isFunction, isIDToken, isIdxTransactionMeta, isInteractionRequired, isInteractionRequiredError, isLoginRedirect, isNumber, isOAuthTransactionMeta, isObject, isPKCETransactionMeta, isPromise, isRedirectUri, isRefreshToken, isRefreshTokenError, isSameRefreshToken, isString, isToken, isTransactionMeta, isoToUTCString, loadFrame, loadPopup, omit, parseEmailVerifyCallback, parseFromUrl, PKCE as pkce, postRefreshToken, postToTokenEndpoint, postToTransaction, prepareTokenParams, removeListener, removeNils, removeTrailingSlash, renewToken, renewTokens, renewTokensWithRefresh, resumeTransaction, revokeToken, toAbsoluteUrl, toQueryString, toRelativeUrl, transactionExists, transactionStatus, urlParamsToObject, validateClaims, validateToken, verifyToken, warn };","map":{"version":3,"sources":["../../lib/errors/CustomError.ts","../../lib/errors/AuthApiError.ts","../../lib/errors/AuthPollStopError.ts","../../lib/errors/AuthSdkError.ts","../../lib/errors/OAuthError.ts","../../lib/errors/index.ts","../../lib/crypto/browser.ts","../../lib/crypto/base64.ts","../../lib/crypto/oidcHash.ts","../../lib/util/console.ts","../../lib/oidc/util/urlParams.ts","../../lib/util/emailVerify.ts","../../lib/util/misc.ts","../../lib/util/object.ts","../../lib/util/types.ts","../../lib/util/url.ts","../../lib/crypto/verifyToken.ts","../../lib/constants.ts","../../lib/http/headers.ts","../../lib/http/request.ts","../../lib/tx/util.ts","../../lib/tx/poll.ts","../../lib/tx/AuthTransaction.ts","../../lib/tx/api.ts","../../lib/tx/TransactionState.ts","../../lib/oidc/util/pkce.ts","../../lib/session.ts","../../lib/oidc/endpoints/authorize.ts","../../lib/oidc/endpoints/token.ts","../../lib/oidc/endpoints/well-known.ts","../../lib/oidc/util/browser.ts","../../lib/oidc/util/oauth.ts","../../lib/features.ts","../../lib/oidc/util/defaultTokenParams.ts","../../lib/oidc/util/errors.ts","../../lib/oidc/util/loginRedirect.ts","../../lib/oidc/util/prepareTokenParams.ts","../../lib/oidc/util/refreshToken.ts","../../lib/oidc/util/validateClaims.ts","../../lib/types/Transaction.ts","../../lib/idx/types/index.ts","../../lib/types/Token.ts","../../lib/oidc/util/validateToken.ts","../../lib/oidc/decodeToken.ts","../../lib/oidc/revokeToken.ts","../../lib/oidc/exchangeCodeForTokens.ts","../../lib/oidc/verifyToken.ts","../../lib/oidc/handleOAuthResponse.ts","../../lib/oidc/getToken.ts","../../lib/oidc/getWithoutPrompt.ts","../../lib/oidc/renewTokensWithRefresh.ts","../../lib/oidc/renewToken.ts","../../lib/oidc/renewTokens.ts","../../lib/oidc/getUserInfo.ts","../../lib/oidc/getWithPopup.ts","../../lib/oidc/getWithRedirect.ts","../../lib/oidc/parseFromUrl.ts","../../lib/browser/browserStorage.ts","../../lib/builderUtil.ts","../../lib/clock.ts","../../lib/services/TokenService.ts","../../lib/TokenManager.ts","../../lib/PromiseQueue.ts","../../lib/browser/fingerprint.ts","../../lib/AuthStateManager.ts","../../lib/SavedObject.ts","../../lib/StorageManager.ts","../../lib/idx/types/idx-js.ts","../../lib/util/sharedStorage.ts","../../lib/TransactionManager.ts","../../lib/fetch/fetchRequest.ts","../../lib/server/serverStorage.ts","../../lib/options.ts","../../lib/idx/transactionMeta.ts","../../lib/idx/interact.ts","../../lib/idx/introspect.ts","../../lib/idx/remediate.ts","../../lib/idx/remediators/util.ts","../../lib/idx/remediators/Base/Remediator.ts","../../lib/idx/remediators/Base/VerifyAuthenticator.ts","../../lib/idx/remediators/EnrollAuthenticator.ts","../../lib/idx/remediators/ChallengeAuthenticator.ts","../../lib/idx/remediators/ResetAuthenticator.ts","../../lib/idx/remediators/EnrollProfile.ts","../../lib/idx/remediators/Identify.ts","../../lib/idx/remediators/ReEnrollAuthenticator.ts","../../lib/idx/remediators/RedirectIdp.ts","../../lib/idx/remediators/Base/SelectAuthenticator.ts","../../lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../../lib/idx/remediators/SelectAuthenticatorEnroll.ts","../../lib/idx/remediators/SelectEnrollProfile.ts","../../lib/idx/remediators/Base/AuthenticatorData.ts","../../lib/idx/remediators/AuthenticatorVerificationData.ts","../../lib/idx/remediators/AuthenticatorEnrollmentData.ts","../../lib/idx/remediators/Skip.ts","../../lib/idx/run.ts","../../lib/idx/flow/AuthenticationFlow.ts","../../lib/idx/flow/FlowMonitor.ts","../../lib/idx/flow/AuthenticationFlowMonitor.ts","../../lib/idx/flow/PasswordRecoveryFlow.ts","../../lib/idx/flow/PasswordRecoveryFlowMonitor.ts","../../lib/idx/flow/RegistrationFlow.ts","../../lib/idx/flow/RegistrationFlowMonitor.ts","../../lib/idx/flow/FlowSpecification.ts","../../lib/idx/authenticate.ts","../../lib/idx/cancel.ts","../../lib/idx/proceed.ts","../../lib/idx/startTransaction.ts","../../lib/idx/register.ts","../../lib/idx/recoverPassword.ts","../../lib/idx/handleInteractionCodeRedirect.ts","../../lib/idx/headers.ts","../../lib/OktaUserAgent.ts","../../lib/OktaAuth.ts"],"names":["CustomError","Error","Object","AuthApiError","message","err","AuthPollStopError","AuthSdkError","OAuthError","obj","a","atob","b","btoa","c","stringToBase64Url","str","b64","base64ToBase64Url","base64UrlToBase64","b64u","base64UrlToString","utf8","decodeURIComponent","escape","stringToBuffer","buffer","i","base64UrlDecode","getOidcHash","intBuffer","firstHalf","hash","String","getNativeConsole","window","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","urlParamsToObject","hashOrSearch","plus2space","paramSplit","fragment","param","key","value","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","isoToUTCString","parts","isoTime","Date","isoDate","genRandomString","length","randomCharset","random","cl","Math","delay","ms","setTimeout","bind","ctx","additionalArgs","Array","args","extend","obj1","arguments","objArray","removeNils","cleaned","clone","JSON","omit","props","newobj","find","collection","searchParams","item","found","getLink","linkName","altName","link","isString","isObject","isNumber","isFunction","isPromise","isAbsoluteUrl","url","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","toQueryString","encodeURIComponent","path","trimmed","verifyToken","idToken","format","algo","name","extractable","usages","jwt","payload","b64Signature","signature","webcrypto","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","httpRequest","sdk","options","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","cacheContents","cachedResponse","Promise","oktaUserAgentHeader","headers","ajaxOptions","data","res","resp","expiresAt","response","serverErr","errorSummary","get","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","getPollFn","ref","rememberDevice","autoPush","transactionCallBack","pollLink","opts","href","retryCount","recursivePoll","pollRes","delayFn","delayLength","AuthTransaction","flattenEmbedded","lk","link2fn","factorType","provider","params","postToTransaction","fns","objArr","o","ol","embedded","links2fns","stateToken","TransactionState","dec","verifier","prefix","getRandomString","generateVerifier","computeChallenge","status","redirectUrl","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","oauthParams","state","buildAuthorizeParams","oauthQueryParams","codeVerifier","clientSecret","postToTokenEndpoint","urls","validateOptions","getPostData","postRefreshToken","refreshToken","client_id","grant_type","scope","refresh_token","getWellKnown","issuer","authServerUri","cacheResponse","getKey","kid","jwksUri","wellKnown","cachedKey","addListener","eventTarget","removeListener","loadFrame","src","iframe","document","loadPopup","title","appearance","addPostMessageListener","timeout","msgReceivedOrTimeout","responseHandler","e","reject","resolve","timeoutId","clearTimeout","generateState","generateNonce","getOAuthBaseUrl","getIssuer","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","tokenUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","getUserAgent","navigator","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","isLocalhost","getDefaultTokenParams","pkce","clientId","redirectUri","responseType","responseMode","scopes","ignoreSignature","defaultRedirectUri","nonce","isInteractionRequiredError","error","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","hasTokensInHash","hasAuthorizationCode","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","isLoginRedirect","hasCode","isInteractionRequired","prepareTokenParams","defaults","errorMessage","methods","clonedParams","codeChallenge","isSameRefreshToken","isRefreshTokenError","isAuthApiError","validateClaims","claims","validationParams","aud","iss","now","isOAuthTransactionMeta","isObjectWithProperties","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","type","decodeToken","decodedToken","header","revokeToken","token_type_hint","creds","exchangeCodeForTokens","authorizationCode","interactionCode","getTokenOptions","handleResponseOptions","configuredIssuer","validationOptions","valid","sdkCrypto","handleOAuthResponse","interaction_code","validateResponse","tokenDict","expiresIn","tokenType","accessJwt","Number","idJwt","idTokenObj","tokens","code","getToken","popupWindow","sessionTokenOverrides","prompt","display","idpOverrides","endpoint","requestUrl","flowType","iframePromise","iframeEl","oauthPromise","popupPromise","closePoller","setInterval","clearInterval","getWithoutPrompt","renewTokenParams","tokenResponse","throwInvalidTokenError","renewTokensWithRefresh","getSingleToken","accessTokenObject","idTokenObject","userInfo","authenticateHeader","errorMatches","errorDescriptionMatches","errorDescription","getWithPopup","getWithRedirect","codeChallengeMethod","oauthMeta","oauth","nativeHistory","nativeDoc","nativeLoc","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","removeSearch","removeHash","Cookies","require","getHttpCache","getPKCEStorage","browserHasLocalStorage","browserHasSessionStorage","testStorageType","supported","getStorageByType","storageProvider","findStorageType","types","curType","nextType","getLocalStorage","getSessionStorage","getCookieStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","k","existingValues","storageKey","valueToStore","inMemoryStore","getInMemoryStorage","testStorage","set","cookieOptions","delete","isUrlRegex","userAgent","SdkClock","parseInt","localOffset","renewTimeQueue","firstTime","lastTime","TokenService","shouldThrottleRenew","newValue","oldValue","handleCrossTabsStorageChange","DEFAULT_OPTIONS","autoRenew","autoRemove","expireEarlySeconds","syncStorage","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","expireTimeouts","renewPromise","TokenManager","storageOptions","defaultState","expireTime","oldTokens","newTokens","oldToken","newToken","expireEventWait","expireEventTimeout","tokenStorage","handleTokenCallback","accessTokenCb","idTokenCb","refreshTokenCb","handleAdded","handleRenewed","handleRemoved","existingTokens","existingToken","removedToken","PromiseQueue","thisObject","queueItem","fingerprint","promise","listener","msg","PCancelable","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","AuthStateManager","event","transformAuthState","devMode","emitAuthStateChange","finalPromise","curPromise","cancelablePromise","onCancel","emitAndResolve","authState","isAuthenticated","SavedObject","storageName","storageString","StorageManager","storageType","storageTypes","idx","logServerSideMemoryStorageWarning","transactionStorage","transaction","isRawIdxResponse","isIdxResponse","MAX_ENTRY_LIFETIME","pruneSharedStorage","storageManager","sharedStorage","entries","entry","age","saveTransactionToSharedStorage","meta","dateCreated","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","cookieStorage","pkceMeta","idxResponse","pair","result","responseText","body","contentType","fetch","fetchPromise","credentials","formatResult","NodeCache","ServerCookies","ttl","ServerStorage","BROWSER_STORAGE","useMultipleCookies","cache","SERVER_STORAGE","cookieSettings","getDefaultOptions","enableSharedStorage","httpRequestClient","transactionManager","buildOptions","assertValidConfig","mergeOptions","postLogoutRedirectUri","useInteractionCodeFlow","transformErrorXHR","restoreOriginalUri","cookies","getCookieSettings","flow","transactionMetaExist","existing","isTransactionMetaValid","getSavedTransactionMeta","validExistingMeta","createTransactionMeta","saveTransactionMeta","muteWarning","keys","shouldValidateFlow","interactionHandle","getTransactionMeta","getResponse","newMeta","useLastResponse","rawIdxResponse","version","getRemediator","idxRemediations","values","remediators","flowMonitor","remediatorCandidates","remediation","isRemeditionInFlow","T","remediator","neededToProceed","actionName","messages","rawIdxState","globalMessages","map","fieldMessages","nextStep","canSkip","canSkipFn","canResend","canResendFn","idxState","terminal","isTerminalResponse","getIdxMessages","getNextStep","action","actionFromValues","getActionFromValues","actions","valuesWithoutExecutedAction","removeActionFromValues","handleIdxError","canceled","remediate","acc","curr","getAllValues","idxRemediation","r","getRequiredValues","cur","required","titleCase","getAuthenticatorFromRemediation","Remediator","authenticator","needed","allValues","val","inputs","inputFromRemediation","aliases","input","reduce","field","authenticatorKey","authenticators","filter","VerifyAuthenticator","passcode","password","challengeType","EnrollAuthenticator","ChallengeAuthenticator","ResetAuthenticator","EnrollProfile","userProfileFromValues","userProfileFromRemediation","canRemediate","form","profileAttributes","attributeNames","attributeValues","attributeName","errors","Identify","OKTA_PASSWORD","identifier","ReEnrollAuthenticator","newPassword","RedirectIdp","idp","option","relatesTo","SelectAuthenticator","selectedAuthenticator","hasSelectedAuthenticatorInList","authenticatorFromRemediation","matchedOption","findMatchedOption","common","label","remediationValue","selectedOption","id","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","SelectEnrollProfile","AuthenticatorData","methodType","AuthenticatorVerificationData","authenticatorFromValues","enrollmentId","AuthenticatorEnrollmentData","phoneNumber","Skip","remediatorMap","remediatorClass","remediations","shouldClearTransaction","stateTokenExternalId","metaFromResp","interactResponse","interact","introspect","enabledFeatures","getEnabledFeatures","availableSteps","getAvailableSteps","stateHandle","idxResponseFromResp","nextStepFromResp","messagesFromResp","_idxResponse","AuthenticationFlow","FlowMonitor","remediatorName","AuthenticationFlowMonitor","prevRemediatorName","PasswordRecoveryFlow","PasswordRecoveryFlowMonitor","RegistrationFlow","RegistrationFlowMonitor","getFlowSpecification","oktaAuth","flowSpec","run","canProceed","startTransaction","savedState","setGlobalRequestInterceptor","createGlobalRequestInterceptor","requestConfig","OktaUserAgent","process","Emitter","OktaAuth","transactionStatus","resume","resumeTransaction","exists","transactionExists","_get","PKCE","handleLogin","close","closeSession","sessionExists","getSession","refresh","refreshSession","setCookieAndRedirect","parseFromUrl","decode","revoke","renew","renewToken","renewTokens","getUserInfo","verify","syncMethods","_setLocation","_getHistory","_getLocation","_getDocument","introspectV2","authenticate","register","proceed","cancel","recoverPassword","handleInteractionCodeRedirect","setFlow","getFlow","_postToTransaction","originalUri","additionalParams","accessTokenKey","refreshTokenKey","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","sessionStorage","browserStorage","oAuthResponse","hasResponseType","constants"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, HttpResponse } from '../types';\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: string[];\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: string[];\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nexport {\n  isAuthApiError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  stateTokenExternalId: string;\n}\n\n// Check if state && stateTokenExternalId have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(stateTokenExternalId=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and stateTokenExternalId from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]));\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuth } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuth, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport AuthApiError from '../errors/AuthApiError';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport { OktaAuth, RequestOptions, FetchOptions, RequestData } from '../types';\n\nexport function httpRequest(sdk: OktaAuth, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient(method, url, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      err = new AuthApiError(serverErr, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuth, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuth, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { AuthTransaction } from './AuthTransaction';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return new AuthTransaction(sdk, pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res = null) {\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(new AuthTransaction(sdk));\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref));\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\nimport { AuthTransaction } from './AuthTransaction';\n\nfunction transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nfunction resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nfunction introspect (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nfunction transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nfunction transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nfunction postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  postToTransaction,\n  introspect,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nexport class TransactionState {\n  interactionHandle?: string;\n\n// Authn V1 only\n  stateToken?: string;\n  type?: string;\n  expiresAt?: string;\n  relayState?: string;\n  factorResult?: string;\n  factorType?: string;\n  recoveryToken?: string;\n  recoveryType?: string;\n  autoPush?: boolean | (() => boolean);\n  rememberDevice?: boolean | (() => boolean);\n  profile?: {\n    updatePhone?: boolean;\n  };\n}","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport { webcrypto } from '../../crypto';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType.indexOf('id_token') !== -1 &&\n    tokenParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(sdk, options: TokenParams, refreshToken: RefreshToken): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      return name + '=' + encodeURIComponent(value);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuth, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuth, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuth, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuth } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuth, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuth, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuth, options?: CustomUrls) {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  return isBrowser() && !!document.documentMode && document.documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  var isIE8or9 = document.documentMode && document.documentMode < 10;\n  if (window.postMessage && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuth, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuth): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../../types';\nimport { OAuthError, AuthApiError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuth, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuth, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuth): boolean {\n  var authParams = sdk.options;\n  return uri && uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuth) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuth, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuth, TokenParams } from '../../types';\nimport { clone } from '../../util';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport pkce from './pkce';\n\n// Prepares params for a call to /authorize or /token\nexport function prepareTokenParams(sdk: OktaAuth, tokenParams?: TokenParams): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = Object.assign({}, defaults, clone(tokenParams));\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return Promise.resolve(tokenParams);\n  }\n\n  // PKCE flow\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    return Promise.reject(new AuthSdkError(errorMessage));\n  }\n\n  // set default code challenge method, if none provided\n  if (!tokenParams.codeChallengeMethod) {\n    tokenParams.codeChallengeMethod = DEFAULT_CODE_CHALLENGE_METHOD;\n  }\n\n  // responseType is forced\n  tokenParams.responseType = 'code';\n\n  return getWellKnown(sdk, null)\n    .then(function (res) {\n      var methods = res['code_challenge_methods_supported'] || [];\n      if (methods.indexOf(tokenParams.codeChallengeMethod) === -1) {\n        throw new AuthSdkError('Invalid code_challenge_method');\n      }\n    })\n    .then(function () {\n      if (!tokenParams.codeVerifier) {\n        tokenParams.codeVerifier = pkce.generateVerifier();\n      }\n      return pkce.computeChallenge(tokenParams.codeVerifier);\n    })\n    .then(function (codeChallenge) {\n      // Clone/copy the params. Set codeChallenge\n      var clonedParams = clone(tokenParams) || {};\n      Object.assign(clonedParams, tokenParams, {\n        codeChallenge: codeChallenge,\n      });\n      return clonedParams;\n    });\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuth, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuth, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat > claims.exp) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew) > claims.exp) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat > (now + sdk.options.maxClockSkew)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport StorageManager from '../StorageManager';\nimport { CustomUrls } from './OktaAuthOptions';\nimport { FlowIdentifier } from '../idx/types';\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n}\n\nexport interface TransactionMetaOptions {\n  pkce?: boolean;\n  oauth?: boolean;\n  muteWarning?: boolean;\n  state?: string;\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta {\n  issuer: string;\n  redirectUri: string;\n  state: string;\n  nonce: string;\n  responseType: string | string [];\n  scopes: string[];\n  clientId: string;\n  urls: CustomUrls;\n  ignoreSignature: boolean;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends OAuthTransactionMeta {\n  codeVerifier: string;\n  codeChallengeMethod: string;\n  codeChallenge: string;\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { InteractOptions } from '../interact';\nimport { IntrospectOptions } from '../introspect';\nimport { APIError, Tokens } from '../../types';\nimport { IdxTransactionMeta } from '../../types/Transaction';\nimport { IdxAuthenticator, IdxMessage, IdxOption, IdxResponse } from './idx-js';\nimport { FlowIdentifier } from './FlowIdentifier';\n\nexport { IdxMessage } from './idx-js';\nexport { AuthenticationOptions } from '../authenticate';\nexport { RegistrationOptions } from '../register';\nexport { PasswordRecoveryOptions } from '../recoverPassword';\nexport { ProceedOptions } from '../proceed';\nexport { CancelOptions } from '../cancel';\nexport { FlowIdentifier };\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  OKTA_VERIFIER = 'okta_verifier',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n}\n\nexport type Input = {\n  name: string;\n  type?: string;\n  label?: string;\n  value?: string;\n  secret?: boolean;\n  required?: boolean;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY,\n  REGISTRATION,\n  SOCIAL_IDP,\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  _idxResponse?: IdxResponse; // Temporary for widget conversion. Will not be supported long-term. OKTA-418165\n}\n\nexport type IdxOptions = InteractOptions & IntrospectOptions & {\n  flow?: FlowIdentifier;\n};\n\nexport type Authenticator = {\n  key: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuth,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport function revokeToken(sdk: OktaAuth, token: RevocableToken): Promise<any> {\n  return Promise.resolve()\n    .then(function () {\n      var accessToken: string;\n      var refreshToken: string;\n      if (token) { \n          accessToken = (token as AccessToken).accessToken;\n          refreshToken = (token as RefreshToken).refreshToken;  \n      }\n        \n      if(!accessToken && !refreshToken) { \n        throw new AuthSdkError('A valid access or refresh token object is required');\n      }\n      var clientId = sdk.options.clientId;\n      var clientSecret = sdk.options.clientSecret;\n      if (!clientId) {\n        throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n      }\n      var revokeUrl = getOAuthUrls(sdk).revokeUrl;\n      var args = toQueryString({\n        // eslint-disable-next-line camelcase\n        token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n        token: refreshToken || accessToken,\n      }).slice(1);\n      var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n      return post(sdk, revokeUrl, args, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + creds\n        }\n      });\n    });\n}","/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getOAuthUrls } from '../oidc';\nimport { CustomUrls, OAuthResponse, OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuth, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType = ['token']; // an accessToken will always be returned\n      if (scopes.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuth, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuth, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  const key = await getKey(sdk, token.issuer, jwt.header.kid);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuth,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { exchangeCodeForTokens } from './exchangeCodeForTokens';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from '.';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] || res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\n// eslint-disable-next-line max-len\nexport function handleOAuthResponse(sdk: OktaAuth, tokenParams: TokenParams, res: OAuthResponse, urls: CustomUrls): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType;\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  return Promise.resolve()\n    .then(function () {\n      validateResponse(res, tokenParams);\n    }).then(function () {\n      var tokenDict = {} as Tokens;\n      var expiresIn = res.expires_in;\n      var tokenType = res.token_type;\n      var accessToken = res.access_token;\n      var idToken = res.id_token;\n      var refreshToken = res.refresh_token;\n      var now = Math.floor(Date.now()/1000);\n\n      if (accessToken) {\n        var accessJwt = sdk.token.decode(accessToken);\n        tokenDict.accessToken = {\n          accessToken: accessToken,\n          claims: accessJwt.payload,\n          expiresAt: Number(expiresIn) + now,\n          tokenType: tokenType,\n          scopes: scopes,\n          authorizeUrl: urls.authorizeUrl,\n          userinfoUrl: urls.userinfoUrl\n        };\n      }\n\n      if (refreshToken) {\n        tokenDict.refreshToken = {\n          refreshToken: refreshToken,\n          // should not be used, this is the accessToken expire time\n          // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n          expiresAt: Number(expiresIn) + now, \n          scopes: scopes,\n          tokenUrl: urls.tokenUrl,\n          authorizeUrl: urls.authorizeUrl,\n          issuer: urls.issuer,\n        };\n      }\n\n      if (idToken) {\n        var idJwt = sdk.token.decode(idToken);\n\n        var idTokenObj: IDToken = {\n          idToken: idToken,\n          claims: idJwt.payload,\n          expiresAt: idJwt.payload.exp - idJwt.payload.iat + now, // adjusting expiresAt to be in local time\n          scopes: scopes,\n          authorizeUrl: urls.authorizeUrl,\n          issuer: urls.issuer,\n          clientId: clientId\n        };\n\n        var validationParams: TokenVerifyParams = {\n          clientId: clientId,\n          issuer: urls.issuer,\n          nonce: tokenParams.nonce,\n          accessToken: accessToken\n        };\n\n        if (tokenParams.ignoreSignature !== undefined) {\n          validationParams.ignoreSignature = tokenParams.ignoreSignature;\n        }\n\n        return verifyToken(sdk, idTokenObj, validationParams)\n          .then(function () {\n            tokenDict.idToken = idTokenObj;\n            return tokenDict;\n          });\n      }\n\n      return tokenDict;\n    })\n    .then(function (tokenDict): TokenResponse {\n      // Validate received tokens against requested response types \n      if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n        // eslint-disable-next-line max-len\n        throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n      }\n      if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n        // eslint-disable-next-line max-len\n        throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n      }\n\n      return {\n        tokens: tokenDict,\n        state: res.state,\n        code: res.code\n      };\n    });\n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuth,\n  TokenParams,\n  PopupParams,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { addPostMessageListener } from './util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuth, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuth, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuth, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuth,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n    clientId,\n  });\n  const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n  // Support rotating refresh tokens\n  const { refreshToken } = tokens;\n  if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n    sdk.tokenManager.updateRefreshToken(refreshToken);\n  }\n\n  return tokens;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuth, token: Token): Promise<Token> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken } from '../types';\n\nexport async function getUserInfo(sdk, accessTokenObject: AccessToken, idTokenObject: IDToken): Promise<UserClaims> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuth, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TransactionMeta } from '../types';\nimport { clone } from '../util';\nimport { getOAuthUrls, prepareTokenParams } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function getWithRedirect(sdk: OktaAuth, options: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n      const urls = getOAuthUrls(sdk, options);\n      const requestUrl = urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n      const issuer = sdk.options.issuer;\n\n      // Gather the values we want to save in the transaction\n      const {\n        responseType,\n        state,\n        nonce,\n        scopes,\n        clientId,\n        ignoreSignature,\n        redirectUri,\n        codeVerifier,\n        codeChallenge,\n        codeChallengeMethod,\n      } = tokenParams;\n\n      const oauthMeta: TransactionMeta = {\n        issuer,\n        responseType,\n        state,\n        nonce,\n        scopes,\n        clientId,\n        urls,\n        ignoreSignature,\n        redirectUri,\n        codeVerifier,\n        codeChallenge,\n        codeChallengeMethod\n      };\n\n      sdk.transactionManager.save(oauthMeta, { oauth: true });\n      sdk.token.getWithRedirect._setLocation(requestUrl);\n    });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\nconst Cookies = require('js-cookie');\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = storageUtil.getLocalStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = storageUtil.getSessionStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = storageUtil.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = storageUtil.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options: StorageOptions): SimpleStorage {\n    let storageProvider = null;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = storageUtil.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = storageUtil.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = storageUtil.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = storageUtil.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (storageUtil.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return storageUtil.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options.secure;\n    const sameSite = options.sameSite;\n    const sessionCookie = options.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: storageUtil.storage.get,\n      setItem: function(key, value, expiresAt = '2200-01-01T00:00:00.000Z') {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = sessionCookie ? null : expiresAt;\n        storageUtil.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: function(key) {\n        storageUtil.storage.delete(key);\n      }\n    };\n\n    if (!options.useMultipleCookies) {\n      return storage;\n    }\n\n    // options.useMultipleCookies - because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    //  Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie dataa\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {},\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return storageUtil.storage.get(name);\n    },\n\n    get: function(name: string): string {\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  var issuer = args.issuer;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(args.issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nfunction getUserAgent(args: OktaAuthOptions, sdkValue: string): string {\n  var userAgent = args.userAgent || {};\n\n  if (userAgent.value) {\n    return userAgent.value;\n  }\n\n  if (userAgent.template) {\n    return userAgent.template.replace('$OKTA_AUTH_JS', sdkValue);\n  }\n\n  return sdkValue;\n}\n\nexport {\n  assertValidConfig,\n  getUserAgent\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { isBrowser } from '../features';\nimport { TokenManagerOptions } from '../types';\n\nfunction shouldThrottleRenew(renewTimeQueue) {\n  let res = false;\n  renewTimeQueue.push(Date.now());\n  if (renewTimeQueue.length >= 10) {\n    // get and remove first item from queue\n    const firstTime = renewTimeQueue.shift();\n    const lastTime = renewTimeQueue[renewTimeQueue.length - 1];\n    res = lastTime - firstTime < 30 * 1000;\n  }\n  return res;\n}\n\nexport class TokenService {\n  private tokenManager: TokenManager;\n  private options: TokenManagerOptions;\n  private storageListener: (event: StorageEvent) => void;\n  private onTokenExpiredHandler: (key: string) => void;\n  private syncTimeout: unknown;\n\n  constructor(tokenManager: TokenManager, options: TokenManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n  }\n\n  start() {\n    const renewTimeQueue = [];\n    this.onTokenExpiredHandler = (key) => {\n      if (this.options.autoRenew) {\n        if (shouldThrottleRenew(renewTimeQueue)) {\n          const error = new AuthSdkError('Too many token renew requests');\n          this.tokenManager.emitError(error);\n        } else {\n          this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n        }\n      } else if (this.options.autoRemove) {\n        this.tokenManager.remove(key);\n      }\n    };\n    this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n\n    this.tokenManager.setExpireEventTimeoutAll();\n\n    if (this.options.syncStorage && isBrowser()) {\n      // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n      // A StorageEvent is sent to a window when a storage area it has access to is changed \n      // within the context of another document.\n      // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n\n      this.storageListener = ({ key, newValue, oldValue }: StorageEvent) => {\n        const handleCrossTabsStorageChange = () => {\n          this.tokenManager.resetExpireEventTimeoutAll();\n          this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n        };\n\n        // Skip if:\n        // not from localStorage.clear (event.key is null)\n        // event.key is not the storageKey\n        // oldValue === newValue\n        if (key && (key !== this.options.storageKey || newValue === oldValue)) {\n          return;\n        }\n\n        // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n        // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n        this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), this.options._storageEventDelay);\n      };\n\n      window.addEventListener('storage', this.storageListener);\n    }\n  }\n\n  stop() {\n    this.tokenManager.clearExpireEventTimeoutAll();\n    this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n    if (this.options.syncStorage && isBrowser()) {\n      window.removeEventListener('storage', this.storageListener);\n      clearTimeout(this.syncTimeout as any);\n    }\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { isRefreshTokenError, validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport { TOKEN_STORAGE_NAME } from './constants';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuth,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY } from './constants';\nimport { TokenService } from './services/TokenService';\n\nconst DEFAULT_OPTIONS = {\n  autoRenew: true,\n  autoRemove: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  syncStorage: true,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token>;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuth;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n  private service: TokenService;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  constructor(sdk: OktaAuth, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n\n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage(storageOptions);\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.service) {\n      this.stop();\n    }\n    this.service = new TokenService(this, this.getOptions());\n    this.service.start();\n  }\n  \n  stop() {\n    if (this.service) {\n      this.service.stop();\n      this.service = null;\n    }\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    var expireTime = token.expiresAt - this.options.expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: Function, \n    idTokenCb?: Function,\n    refreshTokenCb?: Function\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token and emit error\n        if (isRefreshTokenError(err) || err.name === 'OAuthError' || err.name === 'AuthSdkError') {\n          // remove token from storage\n          this.remove(key);\n          \n          err.tokenKey = key;\n          this.emitError(err);\n        }\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n\n  constructor() {\n    this.queue = [];\n    this.running = false;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: () => void, thisObject: object, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    var queueItem = this.queue.shift();\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n    if (isPromise(res)) {\n      res.then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../types';\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../types';\n\nexport default function fingerprint(sdk: OktaAuth, options: FingerprintOptions) {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\nconst PCancelable = require('p-cancelable');\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: typeof PCancelable;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _lastEventTimestamp: number;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n          const promise: Promise<AuthState> = transformAuthState\n            ? transformAuthState(this._sdk, authState)\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport default class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = null;\n      }\n    }\n\n    if (!storageType) {\n      storageType = this.storageUtil.findStorageType(storageTypes);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: unknown;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | { form: IdxForm };\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\n\nexport interface IdxActions {\n  [key: string]: Function;\n}\n\n// Object returned from idx-js\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: {\n    interactionHandle?: string;\n  };\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport StorageManager from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport StorageManager from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage\n} from './types';\nimport { RawIdxResponse, isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean;\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    this.storageManager = options.storageManager;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // clear IDX response storage\n    this.clearIdxResponse();\n\n    // Usually we do NOT want to clear shared storage because another tab may need it to continue/complete a flow\n    // It can be cleared after a user succcesfully signs in and receives tokens\n    if (this.enableSharedStorage && options.clearSharedStorage) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n  \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta: TransactionMeta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', null);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(idxResponse: RawIdxResponse): void {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(idxResponse);\n  }\n\n  loadIdxResponse(): RawIdxResponse {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const idxResponse = storage.getStorage();\n    if (!isRawIdxResponse(idxResponse)) {\n      return null;\n    }\n    return idxResponse;\n  }\n\n  clearIdxResponse(): void {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, FetchResponse, HttpResponse } from '../types';\n\nfunction readData(response: FetchResponse): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of response.headers.entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  // JSON encode body (if appropriate)\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { SimpleStorage, StorageType, StorageUtil, Cookies } from '../types';\nimport { AuthSdkError } from '../errors';\nconst NodeCache = require('node-cache'); // commonJS module cannot be imported without esModuleInterop\n\n// this is a SHARED memory storage to support a stateless http server\nconst sharedStorage = typeof NodeCache === 'function' ? new NodeCache() : null;\n\nclass ServerCookies implements Cookies {\n  nodeCache: any; // NodeCache\n  \n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n  }\n\n  set(name: string, value: string, expiresAt: string): string {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(Date.parse(expiresAt))) {\n      // Time to expiration in seconds\n      var ttl = (Date.parse(expiresAt) - Date.now()) / 1000;\n      this.nodeCache.set(name, value, ttl);\n    } else {\n      this.nodeCache.set(name, value);\n    }\n\n    return this.get(name);\n  }\n\n  get(name): string {\n    return this.nodeCache.get(name);\n  }\n\n  delete(name) {\n    return this.nodeCache.del(name);\n  }\n}\n// Building this as an object allows us to mock the functions in our tests\nclass ServerStorage implements StorageUtil {\n  nodeCache: any; // NodeCache\n  storage: Cookies;\n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n    this.storage = new ServerCookies(nodeCache);\n  }\n\n  testStorageType(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        break;\n    }\n    return supported;\n  }\n\n  getStorageByType(storageType: StorageType): SimpleStorage {\n    let storageProvider = null;\n    switch (storageType) {\n      case 'memory':\n        storageProvider = this.getStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  }\n\n  findStorageType(): StorageType {\n    return 'memory';\n  }\n\n  // will be removed in next version. OKTA-362589\n  getHttpCache() {\n    return null; // stubbed in server.js\n  }\n\n  // shared in-memory using node cache\n  getStorage(): SimpleStorage {\n    return {\n      getItem: this.nodeCache.get,\n      setItem: (key, value) => {\n        this.nodeCache.set(key, value, '2200-01-01T00:00:00.000Z');\n      }\n    };\n  }\n}\n\nexport default new ServerStorage(sharedStorage);\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { removeTrailingSlash, warn, removeNils } from './util';\nimport { assertValidConfig } from './builderUtil';\nimport { OktaAuthOptions, StorageManagerOptions } from './types';\n\nimport fetchRequest from './fetch/fetchRequest';\nimport browserStorage from './browser/browserStorage';\nimport serverStorage from './server/serverStorage';\nimport { isBrowser, isHTTPS } from './features';\n\nconst BROWSER_STORAGE: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ],\n    useMultipleCookies: true\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nconst SERVER_STORAGE: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'memory'\n    ]\n  }\n};\n\nfunction getCookieSettings(args: OktaAuthOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n\n\nexport function getDefaultOptions(): OktaAuthOptions {\n  const storageUtil = isBrowser() ? browserStorage : serverStorage;\n  const storageManager = isBrowser() ? BROWSER_STORAGE : SERVER_STORAGE;\n  const enableSharedStorage = isBrowser() ? true : false; // localStorage for multi-tab flows (browser only)\n  return {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil,\n    storageManager,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: isBrowser() ? getCookieSettings(args, isHTTPS()) : args.cookies,\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuth, IdxTransactionMeta, TransactionMetaOptions } from '../types';\nimport { warn } from '../util';\nimport { getOAuthUrls } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(authClient: OktaAuth, options?: TransactionMetaOptions) {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    nonce,\n    ignoreSignature,\n    codeVerifier,\n    codeChallengeMethod,\n    codeChallenge,\n  } = tokenParams;\n  const urls = getOAuthUrls(authClient, tokenParams);\n  const flow = authClient.idx.getFlow() || 'default';\n  const issuer = authClient.options.issuer;\n  const meta = {\n    flow,\n    issuer,\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    nonce,\n    urls,\n    ignoreSignature,\n    codeVerifier,\n    codeChallengeMethod,\n    codeChallenge \n  };\n  return meta;\n}\n\nexport function transactionMetaExist(authClient: OktaAuth, options?: TransactionMetaOptions): boolean {\n  if (authClient.transactionManager.exists(options)) {\n    const existing = authClient.transactionManager.load(options) as IdxTransactionMeta;\n    if (isTransactionMetaValid(authClient, existing) && existing.interactionHandle) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid, or undefined\nexport function getSavedTransactionMeta(authClient: OktaAuth, options?: TransactionMetaOptions): IdxTransactionMeta {\n  const state = options?.state || authClient.options.state;\n  const existing = authClient.transactionManager.load({ state }) as IdxTransactionMeta;\n  if (existing && isTransactionMetaValid(authClient, existing)) {\n    return existing;\n  }\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuth,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  // Load existing transaction meta from storage\n  if (authClient.transactionManager.exists(options)) {\n    const validExistingMeta = getSavedTransactionMeta(authClient, options);\n    if (validExistingMeta) {\n      return validExistingMeta;\n    }\n    // existing meta is not valid for this configuration\n    // this is common when changing configuration in local development environment\n    // in a production environment, this may indicate that two apps are sharing a storage key\n    warn('Saved transaction meta does not match the current configuration. ' + \n      'This may indicate that two apps are sharing a storage key.');\n  }\n\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuth, meta) {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuth) {\n  authClient.transactionManager.clear();\n}\n\n// returns true if values in meta match current authClient options\n// eslint-disable-next-line complexity\nexport function isTransactionMetaValid (authClient: OktaAuth, meta) {\n  // First validate against required config\n  const keys = ['issuer', 'clientId', 'redirectUri'];\n  if (keys.some(key => authClient.options[key] !== meta[key])) {\n    return false;\n  }\n\n  // Validate optional config\n  const { flow, state } = authClient.options;\n  \n  // If state is specified, it must match meta to be valid\n  if (state && state !== meta.state) {\n    return false;\n  }\n\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from '@okta/okta-idx-js';\nimport { OktaAuth, IdxTransactionMeta } from '../types';\nimport { getTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\n\nexport interface InteractOptions {\n  state?: string;\n  scopes?: string[];\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (authClient: OktaAuth, options: InteractOptions = {}): Promise<InteractResponse> {\n  let state = options.state || authClient.options.state;\n  const meta = await getTransactionMeta(authClient, { state });\n\n  // Saved transaction, return meta\n  if (meta.interactionHandle) {\n    return getResponse(meta);\n  }\n\n  // These properties are always loaded from meta (or calculated fresh)\n  const { codeChallenge, codeChallengeMethod } = meta;\n\n  // These properties are defined by global configuration\n  const { clientId, redirectUri } = authClient.options;\n\n  // These properties can be set in options, but also have a default value in global configuration.\n  state = state || meta.state;\n  const scopes = options.scopes || authClient.options.scopes || meta.scopes;\n\n  const baseUrl = getOAuthBaseUrl(authClient);\n  return idx.interact({\n    // OAuth\n    clientId, \n    baseUrl,\n    scopes,\n    state,\n    redirectUri,\n\n    // PKCE\n    codeChallenge,\n    codeChallengeMethod\n  }).then(interactionHandle => {\n    const newMeta = {\n      ...meta,\n      interactionHandle,\n      state,\n      scopes\n    };\n    // Save transaction meta so it can be resumed\n    saveTransactionMeta(authClient, newMeta);\n\n    return getResponse(newMeta);\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from '@okta/okta-idx-js';\nimport { OktaAuth } from '../types';\nimport { IdxResponse, isRawIdxResponse, RawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\n\nexport interface IntrospectOptions {\n  interactionHandle?: string;\n  stateHandle?: string;\n  stateTokenExternalId?: string;\n}\n\nexport async function introspect (authClient: OktaAuth, options: IntrospectOptions): Promise<IdxResponse> {\n  const useLastResponse = !options.stateTokenExternalId; // email verify callback: must make a new response\n  let rawIdxResponse: RawIdxResponse;\n  \n  if (useLastResponse) {\n    // try load from storage first\n    rawIdxResponse = authClient.transactionManager.loadIdxResponse();\n  }\n  \n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    try {\n      rawIdxResponse = await idx.introspect({ domain, version, ...options });\n    } catch (err) {\n      if (isRawIdxResponse(err)) {\n        rawIdxResponse = err;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  return idx.makeIdxState(rawIdxResponse);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { Remediator, RemediationValues } from './remediators';\nimport { RemediationFlow } from './flow';\nimport { RunOptions } from './run';\nimport { NextStep, IdxMessage } from './types';\nimport { \n  IdxResponse,  \n  IdxRemediation,\n  isIdxResponse, \n} from './types/idx-js';\n\ninterface RemediationResponse {\n  idxResponse?: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n// Return first match idxRemediation in allowed remediators\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RunOptions,\n): Remediator {\n  const { remediators, flowMonitor } = options;\n\n  let remediator;\n  const remediatorCandidates = [];\n  for (let remediation of idxRemediations) {\n    const isRemeditionInFlow = Object.keys(remediators).includes(remediation.name);\n    if (!isRemeditionInFlow) {\n      continue;\n    }\n      \n    const T = remediators[remediation.name];\n    remediator = new T(remediation, values);\n    if (flowMonitor.isRemediatorCandidate(remediator, idxRemediations, values)) {\n      if (remediator.canRemediate()) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  // TODO: why is it a problem to have multiple remediations? \n  // JIRA: https://oktainc.atlassian.net/browse/OKTA-400758\n  // if (remediatorCandidates.length > 1) {\n  //   const remediationNames = remediatorCandidates.reduce((acc, curr) => {\n  //     const name = curr.getName();\n  //     return acc ? `${acc}, ${name}` : name;\n  //   }, '');\n  //   throw new AuthSdkError(`\n  //     More than one remediation can match the current input, remediations: ${remediationNames}\n  //   `);\n  // }\n\n  return remediatorCandidates[0];\n}\n\nfunction isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nfunction canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nfunction canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nfunction getIdxMessages(\n  idxResponse: IdxResponse, remediators: RemediationFlow\n): IdxMessage[] {\n  let messages = [];\n  if (!remediators) {\n    return messages;\n  }\n\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages];\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const T = remediators[remediation.name];\n    if (!T) {\n      continue;\n    }\n    const remediator = new T(remediation);\n    const fieldMessages = remediator.getMessages();\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages];\n    }\n  }\n\n  return messages;\n}\n\nfunction getNextStep(\n  remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep();\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nfunction handleIdxError(e, remediators, remediator?) {\n  // Handle idx messages\n  const idxState: IdxResponse = isIdxResponse(e) ? e : null;\n  if (!idxState) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  const terminal = isTerminalResponse(idxState);\n  const messages = getIdxMessages(idxState, remediators);\n  if (terminal) {\n    return { terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(remediator, idxState);\n    return { \n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n\nfunction getActionFromValues(values, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values) {\n  // Currently support resend actions only\n  values.resend = undefined;\n  return values;\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RunOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { remediators, flowMonitor } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  // Reach to terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getIdxMessages(idxResponse, remediators);\n  if (terminal) {\n    return { terminal, messages };\n  }\n  \n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actions = [\n    ...options.actions || [],\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action]();\n        } catch (e) {\n          return handleIdxError(e, remediators);\n        }\n        if (action === 'cancel') {\n          return { canceled: true };\n        }\n        return remediate(idxResponse, valuesWithoutExecutedAction, options); // recursive call\n      }\n    }\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n  \n  if (!remediator) {\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  if (flowMonitor.loopDetected(remediator)) {\n    throw new AuthSdkError(`\n      Remediation run into loop, break!!! remediation: ${remediator.getName()}\n    `);\n  }\n\n  // Recursive loop breaker\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return { idxResponse, nextStep };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n\n    // Track succeed remediations in the current transaction\n    await flowMonitor.trackRemediations(name);\n    \n    // Successfully get interaction code\n    if (idxResponse.interactionCode) {\n      return { idxResponse };\n    }\n\n    // Reach to terminal state\n    const terminal = isTerminalResponse(idxResponse);\n    const messages = getIdxMessages(idxResponse, remediators);\n    if (terminal) {\n      return { terminal, messages };\n    }\n\n    // Handle idx message in nextStep\n    if (messages.length) {\n      const nextStep = getNextStep(remediator, idxResponse);\n      return { nextStep, messages };\n    }\n    \n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    return remediate(idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(e, remediators, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  return remediation.value.find(({ name }) => name === 'authenticator');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { NextStep, IdxMessage, Authenticator, Input } from '../../types';\nimport { IdxAuthenticator, IdxRemediation } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase } from '../util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: Authenticator[] | string[];\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: RemediationValues;\n  map?: IdxToRemediationValueMap;\n\n  constructor(remediation: IdxRemediation, values: RemediationValues = {}) {\n    // map authenticators to Authenticator[] type\n    values.authenticators = (values.authenticators?.map(authenticator => {\n      return typeof authenticator === 'string' \n        ? { key: authenticator } : authenticator;\n    }) || []) as Authenticator[];\n    \n    // assign fields to the instance\n    this.values = values;\n    this.remediation = remediation;\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  canRemediate(): boolean {\n    if (!this.map) {\n      return false;\n    }\n    const required = getRequiredValues(this.remediation);\n    const needed = required.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      return this[`map${titleCase(key)}`](\n        this.remediation.value.find(({name}) => name === key)\n      );\n    }\n\n    if (!this.map) {\n      return this.values[key];\n    }\n\n    // Handle general primitive types\n    const entry = this.map[key];\n    if (!entry) {\n      return this.values[key];\n    }\n\n    // find the first aliased property that returns a truthy value\n    for (let i = 0; i < entry.length; i++) {\n      let val = this.values[entry[i]];\n      if (val) {\n        return val;\n      }\n    }\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n\n    // First see if the remediation has a mapping for this vale\n    const data = this.getData(key);\n    if (typeof data === 'object') {\n      return !!Object.keys(data).find(key => !!data[key]);\n    }\n    return !!data;\n  }\n\n  getNextStep(): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  private getInputs(): Input[] {\n    if (!this.map) {\n      return [];\n    }\n\n    return Object.keys(this.map).reduce((inputs, key) => {\n      const inputFromRemediation = this.remediation.value.find(item => item.name === key);\n      if (!inputFromRemediation) {\n        return inputs;\n      }\n\n      let input: Input;\n      const aliases = this.map[key];\n      const { type } = inputFromRemediation;\n      if (typeof this[`getInput${titleCase(key)}`] === 'function') {\n        input = this[`getInput${titleCase(key)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let name;\n        if (aliases.length === 1) {\n          name = aliases[0];\n        } else {\n          // try find key from values\n          name = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (name) {\n          input = { ...inputFromRemediation, name };\n        }\n      } \n\n      if (!input) {\n        throw new AuthSdkError(`Missing custom getInput${titleCase(key)} method in Remediator: ${this.getName()}`);\n      }\n\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        inputs.push(input);\n      }\n      return inputs;\n    }, []);\n  }\n\n  // Override this method to grab messages per remediation\n  getMessages(): IdxMessage[] | undefined {\n    if (!this.remediation.value) {\n      return;\n    }\n    return this.remediation.value[0]?.form?.value.reduce((messages, field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove finished authenticator from list\n  getValuesAfterProceed(): unknown {\n    const authenticatorKey = this.getAuthenticator()?.key;\n    const authenticators = (this.values.authenticators as Authenticator[])\n      ?.filter(authenticator => authenticator.key !== authenticatorKey);\n    return { ...this.values, authenticators };\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    return this.remediation.relatesTo?.value;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\n\nexport interface VerifyAuthenticatorValues extends RemediationValues {\n  verificationCode?: string;\n  password?: string;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator extends Remediator {\n\n  values: VerifyAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  canRemediate() {\n    return !!(this.values.password || this.values.verificationCode);\n  }\n\n  mapCredentials() {\n    return { \n      passcode: this.values.verificationCode || this.values.password\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'password' : 'verificationCode';\n    return {\n      ...input.form?.value[0],\n      name,\n      type: 'string',\n      required: input.required\n    };\n  }\n\n  getValuesAfterProceed() {\n    let values = super.getValuesAfterProceed() as VerifyAuthenticatorValues;\n    const authenticator = this.getAuthenticator();\n    if (authenticator.type === 'password') {\n      delete values.password;\n    } else {\n      delete values.verificationCode;\n    }\n    return values;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'enroll-authenticator';\n  values: EnrollAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'challenge-authenticator';\n  values: ChallengeAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'reset-authenticator';\n  values: ResetAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator {\n  static remediationName = 'enroll-profile';\n\n  values: EnrollProfileValues;\n\n  map = {\n    'userProfile': []\n  };\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    const userProfileFromRemediation = this.remediation.value.find(({ name }) => name === 'userProfile');\n    return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    return attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, AuthenticatorKey } from '../types';\nimport { IdxRemediation } from '../types/idx-js';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n}\n\nexport class Identify extends Remediator {\n  static remediationName = 'identify';\n\n  values: IdentifyValues;\n\n  map = {\n    'identifier': ['username'],\n    'credentials': [],\n    'rememberMe': ['rememberMe'],\n  };\n\n  constructor(remediation: IdxRemediation, values?: IdentifyValues) {\n    super(remediation, values);\n\n    // add password authenticator to authenticators list if password is provided\n    const { password, authenticators } = this.values;\n    if (password && !authenticators.some(authenticator => authenticator.type === 'password')) {\n      this.values = {\n        ...this.values,\n        authenticators: [\n          { \n            type: 'password',\n            key: AuthenticatorKey.OKTA_PASSWORD\n          }, \n          ...authenticators\n        ] as Authenticator[]\n      };\n    }\n  }\n\n  canRemediate() {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    return { passcode: this.values.password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n  getValuesAfterProceed() {\n    // Handle username + password scenario\n    // remove \"password\" from authenticator array when remediation is finished\n    if (this.remediation.value.some(({ name }) => name === 'credentials')) {\n      const authenticators = (this.values.authenticators as Authenticator[])\n        ?.filter(authenticator => authenticator.key !== AuthenticatorKey.OKTA_PASSWORD);\n      return { ...this.values, authenticators };\n    }\n\n    return super.getValuesAfterProceed();\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator {\n  static remediationName = 'reenroll-authenticator';\n\n  values: ReEnrollAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  mapCredentials() {\n    return { \n      passcode: this.values.newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediation, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator } from '../../types';\n\n// Find matched authenticator in provided order\nfunction findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator extends Remediator {\n  values: SelectAuthenticatorValues;\n  matchedOption: IdxRemediation;\n  \n  map = {\n    authenticator: []\n  }\n\n  constructor(remediation: IdxRemediation, values: SelectAuthenticatorValues = {}) {\n    super(remediation, values);\n    \n    // Unify authenticator input type\n    const { authenticator: selectedAuthenticator, authenticators } = this.values;\n    const hasSelectedAuthenticatorInList = authenticators\n        ?.some((authenticator => authenticator.key === selectedAuthenticator));\n    if (selectedAuthenticator && !hasSelectedAuthenticatorInList) {\n      // add selected authenticator to list\n      this.values.authenticators = [\n        ...(authenticators || []), \n        { key: selectedAuthenticator }\n      ] as Authenticator[];\n    }\n  }\n\n  canRemediate() {\n    const { authenticators } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n    // Proceed with provided authenticators\n    const matchedOption = findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options.map(option => {\n      const { \n        label, \n        relatesTo: { key } \n      } = option;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators } = this.values;\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './/Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-authenticate';\n  values: SelectAuthenticatorAuthenticateValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-enroll';\n  values: SelectAuthenticatorEnrollValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator {\n  static remediationName = 'select-enroll-profile';\n\n  values: SelectEnrollProfileValues;\n\n  canRemediate() {\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue, IdxOption, IdxRemediation } from '../../types/idx-js';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData extends Remediator {\n\n  map = {\n    'authenticator': []\n  };\n\n  values: AuthenticatorDataValues;\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}) {\n    super(remediation, values);\n\n    // Unify authenticator input type\n    const { authenticators } = this.values;\n    const authenticatorKey = this.getAuthenticator().key;\n    const authenticator = (authenticators as Authenticator[])\n        ?.find(authenticator => authenticator.key === authenticatorKey);\n    if (authenticator) {\n      // map\n      this.values.authenticators = authenticators.map(authenticator => {\n        if (authenticatorKey === authenticator.type) {\n          return this.mapAuthenticatorFromValues(authenticator);\n        }\n        return authenticator;\n      });\n    } else {\n      // add\n      this.values.authenticators = [\n        ...authenticators, \n        this.mapAuthenticatorFromValues()\n      ] as Authenticator[];\n    }\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  // Grab authenticator from authenticators list\n  protected getAuthenticatorFromValues(): Authenticator {\n    if (!this.values.authenticators) {\n      return null;\n    }\n\n    const authenticatorKey = this.getAuthenticator().key;\n    const authenticator = (this.values.authenticators as Authenticator[])\n      .find(authenticator => authenticator.key === authenticatorKey);\n    return authenticator;\n  }\n\n  protected mapAuthenticatorFromValues(authenticator?: Authenticator): Authenticator {\n    // add methodType to authenticator if it exists in values\n    const key = this.getAuthenticator().key;\n    const { methodType } = this.values;\n    return { \n      key, \n      ...(authenticator && authenticator),\n      ...(methodType && { methodType }) \n    };\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value\n      .find(({ name }) => name === 'authenticator');\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form.value.find(({ name }) => name === 'methodType')?.options;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData {\n  static remediationName = 'authenticator-verification-data';\n\n  values: AuthenticatorVerificationDataValues;\n\n  canRemediate() {\n    const authenticator = this.getAuthenticatorFromValues();\n    return !!(authenticator && authenticator.methodType);\n  }\n\n  mapAuthenticator() {\n    const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n    const authenticatorFromValues = this.getAuthenticatorFromValues();\n    return { \n      id: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'id').value,\n      enrollmentId: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'enrollmentId').value,\n      methodType: authenticatorFromValues.methodType,\n    };\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { name: 'methodType', type: 'string', required: true };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form.value];\n    return inputs;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { Authenticator } from '../types';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData {\n  static remediationName = 'authenticator-enrollment-data';\n\n  values: AuthenticatorEnrollmentDataValues;\n\n  canRemediate() {\n    const authenticator = this.getAuthenticatorFromValues();\n    return !!(authenticator && authenticator.methodType && authenticator.phoneNumber);\n  }\n\n  mapAuthenticator() {\n    const authenticatorFromValues = this.getAuthenticatorFromValues();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    return { \n      id: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'id').value,\n      methodType: authenticatorFromValues.methodType,\n      phoneNumber: authenticatorFromValues.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator() {\n    return [\n      { name: 'methodType', type: 'string', required: true },\n      { name: 'phoneNumber', type: 'string', required: true },\n    ];\n  }\n\n  protected mapAuthenticatorFromValues(authenticator?: Authenticator): Authenticator {\n    // get mapped authenticator from base class\n    authenticator = super.mapAuthenticatorFromValues(authenticator);\n\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    return { \n      ...authenticator, \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator {\n  static remediationName = 'skip';\n\n  values: SkipValues;\n\n  canRemediate() {\n    return !!this.values.skip;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { FlowMonitor, RemediationFlow } from './flow';\nimport * as remediators from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuth,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  FlowIdentifier,\n} from '../types';\nimport { IdxResponse, IdxRemediation } from './types/idx-js';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { ProceedOptions  } from './proceed';\n\nexport type RunOptions = ProceedOptions & {\n  flow?: FlowIdentifier;\n  remediators?: RemediationFlow;\n  flowMonitor?: FlowMonitor;\n  actions?: string[];\n}\n\nfunction getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP);\n  }\n\n  return res;\n}\n\nfunction getAvailableSteps(remediations: IdxRemediation[]): NextStep[] {\n  const res = [];\n\n  const remediatorMap = Object.values(remediators).reduce((map, remediatorClass) => {\n    // Only add concrete subclasses to the map\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n    return map;\n  }, {});\n\n  for (let remediation of remediations) {\n    const T = remediatorMap[remediation.name];\n    if (T) {\n      const remediator = new T(remediation);\n      res.push (remediator.getNextStep());\n    }\n  }\n\n  return res;\n}\n\nexport async function run(\n  authClient: OktaAuth, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let tokens;\n  let nextStep;\n  let messages;\n  let error;\n  let meta;\n  let enabledFeatures;\n  let availableSteps;\n  let status = IdxStatus.PENDING;\n  let shouldClearTransaction = false;\n  let idxResponse;\n  let interactionHandle;\n  let metaFromResp;\n\n  try {\n\n    const { flow, stateTokenExternalId, state } = options;\n\n    // Only one flow can be operating at a time\n    if (flow) {\n      authClient.idx.setFlow(flow);\n    }\n\n    // Try to resume saved transaction\n    metaFromResp = getSavedTransactionMeta(authClient, { state });\n    interactionHandle = metaFromResp?.interactionHandle; // may be undefined\n\n    if (!interactionHandle && !stateTokenExternalId) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, options); \n      interactionHandle = interactResponse.interactionHandle;\n      metaFromResp = interactResponse.meta;\n    }\n\n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { interactionHandle, stateTokenExternalId });\n\n    if (!options.remediators && !options.actions) {\n      // handle start transaction\n      meta = metaFromResp;\n      enabledFeatures = getEnabledFeatures(idxResponse);\n      availableSteps = getAvailableSteps(idxResponse.neededToProceed);\n    } else {\n      const values: remediators.RemediationValues = { \n        ...options, \n        stateHandle: idxResponse.rawIdxState.stateHandle \n      };\n\n      // Can we handle the remediations?\n      const { \n        idxResponse: idxResponseFromResp, \n        nextStep: nextStepFromResp,\n        terminal,\n        canceled,\n        messages: messagesFromResp,\n      } = await remediate(idxResponse, values, options);\n\n      // Track fields from remediation response\n      nextStep = nextStepFromResp;\n      messages = messagesFromResp;\n\n      // Save intermediate idx response in storage to reduce introspect call\n      if (nextStep && idxResponseFromResp) {\n        authClient.transactionManager.saveIdxResponse(idxResponseFromResp.rawIdxState);\n      }\n\n      if (terminal) {\n        status = IdxStatus.TERMINAL;\n        shouldClearTransaction = true;\n      } if (canceled) {\n        status = IdxStatus.CANCELED;\n        shouldClearTransaction = true;\n      } else if (idxResponseFromResp?.interactionCode) { \n        // Flows may end with interactionCode before the key remediation being hit\n        // Double check if flow is finished to mitigate confusion with the wrapper methods\n        if (!(await options.flowMonitor.isFinished())) {\n          throw new AuthSdkError('Current flow is not supported, check policy settings in your org.');\n        }\n\n        const {\n          clientId,\n          codeVerifier,\n          ignoreSignature,\n          redirectUri,\n          urls,\n          scopes,\n        } = metaFromResp;\n        tokens = await authClient.token.exchangeCodeForTokens({\n          interactionCode: idxResponseFromResp.interactionCode,\n          clientId,\n          codeVerifier,\n          ignoreSignature,\n          redirectUri,\n          scopes\n        }, urls);\n\n        status = IdxStatus.SUCCESS;\n        shouldClearTransaction = true;\n      }\n    }\n  } catch (err) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  }\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear();\n  }\n  \n  return {\n    _idxResponse: idxResponse, \n    status,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens: tokens.tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && { messages }),\n    ...(error && { error }),\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'redirect-idp': RedirectIdp\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../../types';\nimport { Remediator, RemediationValues, SkipValues } from '../remediators';\nimport { getTransactionMeta, saveTransactionMeta } from '../transactionMeta';\nimport { IdxRemediation } from '../types/idx-js';\n\nexport class FlowMonitor {\n  previousRemediator: Remediator;\n  authClient: OktaAuth;\n\n  constructor(authClient) {\n    this.authClient = authClient;\n  }\n\n  // detect in-memory loop\n  loopDetected(remediator: Remediator): boolean {\n    if (!this.previousRemediator) {\n      this.previousRemediator = remediator;\n      return false;\n    }\n\n    if (this.previousRemediator.getName() === remediator.getName()) {\n      return true;\n    }\n\n    this.previousRemediator = remediator;\n    return false;\n  }\n\n  isRemediatorCandidate(\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    remediator: Remediator, remediations?: IdxRemediation[], values?: RemediationValues & SkipValues\n  ): boolean {\n    const remediatorName = remediator.getName();\n    if (!values.skip && remediatorName === 'skip') {\n      return false;\n    }\n    if (values.skip && remediatorName !== 'skip') {\n      return false;\n    }\n    return true;\n  }\n\n  async trackRemediations(name: string) {\n    let meta = await getTransactionMeta(this.authClient);\n    const remediations = meta.remediations || [];\n    meta = { \n      ...meta, \n      remediations: [...remediations, name]\n    };\n    saveTransactionMeta(this.authClient, meta);\n  }\n\n  isFinished(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\n\nexport class AuthenticationFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    \n    if (remediatorName === 'select-authenticator-authenticate' \n      && ['select-authenticator-authenticate'].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-authenticate' \n      && remediations.some(({ name }) => name === 'challenge-authenticator')) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-enroll' \n      && [\n          'select-authenticator-enroll', \n          'authenticator-enrollment-data'\n        ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\nimport { getTransactionMeta } from '../transactionMeta';\n\nexport class PasswordRecoveryFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    \n    if (remediatorName === 'select-authenticator-authenticate' \n      && [\n        'select-authenticator-authenticate',\n        'reenroll-authenticator'\n      ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-authenticate' \n      && remediations.some(({ name }) => name === 'challenge-authenticator')) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n\n  async isFinished() {\n    const { remediations }  = await getTransactionMeta(this.authClient);\n    if (!remediations.includes('reset-authenticator')) {\n      return false;\n    }\n\n    return await super.isFinished();\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\n\nexport class RegistrationFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    if (remediatorName === 'select-authenticator-enroll' \n      && [\n          'select-authenticator-enroll', \n          'authenticator-enrollment-data'\n        ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n}\n","import { OktaAuth, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { AuthenticationFlowMonitor } from './AuthenticationFlowMonitor';\nimport { FlowMonitor } from './FlowMonitor';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { PasswordRecoveryFlowMonitor } from './PasswordRecoveryFlowMonitor';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { RegistrationFlowMonitor } from './RegistrationFlowMonitor';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  flowMonitor: FlowMonitor;\n  actions?: string[];\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuth, flow: FlowIdentifier = 'proceed'): FlowSpecification {\n  let remediators, flowMonitor, actions;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      flowMonitor = new RegistrationFlowMonitor(oktaAuth);\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      flowMonitor = new PasswordRecoveryFlowMonitor(oktaAuth);\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      break;\n    default:\n      // authenticate\n      remediators = AuthenticationFlow;\n      flowMonitor = new AuthenticationFlowMonitor(oktaAuth);\n      break;\n  }\n  return { flow, remediators, flowMonitor, actions };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuth,\n  IdxOptions,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { \n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\n\nexport type AuthenticationOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & SelectAuthenticatorEnrollValues\n  & ChallengeAuthenticatorValues \n  & ReEnrollAuthenticatorValues\n  & AuthenticatorEnrollmentDataValues\n  & EnrollAuthenticatorValues;\n\nexport async function authenticate(\n  authClient: OktaAuth, options: AuthenticationOptions\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'authenticate');\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuth, IdxOptions } from '../types';\nimport { run } from './run';\n\nexport type CancelOptions = IdxOptions;\n\nexport async function cancel (authClient: OktaAuth, options: CancelOptions) {\n  return run(authClient, {\n    ...options,\n    actions: ['cancel']\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuth,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { AuthenticationOptions } from './authenticate';\nimport { RegistrationOptions } from './register';\nimport { PasswordRecoveryOptions } from './recoverPassword';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { getFlowSpecification } from './flow';\nimport { AuthSdkError } from '../errors';\n\nexport type ProceedOptions = AuthenticationOptions\n  & RegistrationOptions\n  & PasswordRecoveryOptions;\n\nexport function canProceed(authClient: OktaAuth, options?: { state?: string }) {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!meta;\n}\n\nexport async function proceed(\n  authClient: OktaAuth,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n  const { stateTokenExternalId, state } = options;\n  const meta = getSavedTransactionMeta(authClient, { state });\n\n  // Proceed always needs saved transaction meta, except in the case of email verify callback\n  if (!meta && !stateTokenExternalId) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  // Determine the flow specification based on the saved flow\n  const flowSpec = getFlowSpecification(authClient, meta?.flow);\n\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuth, IdxOptions, IdxTransaction } from '../types';\n\n// This method only resolves { status: IdxStatus.PENDING } if transaction has already started\nexport async function startTransaction(\n  authClient: OktaAuth, \n  options: IdxOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, options);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { transactionMetaExist } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { \n  EnrollProfileValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SkipValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { AuthSdkError } from '../errors';\nimport { \n  IdxOptions, \n  IdxTransaction, \n  OktaAuth, \n  IdxFeature,\n  IdxStatus,\n} from '../types';\n\nexport type RegistrationOptions = IdxOptions \n  & EnrollProfileValues \n  & SelectAuthenticatorEnrollValues \n  & EnrollAuthenticatorValues \n  & AuthenticatorEnrollmentDataValues \n  & SkipValues;\n\nexport async function register(\n  authClient: OktaAuth, options: RegistrationOptions\n): Promise<IdxTransaction> {\n  // Only check at the beginning of the transaction\n  if (!transactionMetaExist(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { flow: 'register', ...options });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      return { status: IdxStatus.FAILURE, error };\n    }\n  }\n\n  const flowSpec = getFlowSpecification(authClient, 'register');\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues,\n  ResetAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuth, \n  IdxOptions, \n  IdxTransaction,\n} from '../types';\n\nexport type PasswordRecoveryOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & ChallengeAuthenticatorValues \n  & ResetAuthenticatorValues\n  & AuthenticatorVerificationDataValues\n  & ReEnrollAuthenticatorValues;\n\nexport async function recoverPassword(\n  authClient: OktaAuth, options: PasswordRecoveryOptions\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    throw new OAuthError(error, searchParams.get('error_description'));\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// BETA - SUBJECT TO CHANGE\n// Currently we must modify request headers using the single instance of `idx.client.interceptors` exported from IDX-JS\n// This means that multiple instances of OktaAuth will see the same header modifications\n// TODO: use AuthJS http agent for IDX API requests. OKTA-417473\nimport { OktaAuth } from '../types';\nimport idx from '@okta/okta-idx-js';\nexport function setGlobalRequestInterceptor(fn) {\n  idx.client.interceptors.request.use(fn);\n}\n\n// A factory which returns a function that can be passed to `setGlobalRequestInterceptor`\nexport function createGlobalRequestInterceptor(sdk: OktaAuth) {\n  return function (requestConfig) {\n    // Set user-agent and any other custom headers set in the options\n    var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n    const headers = Object.assign({\n      ...oktaUserAgentHeader\n    }, sdk.options.headers);\n    Object.keys(headers).forEach(name => {\n      requestConfig.headers[name] = headers[name];\n    });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\nimport { isBrowser } from './features';\n\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* SDK_VERSION is defined in webpack config */ \n/* global window, SDK_VERSION */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuth as SDKInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspect,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n  isEmailVerifyCallback,\n  EmailVerifyCallbackResponse,\n  parseEmailVerifyCallback\n} from './util';\nimport { getUserAgent } from './builderUtil';\nimport { TokenManager } from './TokenManager';\nimport { get, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport StorageManager from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect as introspectV2,\n  authenticate,\n  cancel,\n  proceed,\n  register,\n  recoverPassword,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n} from './idx';\nimport { createGlobalRequestInterceptor, setGlobalRequestInterceptor } from './idx/headers';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\n\nconst Emitter = require('tiny-emitter');\n\nclass OktaAuth implements SDKInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  // keep this field to compatible with released downstream SDK versions\n  // TODO: remove in version 6\n  // JIRA: https://oktainc.atlassian.net/browse/OKTA-419417\n  userAgent: string;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI;\n  features: FeaturesAPI;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: typeof Emitter;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n  \n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          const storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspect.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n      this.userAgent = getUserAgent(args, `okta-auth-js/${SDK_VERSION}`);\n    } else {\n      this.userAgent = getUserAgent(args, `okta-auth-js-server/${SDK_VERSION}`);\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirect.bind(null, this),\n      parseFromUrl: parseFromUrl.bind(null, this),\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = ['decode', 'isLoginRedirect'];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n    \n    Object.assign(this.token.getWithRedirect, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    Object.assign(this.token.parseFromUrl, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n\n    // IDX\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspectV2.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      startTransaction: startTransaction.bind(null, this),\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n    };\n    setGlobalRequestInterceptor(createGlobalRequestInterceptor(this)); // to pass custom headers to IDX endpoints\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n  }\n\n  start() {\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n  }\n\n  stop() {\n    this.tokenManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n  // ES6 module users can use named exports to access all symbols\n  // CommonJS module users (CDN) need all exports on this object\n\n  // Utility methods for interaction code flow\n  isInteractionRequired(hashOrSearch?: string): boolean {\n    return isInteractionRequired(this, hashOrSearch);\n  }\n\n  isInteractionRequiredError(error: Error): boolean {\n    return isInteractionRequiredError(error);\n  }\n\n  // Utility methods for email verify callback\n  isEmailVerifyCallback(urlPath: string): boolean {\n    return isEmailVerifyCallback(urlPath);\n  }\n\n  parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n    return parseEmailVerifyCallback(urlPath);\n  }\n\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    // TODO: support interaction code flow\n    // Authn V1 flow\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n  \n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<object> {\n    // Clear all local tokens\n    this.tokenManager.clear();\n  \n    return this.session.close() // DELETE /api/v1/sessions/me\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<object> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<object> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    // Clear all local tokens\n    this.tokenManager.clear();\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(): Promise<boolean> {\n\n    let { accessToken, idToken } = this.tokenManager.getTokensSync();\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = null;\n      if (autoRenew) {\n        accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = null;\n      if (autoRenew) {\n        idToken = await this.tokenManager.renew('idToken') as IDToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      // For redirect flow, get state from the URL and use it to retrieve the originalUri\n      const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n      state = oAuthResponse.state;\n      originalUri = originalUri || this.getOriginalUri(state);\n      await this.storeTokensFromRedirect();\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    return this.options.issuer.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n}\n\n// Hoist feature detection functions to static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist values and utility functions for CommonJS users\nObject.assign(OktaAuth, {\n  constants,\n  isInteractionRequiredError\n});\n\nexport default OktaAuth;"]},"metadata":{},"sourceType":"module"}